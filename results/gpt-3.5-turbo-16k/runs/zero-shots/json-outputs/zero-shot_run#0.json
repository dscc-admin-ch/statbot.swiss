[
  {
    "i": 0,
    "question": "Which offences had over 10,000 incidents in Switzerland in 2022. Provide the criminal codes and the number of incidents.",
    "query": "SELECT T.offence_criminal_code,\n  SUM(T.number_criminal_offences_registered) AS offences_per_year\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered > 10000\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.year, T.offence_criminal_code\nORDER BY offences_per_year DESC;\n",
    "db_id": "criminal_offences_registered_by_police",
    "generated_query": "SELECT offence_criminal_code, number_criminal_offences_registered\nFROM experiment.criminal_offences_registered_by_police\nWHERE year = 2022 AND number_criminal_offences_registered > 10000;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.criminal_offences_registered_by_police (\n\tuid SERIAL NOT NULL, \n\toffence_criminal_code TEXT, \n\tyear INTEGER, \n\toffence_category TEXT, \n\tnumber_criminal_offences_registered NUMERIC, \n\tnumber_criminal_offences_unsolved NUMERIC, \n\tnumber_criminal_offences_solved NUMERIC, \n\tnumber_criminal_offences_completed NUMERIC, \n\tnumber_criminal_offences_completed_unsolved NUMERIC, \n\tnumber_criminal_offences_completed_solved NUMERIC, \n\tnumber_criminal_offences_attempted NUMERIC, \n\tnumber_criminal_offences_attempted_unsolved NUMERIC, \n\tnumber_criminal_offences_attempted_solved NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT criminal_offences_registered_by_police_pkey PRIMARY KEY (uid), \n\tCONSTRAINT criminal_offences_registered_by_police_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in criminal_offences_registered_by_police and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\noffence_criminal_code : Serious assault (art. 122), Forced marriage, forced registered partnership (art. 181a), Homicide through negligence (art. 117), Unlawful entry (art. 186), Sexual acts with children (art. 187)\nnumber_criminal_offences_registered : 171, 4, 23, 50210, 543\nnumber_criminal_offences_unsolved : 1260, 551, 69, 4, 1381\nnumber_criminal_offences_solved : 1049, 69, 4, 219, 880\nnumber_criminal_offences_completed : 569, 4, 3788, 23, 13104\nnumber_criminal_offences_completed_unsolved : 202, 16819, 147, 4, 1117\nnumber_criminal_offences_completed_solved : 69, 1169, 4, 129, 783\nnumber_criminal_offences_attempted : 104, 45, 69, 4, 61\nnumber_criminal_offences_attempted_unsolved : 202, 147, 4, 156, 11\nnumber_criminal_offences_attempted_solved : 171, 108, 4, 11, 59\n*/\n\n/*\nColumn name, Column discription, Example values\noffence_criminal_code, offence as defined by Swiss criminal code, Vehicle burglary (art. 139),Falsification of money (art. 241)\nnumber_criminal_offences_registered, number of criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_unsolved, number of unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_solved, number of resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed, number of completed criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_unsolved, Number of completed and unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_solved, Number of completed and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted, number of attempted criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_unsolved, number of attempted und unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_solved, number of attempted and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\noffence_category, broad Category of criminal offence, Property,Liberty\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Which offences had over 10,000 incidents in Switzerland in 2022. Provide the criminal codes and the number of incidents.\n    ### SQL query:\n\n",
    "process_time": 13.501856406917796,
    "num_tokens": 1479,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 1,
    "question": "What is the most committed crime in Switzerland?",
    "query": "SELECT T.offence_criminal_code AS most_common_criminal_offence\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.offence_criminal_code != 'Offence - total'\n  AND T.number_criminal_offences_registered IS NOT NULL\nGROUP BY T.offence_criminal_code\nORDER BY SUM(T.number_criminal_offences_registered) DESC LIMIT 1;\n",
    "db_id": "criminal_offences_registered_by_police",
    "generated_query": "SELECT offence_criminal_code, SUM(number_criminal_offences_registered) AS total_offences\nFROM experiment.criminal_offences_registered_by_police\nGROUP BY offence_criminal_code\nORDER BY total_offences DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.criminal_offences_registered_by_police (\n\tuid SERIAL NOT NULL, \n\toffence_criminal_code TEXT, \n\tyear INTEGER, \n\toffence_category TEXT, \n\tnumber_criminal_offences_registered NUMERIC, \n\tnumber_criminal_offences_unsolved NUMERIC, \n\tnumber_criminal_offences_solved NUMERIC, \n\tnumber_criminal_offences_completed NUMERIC, \n\tnumber_criminal_offences_completed_unsolved NUMERIC, \n\tnumber_criminal_offences_completed_solved NUMERIC, \n\tnumber_criminal_offences_attempted NUMERIC, \n\tnumber_criminal_offences_attempted_unsolved NUMERIC, \n\tnumber_criminal_offences_attempted_solved NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT criminal_offences_registered_by_police_pkey PRIMARY KEY (uid), \n\tCONSTRAINT criminal_offences_registered_by_police_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in criminal_offences_registered_by_police and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\noffence_criminal_code : Serious assault (art. 122), Forced marriage, forced registered partnership (art. 181a), Homicide through negligence (art. 117), Unlawful entry (art. 186), Sexual acts with children (art. 187)\nnumber_criminal_offences_registered : 171, 4, 23, 50210, 543\nnumber_criminal_offences_unsolved : 1260, 551, 69, 4, 1381\nnumber_criminal_offences_solved : 1049, 69, 4, 219, 880\nnumber_criminal_offences_completed : 569, 4, 3788, 23, 13104\nnumber_criminal_offences_completed_unsolved : 202, 16819, 147, 4, 1117\nnumber_criminal_offences_completed_solved : 69, 1169, 4, 129, 783\nnumber_criminal_offences_attempted : 104, 45, 69, 4, 61\nnumber_criminal_offences_attempted_unsolved : 202, 147, 4, 156, 11\nnumber_criminal_offences_attempted_solved : 171, 108, 4, 11, 59\n*/\n\n/*\nColumn name, Column discription, Example values\noffence_criminal_code, offence as defined by Swiss criminal code, Vehicle burglary (art. 139),Falsification of money (art. 241)\nnumber_criminal_offences_registered, number of criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_unsolved, number of unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_solved, number of resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed, number of completed criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_unsolved, Number of completed and unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_solved, Number of completed and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted, number of attempted criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_unsolved, number of attempted und unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_solved, number of attempted and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\noffence_category, broad Category of criminal offence, Property,Liberty\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What is the most committed crime in Switzerland?\n    ### SQL query:\n\n",
    "process_time": 7.719756241887808,
    "num_tokens": 1462,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 2,
    "question": "What was the clearance rate for bribery in 2021 in Switzerland",
    "query": "SELECT 100 * SUM(T.number_criminal_offences_solved) / SUM(T.number_criminal_offences_registered)\nAS clearance_rate_for_bribery\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2021\n  AND T.number_criminal_offences_registered IS NOT NULL\n  AND T.offence_category = 'Bribery';\n",
    "db_id": "criminal_offences_registered_by_police",
    "generated_query": "SELECT (number_criminal_offences_completed_solved / number_criminal_offences_registered) * 100 AS clearance_rate\nFROM experiment.criminal_offences_registered_by_police\nWHERE offence_category = 'Bribery' AND year = 2021",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.criminal_offences_registered_by_police (\n\tuid SERIAL NOT NULL, \n\toffence_criminal_code TEXT, \n\tyear INTEGER, \n\toffence_category TEXT, \n\tnumber_criminal_offences_registered NUMERIC, \n\tnumber_criminal_offences_unsolved NUMERIC, \n\tnumber_criminal_offences_solved NUMERIC, \n\tnumber_criminal_offences_completed NUMERIC, \n\tnumber_criminal_offences_completed_unsolved NUMERIC, \n\tnumber_criminal_offences_completed_solved NUMERIC, \n\tnumber_criminal_offences_attempted NUMERIC, \n\tnumber_criminal_offences_attempted_unsolved NUMERIC, \n\tnumber_criminal_offences_attempted_solved NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT criminal_offences_registered_by_police_pkey PRIMARY KEY (uid), \n\tCONSTRAINT criminal_offences_registered_by_police_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in criminal_offences_registered_by_police and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\noffence_criminal_code : Serious assault (art. 122), Forced marriage, forced registered partnership (art. 181a), Homicide through negligence (art. 117), Unlawful entry (art. 186), Sexual acts with children (art. 187)\nnumber_criminal_offences_registered : 171, 4, 23, 50210, 543\nnumber_criminal_offences_unsolved : 1260, 551, 69, 4, 1381\nnumber_criminal_offences_solved : 1049, 69, 4, 219, 880\nnumber_criminal_offences_completed : 569, 4, 3788, 23, 13104\nnumber_criminal_offences_completed_unsolved : 202, 16819, 147, 4, 1117\nnumber_criminal_offences_completed_solved : 69, 1169, 4, 129, 783\nnumber_criminal_offences_attempted : 104, 45, 69, 4, 61\nnumber_criminal_offences_attempted_unsolved : 202, 147, 4, 156, 11\nnumber_criminal_offences_attempted_solved : 171, 108, 4, 11, 59\n*/\n\n/*\nColumn name, Column discription, Example values\noffence_criminal_code, offence as defined by Swiss criminal code, Vehicle burglary (art. 139),Falsification of money (art. 241)\nnumber_criminal_offences_registered, number of criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_unsolved, number of unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_solved, number of resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed, number of completed criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_unsolved, Number of completed and unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_solved, Number of completed and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted, number of attempted criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_unsolved, number of attempted und unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_solved, number of attempted and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\noffence_category, broad Category of criminal offence, Property,Liberty\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What was the clearance rate for bribery in 2021 in Switzerland\n    ### SQL query:\n\n",
    "process_time": 4.446521404897794,
    "num_tokens": 1467,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 3,
    "question": "List for each year the number of forests in Kanton Uri?",
    "query": "SELECT T.year, SUM(T.number_of_plantations) AS number_of_plantations_canton_uri\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE' AND S.name_de LIKE '%Uri%'\n  AND T.type_of_owner = 'Type of owners - total'\n  AND T.wood_species = 'Species - total'\n  AND T.forest_zone != 'Switzerland'\n  AND T.number_of_plantations != 0\nGROUP BY T.year\nORDER BY T.year DESC;\n",
    "db_id": "number_of_plantations_in_swiss_forest",
    "generated_query": "SELECT year, COUNT(*) AS number_of_forests\nFROM experiment.number_of_plantations_in_swiss_forest\nJOIN experiment.spatial_unit ON experiment.number_of_plantations_in_swiss_forest.spatialunit_uid = experiment.spatial_unit.spatialunit_uid\nWHERE experiment.spatial_unit.name = 'Uri' AND experiment.spatial_unit.canton = true\nGROUP BY year\nORDER BY year;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.number_of_plantations_in_swiss_forest (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tforest_zone TEXT, \n\ttype_of_owner TEXT, \n\twood_species TEXT, \n\tnumber_of_plantations NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT number_of_plantations_in_swiss_forest_pkey PRIMARY KEY (uid), \n\tCONSTRAINT number_of_plantations_in_swiss_forest_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in number_of_plantations_in_swiss_forest and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nnumber_of_plantations : 2330950, 43755, 785652, 747925, 2000\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nforest_zone, forest zone, Switzerland,Jura,Central Plain\ntype_of_owner, owner type, Type of owners - total,Public forest,Private forest\nwood_species, wood species group, Species - total,Hardwood (deciduous),Softwood (conifers)\nnumber_of_plantations, number of plantations, 14987125 ,11537284 ,3449841\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    List for each year the number of forests in Kanton Uri?\n    ### SQL query:\n\n",
    "process_time": 16.805341579951346,
    "num_tokens": 958,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 4,
    "question": "What were proportions, in percent, of deciduous and coniferous forests in Switzerland in 2020?",
    "query": "SELECT\n  ROUND(100 * SUM(CASE WHEN LOWER(wood_species) LIKE '%deciduous%'\n       THEN number_of_plantations ELSE 0 END) /\n  SUM(CASE WHEN LOWER(wood_species) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END),\n  2) AS percentage_deciduous_forests,\n    ROUND(100 * SUM(CASE WHEN LOWER(wood_species) LIKE '%conifers%'\n       THEN number_of_plantations ELSE 0 END) /\n   SUM(CASE WHEN LOWER(wood_species) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END),\n  2) AS percentage_coniferous_forests\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year = 2020\n  AND S.name = 'Switzerland'\n  AND T.type_of_owner = 'Type of owners - total';\n",
    "db_id": "number_of_plantations_in_swiss_forest",
    "generated_query": "SELECT \n    (SUM(CASE WHEN wood_species = 'Hardwood (deciduous)' THEN number_of_plantations ELSE 0 END) / \n    SUM(number_of_plantations)) * 100 AS deciduous_forest_percentage,\n    (SUM(CASE WHEN wood_species = 'Softwood (conifers)' THEN number_of_plantations ELSE 0 END) / \n    SUM(number_of_plantations)) * 100 AS coniferous_forest_percentage\nFROM \n    experiment.number_of_plantations_in_swiss_forest\nWHERE \n    year = 2020\n    AND forest_zone = 'Switzerland'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.number_of_plantations_in_swiss_forest (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tforest_zone TEXT, \n\ttype_of_owner TEXT, \n\twood_species TEXT, \n\tnumber_of_plantations NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT number_of_plantations_in_swiss_forest_pkey PRIMARY KEY (uid), \n\tCONSTRAINT number_of_plantations_in_swiss_forest_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in number_of_plantations_in_swiss_forest and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nnumber_of_plantations : 2330950, 43755, 785652, 747925, 2000\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nforest_zone, forest zone, Switzerland,Jura,Central Plain\ntype_of_owner, owner type, Type of owners - total,Public forest,Private forest\nwood_species, wood species group, Species - total,Hardwood (deciduous),Softwood (conifers)\nnumber_of_plantations, number of plantations, 14987125 ,11537284 ,3449841\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What were proportions, in percent, of deciduous and coniferous forests in Switzerland in 2020?\n    ### SQL query:\n\n",
    "process_time": 20.43480804003775,
    "num_tokens": 967,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 5,
    "question": "By 2022: Which three forest zones had the most plantations in Switzerland? Provide the forest zones together with the number of plantations.",
    "query": "SELECT T.forest_zone, SUM(T.number_of_plantations) as number_of_plantations\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.type_of_owner = 'Type of owners - total'\n  AND T.year = 2022\n  AND T.number_of_plantations != 0 AND number_of_plantations IS NOT NULL\n  AND T.forest_zone != 'Switzerland'\nGROUP BY T.forest_zone\nORDER BY number_of_plantations DESC LIMIT 3;\n",
    "db_id": "number_of_plantations_in_swiss_forest",
    "generated_query": "SELECT forest_zone, SUM(number_of_plantations) AS total_plantations\nFROM experiment.number_of_plantations_in_swiss_forest\nWHERE year <= 2022\nGROUP BY forest_zone\nORDER BY total_plantations DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.number_of_plantations_in_swiss_forest (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tforest_zone TEXT, \n\ttype_of_owner TEXT, \n\twood_species TEXT, \n\tnumber_of_plantations NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT number_of_plantations_in_swiss_forest_pkey PRIMARY KEY (uid), \n\tCONSTRAINT number_of_plantations_in_swiss_forest_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in number_of_plantations_in_swiss_forest and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nnumber_of_plantations : 2330950, 43755, 785652, 747925, 2000\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nforest_zone, forest zone, Switzerland,Jura,Central Plain\ntype_of_owner, owner type, Type of owners - total,Public forest,Private forest\nwood_species, wood species group, Species - total,Hardwood (deciduous),Softwood (conifers)\nnumber_of_plantations, number of plantations, 14987125 ,11537284 ,3449841\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    By 2022: Which three forest zones had the most plantations in Switzerland? Provide the forest zones together with the number of plantations.\n    ### SQL query:\n\n",
    "process_time": 4.318639182951301,
    "num_tokens": 974,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 6,
    "question": "How many FTE were allocated to tourism were there in Switzerland 2019?",
    "query": "SELECT T.total_full_time_employment_of_tourism\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND S.name = 'Switzerland'\n    AND T.year = 2019;\n",
    "db_id": "tourism_economy_by_canton",
    "generated_query": "SELECT total_full_time_employment_of_tourism\nFROM experiment.tourism_economy_by_canton\nWHERE year = 2019\nAND spatialunit_uid = 'CH_A.ADM1'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.tourism_economy_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tmio_chf_gross_value_added_of_tourism NUMERIC, \n\tpercent_share_gross_value_added_of_tourism NUMERIC, \n\ttotal_full_time_employment_of_tourism NUMERIC, \n\tpercent_share_full_time_employment_of_tourism NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT tourism_economy_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT tourism_economy_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in tourism_economy_by_canton and 5 examples in each column for high cardinality columns :\nuid : 69, 4, 23, 95, 36\nmio_chf_gross_value_added_of_tourism : 3892.769999999999982, 400.949999999999989, 862.029999999999973, 1228.839999999999918, 144.500000000000000\npercent_share_gross_value_added_of_tourism : 1.33000000000000007, 6.49000000000000021, 10.23000000000000043, 1.89999999999999991, 1.56000000000000005\ntotal_full_time_employment_of_tourism : 3481.73000000000002, 5668.30000000000018, 1918.06999999999994, 30969.65999999999985, 9970.43000000000029\npercent_share_full_time_employment_of_tourism : 2.9600000000000000, 4.9699999999999998, 2.3500000000000001, 6.7699999999999996, 5.1500000000000004\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nmio_chf_gross_value_added_of_tourism, Amount in million CHF of Gross Value that was added by tourism, None\npercent_share_gross_value_added_of_tourism, Percentage share of Gross Value that was added by tourism, None\ntotal_full_time_employment_of_tourism, Full time employment in Tourism, None\npercent_share_full_time_employment_of_tourism, Percentage share of full time employment in tourism, None\n*/\n\n   \n    ### Question: \n    How many FTE were allocated to tourism were there in Switzerland 2019?\n    ### SQL query:\n\n",
    "process_time": 11.411616160068661,
    "num_tokens": 1207,
    "hardness": "medium",
    "lang": "en"
  },
  {
    "i": 7,
    "question": "Which canton has the most employees in the tourism sector in 2019?",
    "query": "SELECT S.name AS canton\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY T.total_full_time_employment_of_tourism DESC LIMIT 1;\n",
    "db_id": "tourism_economy_by_canton",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.tourism_economy_by_canton\nWHERE year = 2019\nORDER BY total_full_time_employment_of_tourism DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.tourism_economy_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tmio_chf_gross_value_added_of_tourism NUMERIC, \n\tpercent_share_gross_value_added_of_tourism NUMERIC, \n\ttotal_full_time_employment_of_tourism NUMERIC, \n\tpercent_share_full_time_employment_of_tourism NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT tourism_economy_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT tourism_economy_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in tourism_economy_by_canton and 5 examples in each column for high cardinality columns :\nuid : 69, 4, 23, 95, 36\nmio_chf_gross_value_added_of_tourism : 3892.769999999999982, 400.949999999999989, 862.029999999999973, 1228.839999999999918, 144.500000000000000\npercent_share_gross_value_added_of_tourism : 1.33000000000000007, 6.49000000000000021, 10.23000000000000043, 1.89999999999999991, 1.56000000000000005\ntotal_full_time_employment_of_tourism : 3481.73000000000002, 5668.30000000000018, 1918.06999999999994, 30969.65999999999985, 9970.43000000000029\npercent_share_full_time_employment_of_tourism : 2.9600000000000000, 4.9699999999999998, 2.3500000000000001, 6.7699999999999996, 5.1500000000000004\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nmio_chf_gross_value_added_of_tourism, Amount in million CHF of Gross Value that was added by tourism, None\npercent_share_gross_value_added_of_tourism, Percentage share of Gross Value that was added by tourism, None\ntotal_full_time_employment_of_tourism, Full time employment in Tourism, None\npercent_share_full_time_employment_of_tourism, Percentage share of full time employment in tourism, None\n*/\n\n   \n    ### Question: \n    Which canton has the most employees in the tourism sector in 2019?\n    ### SQL query:\n\n",
    "process_time": 3.4309845271054655,
    "num_tokens": 1207,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 8,
    "question": "What canton got the most money from tourism in 2016?",
    "query": "SELECT S.name AS canton\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2016\nORDER BY T.mio_chf_gross_value_added_of_tourism DESC LIMIT 1;\n",
    "db_id": "tourism_economy_by_canton",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.tourism_economy_by_canton\nWHERE year = 2016\nORDER BY mio_chf_gross_value_added_of_tourism DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.tourism_economy_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tmio_chf_gross_value_added_of_tourism NUMERIC, \n\tpercent_share_gross_value_added_of_tourism NUMERIC, \n\ttotal_full_time_employment_of_tourism NUMERIC, \n\tpercent_share_full_time_employment_of_tourism NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT tourism_economy_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT tourism_economy_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in tourism_economy_by_canton and 5 examples in each column for high cardinality columns :\nuid : 69, 4, 23, 95, 36\nmio_chf_gross_value_added_of_tourism : 3892.769999999999982, 400.949999999999989, 862.029999999999973, 1228.839999999999918, 144.500000000000000\npercent_share_gross_value_added_of_tourism : 1.33000000000000007, 6.49000000000000021, 10.23000000000000043, 1.89999999999999991, 1.56000000000000005\ntotal_full_time_employment_of_tourism : 3481.73000000000002, 5668.30000000000018, 1918.06999999999994, 30969.65999999999985, 9970.43000000000029\npercent_share_full_time_employment_of_tourism : 2.9600000000000000, 4.9699999999999998, 2.3500000000000001, 6.7699999999999996, 5.1500000000000004\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nmio_chf_gross_value_added_of_tourism, Amount in million CHF of Gross Value that was added by tourism, None\npercent_share_gross_value_added_of_tourism, Percentage share of Gross Value that was added by tourism, None\ntotal_full_time_employment_of_tourism, Full time employment in Tourism, None\npercent_share_full_time_employment_of_tourism, Percentage share of full time employment in tourism, None\n*/\n\n   \n    ### Question: \n    What canton got the most money from tourism in 2016?\n    ### SQL query:\n\n",
    "process_time": 10.187071430962533,
    "num_tokens": 1205,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 9,
    "question": "What kind of animal farms existed in Kanton Uri in 2012? Give the number of each farm type.",
    "query": "SELECT beef_cattle_and_cows_farm, horse_and_other_equine_farm,\n  sheep_farm, goat_farm, pig_farms, poultry_farm, farms_with_other_animals\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name LIKE '%Uri%'\n    AND S.canton = 'TRUE'\n    AND T.year = 2012\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT \n    beef_cattle_and_cows_farm,\n    horse_and_other_equine_farm,\n    sheep_farm,\n    goat_farm,\n    pig_farms,\n    poultry_farm,\n    farms_with_other_animals\nFROM \n    experiment.employees_farmholdings_agricultural_area_livestock_per_canton\nWHERE \n    spatialunit_uid = 'UR' AND year = 2012;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nfarmholdings : 76179, 55207, 7284, 7032, 328\nemployees_total : 11098, 1260, 126301, 8714, 129975\nfull_time_employees_75_percent_or_more : 77600, 77880, 66453, 5314, 475\npart_time_employees_50_75_percent : 3559, 22970, 2094, 24465, 220\npart_time_employees_2_less_than_50_percent : 54682, 6636, 4005, 470, 5339\nemployees_men : 11465, 6355, 123525, 11582, 6924\nemployees_women : 46593, 63541, 444, 3900, 3788\nemployees_women_manager_label : 2804, 171, 192, 36, 2714\nemployees_swiss : 783, 132406, 159547, 11332, 11272\nemployees_foreign_nationals : 1260, 1068, 3664, 957, 1381\nfamily_employees : 18404, 94913, 8437, 157683, 131632\nbeef_cattle_and_cows_farm : 36131, 2193, 45429, 3129, 4635\nhorse_and_other_equine_farm : 1761, 13028, 1250, 1113, 912\nsheep_farm : 6747, 542, 1784, 917, 1700\ngoat_farm : 1260, 6355, 69, 5151, 219\npig_farms : 202, 171, 13794, 6570, 219\npoultry_farm : 171, 147, 2193, 15049, 1566\nfarms_with_other_animals : 569, 8748, 912, 6138, 56\nutilised_agricultural_area_in_hectares : 76180.050000000002910, 1051747.429000000003725, 66896.389999999999418, 76486.660000000003492, 6907.329999999999927\narable_land_in_hectares : 4430.869999999999890861, 29013.819999999999708962, 13406.046899999999368447, 28569.580000000001746230, 29898.090000000000145519\ngrassland_in_hectares : 6195.500000000000000, 40908.029999999998836, 99247.320000000006985, 41872.449999999997090, 628802.445900000049733\npermanent_crops_in_hectares : 23438.869999999998981366, 2743.246500000000196451, 22918.369999999998981366, 195.650000000000005684, 1493.017800000000079308\nother_utilised_agricultural_area_in_hectares : 1314.430000000000063665, 10073.000000000000000000, 10936.317900000000008731, 10078.500000000000000000, 264.170000000000015916\nlivestock_beef_cattle_and_cows : 1306001, 86178, 1304122, 1544547, 93491\nlivestock_horses_and_other_equines : 75354, 51485, 11200, 6354, 79345\nlivestock_sheep : 402772, 424018, 13722, 2218, 417274\nlivestock_goats : 54756, 2293, 22439, 2598, 78146\nlivestock_pigs : 559, 12165, 1558101, 18690, 38953\nlivestock_poultry : 432001, 10824616, 7238221, 10740590, 484440\nlivestock_other_animals : 13028, 5849, 444, 4793, 274072\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What kind of animal farms existed in Kanton Uri in 2012? Give the number of each farm type.\n    ### SQL query:\n\n",
    "process_time": 21.292753434972838,
    "num_tokens": 2762,
    "hardness": "hard",
    "lang": "en"
  },
  {
    "i": 10,
    "question": "How many farms were there in all of Switzerland between 2012 and 2018?",
    "query": "SELECT year, farmholdings\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n    AND S.country = 'TRUE'\n    AND year BETWEEN 2012 AND 2018\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT SUM(farmholdings) AS total_farms\nFROM experiment.employees_farmholdings_agricultural_area_livestock_per_canton\nWHERE year BETWEEN 2012 AND 2018;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nfarmholdings : 76179, 55207, 7284, 7032, 328\nemployees_total : 11098, 1260, 126301, 8714, 129975\nfull_time_employees_75_percent_or_more : 77600, 77880, 66453, 5314, 475\npart_time_employees_50_75_percent : 3559, 22970, 2094, 24465, 220\npart_time_employees_2_less_than_50_percent : 54682, 6636, 4005, 470, 5339\nemployees_men : 11465, 6355, 123525, 11582, 6924\nemployees_women : 46593, 63541, 444, 3900, 3788\nemployees_women_manager_label : 2804, 171, 192, 36, 2714\nemployees_swiss : 783, 132406, 159547, 11332, 11272\nemployees_foreign_nationals : 1260, 1068, 3664, 957, 1381\nfamily_employees : 18404, 94913, 8437, 157683, 131632\nbeef_cattle_and_cows_farm : 36131, 2193, 45429, 3129, 4635\nhorse_and_other_equine_farm : 1761, 13028, 1250, 1113, 912\nsheep_farm : 6747, 542, 1784, 917, 1700\ngoat_farm : 1260, 6355, 69, 5151, 219\npig_farms : 202, 171, 13794, 6570, 219\npoultry_farm : 171, 147, 2193, 15049, 1566\nfarms_with_other_animals : 569, 8748, 912, 6138, 56\nutilised_agricultural_area_in_hectares : 76180.050000000002910, 1051747.429000000003725, 66896.389999999999418, 76486.660000000003492, 6907.329999999999927\narable_land_in_hectares : 4430.869999999999890861, 29013.819999999999708962, 13406.046899999999368447, 28569.580000000001746230, 29898.090000000000145519\ngrassland_in_hectares : 6195.500000000000000, 40908.029999999998836, 99247.320000000006985, 41872.449999999997090, 628802.445900000049733\npermanent_crops_in_hectares : 23438.869999999998981366, 2743.246500000000196451, 22918.369999999998981366, 195.650000000000005684, 1493.017800000000079308\nother_utilised_agricultural_area_in_hectares : 1314.430000000000063665, 10073.000000000000000000, 10936.317900000000008731, 10078.500000000000000000, 264.170000000000015916\nlivestock_beef_cattle_and_cows : 1306001, 86178, 1304122, 1544547, 93491\nlivestock_horses_and_other_equines : 75354, 51485, 11200, 6354, 79345\nlivestock_sheep : 402772, 424018, 13722, 2218, 417274\nlivestock_goats : 54756, 2293, 22439, 2598, 78146\nlivestock_pigs : 559, 12165, 1558101, 18690, 38953\nlivestock_poultry : 432001, 10824616, 7238221, 10740590, 484440\nlivestock_other_animals : 13028, 5849, 444, 4793, 274072\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many farms were there in all of Switzerland between 2012 and 2018?\n    ### SQL query:\n\n",
    "process_time": 4.280741227092221,
    "num_tokens": 2757,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 11,
    "question": "How was the farmland used in organic farming in 2017? Provide land usage in percentage of the farming area.",
    "query": "SELECT ROUND(100 * T.arable_land_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_arable_land,\n  ROUND(100 * T.grassland_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_grassland,\n  ROUND(100 * T.permanent_crops_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_permanent_crops,\n  ROUND(100 * T.other_utilised_agricultural_area_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS precentage_other_usage\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2015\n    AND T.farmholding_system = 'Organic farming';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT \n    (SUM(utilised_agricultural_area_in_hectares) / \n    (SELECT SUM(utilised_agricultural_area_in_hectares) \n    FROM experiment.employees_farmholdings_agricultural_area_livestock_per_canton \n    WHERE farmholding_system = 'Organic farming' AND year = 2017)) * 100 \n    AS land_usage_percentage\nFROM experiment.employees_farmholdings_agricultural_area_livestock_per_canton \nWHERE farmholding_system = 'Organic farming' AND year = 2017;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nfarmholdings : 76179, 55207, 7284, 7032, 328\nemployees_total : 11098, 1260, 126301, 8714, 129975\nfull_time_employees_75_percent_or_more : 77600, 77880, 66453, 5314, 475\npart_time_employees_50_75_percent : 3559, 22970, 2094, 24465, 220\npart_time_employees_2_less_than_50_percent : 54682, 6636, 4005, 470, 5339\nemployees_men : 11465, 6355, 123525, 11582, 6924\nemployees_women : 46593, 63541, 444, 3900, 3788\nemployees_women_manager_label : 2804, 171, 192, 36, 2714\nemployees_swiss : 783, 132406, 159547, 11332, 11272\nemployees_foreign_nationals : 1260, 1068, 3664, 957, 1381\nfamily_employees : 18404, 94913, 8437, 157683, 131632\nbeef_cattle_and_cows_farm : 36131, 2193, 45429, 3129, 4635\nhorse_and_other_equine_farm : 1761, 13028, 1250, 1113, 912\nsheep_farm : 6747, 542, 1784, 917, 1700\ngoat_farm : 1260, 6355, 69, 5151, 219\npig_farms : 202, 171, 13794, 6570, 219\npoultry_farm : 171, 147, 2193, 15049, 1566\nfarms_with_other_animals : 569, 8748, 912, 6138, 56\nutilised_agricultural_area_in_hectares : 76180.050000000002910, 1051747.429000000003725, 66896.389999999999418, 76486.660000000003492, 6907.329999999999927\narable_land_in_hectares : 4430.869999999999890861, 29013.819999999999708962, 13406.046899999999368447, 28569.580000000001746230, 29898.090000000000145519\ngrassland_in_hectares : 6195.500000000000000, 40908.029999999998836, 99247.320000000006985, 41872.449999999997090, 628802.445900000049733\npermanent_crops_in_hectares : 23438.869999999998981366, 2743.246500000000196451, 22918.369999999998981366, 195.650000000000005684, 1493.017800000000079308\nother_utilised_agricultural_area_in_hectares : 1314.430000000000063665, 10073.000000000000000000, 10936.317900000000008731, 10078.500000000000000000, 264.170000000000015916\nlivestock_beef_cattle_and_cows : 1306001, 86178, 1304122, 1544547, 93491\nlivestock_horses_and_other_equines : 75354, 51485, 11200, 6354, 79345\nlivestock_sheep : 402772, 424018, 13722, 2218, 417274\nlivestock_goats : 54756, 2293, 22439, 2598, 78146\nlivestock_pigs : 559, 12165, 1558101, 18690, 38953\nlivestock_poultry : 432001, 10824616, 7238221, 10740590, 484440\nlivestock_other_animals : 13028, 5849, 444, 4793, 274072\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How was the farmland used in organic farming in 2017? Provide land usage in percentage of the farming area.\n    ### SQL query:\n\n",
    "process_time": 10.260223992168903,
    "num_tokens": 2763,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 12,
    "question": "How was the split between men and women in farm employment in canton Uri in 2015?",
    "query": "SELECT ROUND(100 * employees_women / employees_total, 2) AS percentage_of_female_employees,\n  ROUND(100 * employees_men / employees_total, 2) AS percentage_of_male_employees\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2015\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT employees_men, employees_women\nFROM experiment.employees_farmholdings_agricultural_area_livestock_per_canton\nWHERE spatialunit_uid = 'UR' AND year = 2015",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nfarmholdings : 76179, 55207, 7284, 7032, 328\nemployees_total : 11098, 1260, 126301, 8714, 129975\nfull_time_employees_75_percent_or_more : 77600, 77880, 66453, 5314, 475\npart_time_employees_50_75_percent : 3559, 22970, 2094, 24465, 220\npart_time_employees_2_less_than_50_percent : 54682, 6636, 4005, 470, 5339\nemployees_men : 11465, 6355, 123525, 11582, 6924\nemployees_women : 46593, 63541, 444, 3900, 3788\nemployees_women_manager_label : 2804, 171, 192, 36, 2714\nemployees_swiss : 783, 132406, 159547, 11332, 11272\nemployees_foreign_nationals : 1260, 1068, 3664, 957, 1381\nfamily_employees : 18404, 94913, 8437, 157683, 131632\nbeef_cattle_and_cows_farm : 36131, 2193, 45429, 3129, 4635\nhorse_and_other_equine_farm : 1761, 13028, 1250, 1113, 912\nsheep_farm : 6747, 542, 1784, 917, 1700\ngoat_farm : 1260, 6355, 69, 5151, 219\npig_farms : 202, 171, 13794, 6570, 219\npoultry_farm : 171, 147, 2193, 15049, 1566\nfarms_with_other_animals : 569, 8748, 912, 6138, 56\nutilised_agricultural_area_in_hectares : 76180.050000000002910, 1051747.429000000003725, 66896.389999999999418, 76486.660000000003492, 6907.329999999999927\narable_land_in_hectares : 4430.869999999999890861, 29013.819999999999708962, 13406.046899999999368447, 28569.580000000001746230, 29898.090000000000145519\ngrassland_in_hectares : 6195.500000000000000, 40908.029999999998836, 99247.320000000006985, 41872.449999999997090, 628802.445900000049733\npermanent_crops_in_hectares : 23438.869999999998981366, 2743.246500000000196451, 22918.369999999998981366, 195.650000000000005684, 1493.017800000000079308\nother_utilised_agricultural_area_in_hectares : 1314.430000000000063665, 10073.000000000000000000, 10936.317900000000008731, 10078.500000000000000000, 264.170000000000015916\nlivestock_beef_cattle_and_cows : 1306001, 86178, 1304122, 1544547, 93491\nlivestock_horses_and_other_equines : 75354, 51485, 11200, 6354, 79345\nlivestock_sheep : 402772, 424018, 13722, 2218, 417274\nlivestock_goats : 54756, 2293, 22439, 2598, 78146\nlivestock_pigs : 559, 12165, 1558101, 18690, 38953\nlivestock_poultry : 432001, 10824616, 7238221, 10740590, 484440\nlivestock_other_animals : 13028, 5849, 444, 4793, 274072\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How was the split between men and women in farm employment in canton Uri in 2015?\n    ### SQL query:\n\n",
    "process_time": 11.808032226050273,
    "num_tokens": 2759,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 13,
    "question": "What was the total agricultural surface area in the canton of Geneva in 2000?",
    "query": "SELECT utilised_agricultural_area_in_hectares as utilised_agricultural_area_in_hectares_canton_geneva\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Canton Geneva'\n    AND S.canton = 'TRUE'\n    AND year = 2000\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT utilised_agricultural_area_in_hectares\nFROM experiment.employees_farmholdings_agricultural_area_livestock_per_canton\nWHERE spatialunit_uid = 'GE'\nAND year = 2000;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nfarmholdings : 76179, 55207, 7284, 7032, 328\nemployees_total : 11098, 1260, 126301, 8714, 129975\nfull_time_employees_75_percent_or_more : 77600, 77880, 66453, 5314, 475\npart_time_employees_50_75_percent : 3559, 22970, 2094, 24465, 220\npart_time_employees_2_less_than_50_percent : 54682, 6636, 4005, 470, 5339\nemployees_men : 11465, 6355, 123525, 11582, 6924\nemployees_women : 46593, 63541, 444, 3900, 3788\nemployees_women_manager_label : 2804, 171, 192, 36, 2714\nemployees_swiss : 783, 132406, 159547, 11332, 11272\nemployees_foreign_nationals : 1260, 1068, 3664, 957, 1381\nfamily_employees : 18404, 94913, 8437, 157683, 131632\nbeef_cattle_and_cows_farm : 36131, 2193, 45429, 3129, 4635\nhorse_and_other_equine_farm : 1761, 13028, 1250, 1113, 912\nsheep_farm : 6747, 542, 1784, 917, 1700\ngoat_farm : 1260, 6355, 69, 5151, 219\npig_farms : 202, 171, 13794, 6570, 219\npoultry_farm : 171, 147, 2193, 15049, 1566\nfarms_with_other_animals : 569, 8748, 912, 6138, 56\nutilised_agricultural_area_in_hectares : 76180.050000000002910, 1051747.429000000003725, 66896.389999999999418, 76486.660000000003492, 6907.329999999999927\narable_land_in_hectares : 4430.869999999999890861, 29013.819999999999708962, 13406.046899999999368447, 28569.580000000001746230, 29898.090000000000145519\ngrassland_in_hectares : 6195.500000000000000, 40908.029999999998836, 99247.320000000006985, 41872.449999999997090, 628802.445900000049733\npermanent_crops_in_hectares : 23438.869999999998981366, 2743.246500000000196451, 22918.369999999998981366, 195.650000000000005684, 1493.017800000000079308\nother_utilised_agricultural_area_in_hectares : 1314.430000000000063665, 10073.000000000000000000, 10936.317900000000008731, 10078.500000000000000000, 264.170000000000015916\nlivestock_beef_cattle_and_cows : 1306001, 86178, 1304122, 1544547, 93491\nlivestock_horses_and_other_equines : 75354, 51485, 11200, 6354, 79345\nlivestock_sheep : 402772, 424018, 13722, 2218, 417274\nlivestock_goats : 54756, 2293, 22439, 2598, 78146\nlivestock_pigs : 559, 12165, 1558101, 18690, 38953\nlivestock_poultry : 432001, 10824616, 7238221, 10740590, 484440\nlivestock_other_animals : 13028, 5849, 444, 4793, 274072\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What was the total agricultural surface area in the canton of Geneva in 2000?\n    ### SQL query:\n\n",
    "process_time": 7.358347671106458,
    "num_tokens": 2757,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 14,
    "question": "What was the population change due to natural factors among the residents of Canton Vaud between 2015 and 2020?",
    "query": "SELECT year, births - deaths\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Vaud%'\n    AND T.year >= 2015\n    AND T.year >= 2020\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT population_change\nFROM experiment.demographic_balance_by_canton\nWHERE spatialunit_uid IN (\n    SELECT spatialunit_uid\n    FROM experiment.spatial_unit\n    WHERE name = 'Vaud'\n) AND year BETWEEN 2015 AND 2020",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 1982, 2006, 2000\ntotal_population : 5784701, 8139631, 6169091, 1007725, 972210\nbirths : 10201, 8979, 21765, 13518, 11249\ndeaths : 60648, 9983, 56986, 10769, 58578\nimmigration : 5217, 23596, 31465, 83677, 110302\nin_migration_from_another_canton : 101320, 5617, 3846, 5021, 18717\nemigration : 7774, 73855, 18924, 27864, 19201\nout_migration_to_another_canton : 101320, 14470, 13725, 106022, 13424\nnet_migration : 5217, 33477, 49438, 8286, 47884\nacquisition_of_swiss_citizenship : -8757, 8757, 43889, -11494, -11850\nstatistical_adjustment : 628, -842, 569, -193, 1655\npopulation_change : 43386, 1169, 22985, 23515, 84528\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What was the population change due to natural factors among the residents of Canton Vaud between 2015 and 2020?\n    ### SQL query:\n\n",
    "process_time": 9.531097069149837,
    "num_tokens": 1442,
    "hardness": "hard",
    "lang": "en"
  },
  {
    "i": 15,
    "question": "Which canton has the highest number of residents who have moved from other cantons in 2016?",
    "query": "SELECT S.name, T.in_migration_from_another_canton\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2016\n    AND T.citizenship_category = 'Citizenship (category) - total'\nORDER BY T.in_migration_from_another_canton DESC\nLIMIT 1;\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.demographic_balance_by_canton\nWHERE year = 2016\nORDER BY in_migration_from_another_canton DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 1982, 2006, 2000\ntotal_population : 5784701, 8139631, 6169091, 1007725, 972210\nbirths : 10201, 8979, 21765, 13518, 11249\ndeaths : 60648, 9983, 56986, 10769, 58578\nimmigration : 5217, 23596, 31465, 83677, 110302\nin_migration_from_another_canton : 101320, 5617, 3846, 5021, 18717\nemigration : 7774, 73855, 18924, 27864, 19201\nout_migration_to_another_canton : 101320, 14470, 13725, 106022, 13424\nnet_migration : 5217, 33477, 49438, 8286, 47884\nacquisition_of_swiss_citizenship : -8757, 8757, 43889, -11494, -11850\nstatistical_adjustment : 628, -842, 569, -193, 1655\npopulation_change : 43386, 1169, 22985, 23515, 84528\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Which canton has the highest number of residents who have moved from other cantons in 2016?\n    ### SQL query:\n\n",
    "process_time": 3.2479164090473205,
    "num_tokens": 1438,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 16,
    "question": "How many residents were in Switzerland in 2018?",
    "query": "SELECT total_population as total_population_of_switzerland_in_2018\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n    AND S.country = 'TRUE'\n    AND T.year = 2018\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT total_population\nFROM experiment.demographic_balance_by_canton\nWHERE year = 2018",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 1982, 2006, 2000\ntotal_population : 5784701, 8139631, 6169091, 1007725, 972210\nbirths : 10201, 8979, 21765, 13518, 11249\ndeaths : 60648, 9983, 56986, 10769, 58578\nimmigration : 5217, 23596, 31465, 83677, 110302\nin_migration_from_another_canton : 101320, 5617, 3846, 5021, 18717\nemigration : 7774, 73855, 18924, 27864, 19201\nout_migration_to_another_canton : 101320, 14470, 13725, 106022, 13424\nnet_migration : 5217, 33477, 49438, 8286, 47884\nacquisition_of_swiss_citizenship : -8757, 8757, 43889, -11494, -11850\nstatistical_adjustment : 628, -842, 569, -193, 1655\npopulation_change : 43386, 1169, 22985, 23515, 84528\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many residents were in Switzerland in 2018?\n    ### SQL query:\n\n",
    "process_time": 3.0848220330663025,
    "num_tokens": 1428,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 17,
    "question": "What was the net migration of Switzerland from 2012 to 2022?",
    "query": "SELECT year, net_migration as net_migration_of_switzerland\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n    AND S.country = 'TRUE'\n    AND T.year >= 2012\n    AND T.year <= 2022\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT SUM(net_migration) AS net_migration\nFROM experiment.demographic_balance_by_canton\nWHERE year >= 2012 AND year <= 2022",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 1982, 2006, 2000\ntotal_population : 5784701, 8139631, 6169091, 1007725, 972210\nbirths : 10201, 8979, 21765, 13518, 11249\ndeaths : 60648, 9983, 56986, 10769, 58578\nimmigration : 5217, 23596, 31465, 83677, 110302\nin_migration_from_another_canton : 101320, 5617, 3846, 5021, 18717\nemigration : 7774, 73855, 18924, 27864, 19201\nout_migration_to_another_canton : 101320, 14470, 13725, 106022, 13424\nnet_migration : 5217, 33477, 49438, 8286, 47884\nacquisition_of_swiss_citizenship : -8757, 8757, 43889, -11494, -11850\nstatistical_adjustment : 628, -842, 569, -193, 1655\npopulation_change : 43386, 1169, 22985, 23515, 84528\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What was the net migration of Switzerland from 2012 to 2022?\n    ### SQL query:\n\n",
    "process_time": 3.046612956095487,
    "num_tokens": 1433,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 18,
    "question": "What greenhouse gas footprint had Switzerland in 2000 through consumption?",
    "query": "SELECT T.emissions_in_million_tons_co2_equivalent\nFROM greenhouse_gas_emissions_through_consumption as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2000;\n",
    "db_id": "greenhouse_gas_emissions_through_consumption",
    "generated_query": "SELECT emissions_in_million_tons_co2_equivalent\nFROM experiment.greenhouse_gas_emissions_through_consumption\nWHERE year = 2000\nAND spatialunit_uid = 'CHE';",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.greenhouse_gas_emissions_through_consumption (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\temissions_in_million_tons_co2_equivalent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT greenhouse_gas_emissions_through_consumption_pkey PRIMARY KEY (uid), \n\tCONSTRAINT greenhouse_gas_emissions_through_consumpti_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in greenhouse_gas_emissions_through_consumption and 5 examples in each column for high cardinality columns :\nuid : 4, 11, 9, 19, 14\nyear : 2011, 2012, 2019, 2018, 2006\nemissions_in_million_tons_co2_equivalent : 113.05347920007300, 116.24926607304400, 115.71482870101499, 111.69297268884500, 119.75198437987200\n*/\n\n/*\nColumn name, Column discription, Example values\nemissions_in_million_tons_co2_equivalent, Greenhouse gas emissions in million metric tons of CO2 equivalent, 117.900561800408\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What greenhouse gas footprint had Switzerland in 2000 through consumption?\n    ### SQL query:\n\n",
    "process_time": 608.0858231750317,
    "num_tokens": 901,
    "hardness": "medium",
    "lang": "en"
  },
  {
    "i": 19,
    "question": "In which years did the greenhouse footprint increase and by how much? Order by years and start from the present",
    "query": "WITH EmissionsChange AS (\n    SELECT\n        T1.year AS current_year,\n        T1.emissions_in_million_tons_co2_equivalent AS emissions_current_year,\n        (T1.year - 1) AS previous_year,\n        T2.emissions_in_million_tons_co2_equivalent AS emissions_previous_year,\n        T1.emissions_in_million_tons_co2_equivalent - T2.emissions_in_million_tons_co2_equivalent\n          AS increase_from_previous_year\n    FROM greenhouse_gas_emissions_through_consumption AS T1\n    JOIN greenhouse_gas_emissions_through_consumption AS T2 ON T1.year = T2.year + 1\n    WHERE T1.year > 2000\n)\nSELECT current_year, increase_from_previous_year\nFROM EmissionsChange WHERE increase_from_previous_year > 0\nORDER BY current_year DESC;\n",
    "db_id": "greenhouse_gas_emissions_through_consumption",
    "generated_query": "SELECT year, emissions_in_million_tons_co2_equivalent - LAG(emissions_in_million_tons_co2_equivalent) OVER (ORDER BY year DESC) AS increase\nFROM experiment.greenhouse_gas_emissions_through_consumption\nORDER BY year DESC",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.greenhouse_gas_emissions_through_consumption (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\temissions_in_million_tons_co2_equivalent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT greenhouse_gas_emissions_through_consumption_pkey PRIMARY KEY (uid), \n\tCONSTRAINT greenhouse_gas_emissions_through_consumpti_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in greenhouse_gas_emissions_through_consumption and 5 examples in each column for high cardinality columns :\nuid : 4, 11, 9, 19, 14\nyear : 2011, 2012, 2019, 2018, 2006\nemissions_in_million_tons_co2_equivalent : 113.05347920007300, 116.24926607304400, 115.71482870101499, 111.69297268884500, 119.75198437987200\n*/\n\n/*\nColumn name, Column discription, Example values\nemissions_in_million_tons_co2_equivalent, Greenhouse gas emissions in million metric tons of CO2 equivalent, 117.900561800408\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In which years did the greenhouse footprint increase and by how much? Order by years and start from the present\n    ### SQL query:\n\n",
    "process_time": 4.647958927089348,
    "num_tokens": 910,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 20,
    "question": "What types of fuel are there?",
    "query": "SELECT DISTINCT fuel_type FROM stock_vehicles;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT DISTINCT fuel_type\nFROM experiment.stock_vehicles",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 8757, 8845, 8902, 8813, 8872\nspatialunit_uid : 617_A.ADM3, 1054_A.ADM3, 3982_A.ADM3, 31_A.ADM3, 5663_A.ADM3\nyear : 2011, 2012, 2019, 2021, 2014\namount : 341, 11, 63, 23, 255\nfuel_type : Diesel, Gas (mono- and bivalent), Benzine-electric: Plug-in-hybrid, Diesel-electric: Plug-in-hybrid, Diesel-electric: Normal-hybrid\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n   \n    ### Question: \n    What types of fuel are there?\n    ### SQL query:\n\n",
    "process_time": 4.401743582915515,
    "num_tokens": 950,
    "hardness": "easy",
    "lang": "en"
  },
  {
    "i": 21,
    "question": "What was the proportion of electric vehicles in Geneva in 2010?",
    "query": "SELECT\n    SUM(CASE WHEN sv.fuel_type ILIKE '%electric%' THEN sv.amount ELSE 0 END) AS electric_vehicles,\n    SUM(sv.amount) AS total_vehicles,\n    (\n        SUM(CASE WHEN sv.fuel_type ILIKE '%electric%' THEN sv.amount ELSE 0 END) * 100.0 / NULLIF(SUM(sv.amount), 0)\n    ) AS proportion_electric_vehicles\nFROM spatial_unit AS su\nINNER JOIN stock_vehicles AS sv\nON su.spatialunit_uid = sv.spatialunit_uid\nWHERE su.name ILIKE '%geneva%'\n    AND sv.year = 2010;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT \n    SUM(CASE WHEN fuel_type = 'Electric' THEN amount ELSE 0 END) / SUM(amount) AS proportion\nFROM \n    experiment.stock_vehicles sv\nJOIN \n    experiment.spatial_unit su ON sv.spatialunit_uid = su.spatialunit_uid\nWHERE \n    su.name = 'Geneva' AND sv.year = 2010",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 8757, 8845, 8902, 8813, 8872\nspatialunit_uid : 617_A.ADM3, 1054_A.ADM3, 3982_A.ADM3, 31_A.ADM3, 5663_A.ADM3\nyear : 2011, 2012, 2019, 2021, 2014\namount : 341, 11, 63, 23, 255\nfuel_type : Diesel, Gas (mono- and bivalent), Benzine-electric: Plug-in-hybrid, Diesel-electric: Plug-in-hybrid, Diesel-electric: Normal-hybrid\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n   \n    ### Question: \n    What was the proportion of electric vehicles in Geneva in 2010?\n    ### SQL query:\n\n",
    "process_time": 6.190655146026984,
    "num_tokens": 957,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 22,
    "question": "What was the city with the most cars in 2015?",
    "query": "SELECT\n    su.name AS city,\n    SUM(sv.amount) AS total_cars\nFROM spatial_unit AS su\nINNER JOIN stock_vehicles AS sv\nON su.spatialunit_uid = sv.spatialunit_uid\nWHERE sv.year = 2015\n    AND su.municipal = 'True'\n    AND sv.fuel_type = 'total'\nGROUP BY\n    su.name\nORDER BY total_cars DESC\nLIMIT 1;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT s.spatialunit_uid, s.amount\nFROM experiment.stock_vehicles s\nJOIN experiment.spatial_unit su ON s.spatialunit_uid = su.spatialunit_uid\nWHERE s.year = 2015\nORDER BY s.amount DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 8757, 8845, 8902, 8813, 8872\nspatialunit_uid : 617_A.ADM3, 1054_A.ADM3, 3982_A.ADM3, 31_A.ADM3, 5663_A.ADM3\nyear : 2011, 2012, 2019, 2021, 2014\namount : 341, 11, 63, 23, 255\nfuel_type : Diesel, Gas (mono- and bivalent), Benzine-electric: Plug-in-hybrid, Diesel-electric: Plug-in-hybrid, Diesel-electric: Normal-hybrid\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n   \n    ### Question: \n    What was the city with the most cars in 2015?\n    ### SQL query:\n\n",
    "process_time": 12.15454452112317,
    "num_tokens": 956,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 23,
    "question": "What are fuel types starting with d?",
    "query": "SELECT DISTINCT fuel_type\nFROM stock_vehicles WHERE fuel_type ILIKE 'd%';\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT fuel_type\nFROM experiment.stock_vehicles\nWHERE fuel_type LIKE 'D%'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 8757, 8845, 8902, 8813, 8872\nspatialunit_uid : 617_A.ADM3, 1054_A.ADM3, 3982_A.ADM3, 31_A.ADM3, 5663_A.ADM3\nyear : 2011, 2012, 2019, 2021, 2014\namount : 341, 11, 63, 23, 255\nfuel_type : Diesel, Gas (mono- and bivalent), Benzine-electric: Plug-in-hybrid, Diesel-electric: Plug-in-hybrid, Diesel-electric: Normal-hybrid\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n   \n    ### Question: \n    What are fuel types starting with d?\n    ### SQL query:\n\n",
    "process_time": 1.9749927560333163,
    "num_tokens": 951,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 24,
    "question": "What are the top 10 cities with the highest proportion of diesel cars?",
    "query": "SELECT\n    su.name AS city,\n    (SUM(CASE WHEN sv.fuel_type ILIKE '%diesel%' THEN sv.amount ELSE 0 END) * 100.0 / SUM(CASE WHEN sv.fuel_type = 'total' THEN sv.amount ELSE 0 END) ) AS proportion_diesel\nFROM spatial_unit AS su\n    INNER JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\nWHERE\n    su.name IS NOT NULL\nGROUP BY\n    su.name\nORDER BY\n    proportion_diesel DESC\nLIMIT 10;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT s.name, COUNT(*) AS diesel_count, COUNT(*)::float / (SELECT COUNT(*) FROM experiment.stock_vehicles WHERE fuel_type IS NOT NULL) AS diesel_proportion\nFROM experiment.stock_vehicles sv\nJOIN experiment.spatial_unit s ON sv.spatialunit_uid = s.spatialunit_uid\nWHERE sv.fuel_type = 'Diesel'\nGROUP BY s.name\nORDER BY diesel_proportion DESC\nLIMIT 10;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 8757, 8845, 8902, 8813, 8872\nspatialunit_uid : 617_A.ADM3, 1054_A.ADM3, 3982_A.ADM3, 31_A.ADM3, 5663_A.ADM3\nyear : 2011, 2012, 2019, 2021, 2014\namount : 341, 11, 63, 23, 255\nfuel_type : Diesel, Gas (mono- and bivalent), Benzine-electric: Plug-in-hybrid, Diesel-electric: Plug-in-hybrid, Diesel-electric: Normal-hybrid\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n   \n    ### Question: \n    What are the top 10 cities with the highest proportion of diesel cars?\n    ### SQL query:\n\n",
    "process_time": 18.35973413498141,
    "num_tokens": 958,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 25,
    "question": "What year saw the biggest year-on-year increase in electric cars in the city of Basel?",
    "query": "SELECT\n    year,\n    year_on_year_increase\nFROM (\n    SELECT\n        sv.year,\n        (sv.amount - lag(sv.amount) OVER (ORDER BY sv.year)) AS year_on_year_increase\n    FROM spatial_unit AS su\n        INNER JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\n    WHERE\n        su.name = 'Basel' and su.municipal = 'True'\n        AND sv.fuel_type ILIKE '%electric%'\n) AS subquery\nWHERE\n    year_on_year_increase IS NOT NULL\nORDER BY\n    year_on_year_increase DESC\nLIMIT 1;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT year\nFROM experiment.stock_vehicles sv\nJOIN experiment.spatial_unit su ON sv.spatialunit_uid = su.spatialunit_uid\nWHERE su.name = 'Basel' AND sv.fuel_type = 'Electric'\nORDER BY amount DESC\nLIMIT 1",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 8757, 8845, 8902, 8813, 8872\nspatialunit_uid : 617_A.ADM3, 1054_A.ADM3, 3982_A.ADM3, 31_A.ADM3, 5663_A.ADM3\nyear : 2011, 2012, 2019, 2021, 2014\namount : 341, 11, 63, 23, 255\nfuel_type : Diesel, Gas (mono- and bivalent), Benzine-electric: Plug-in-hybrid, Diesel-electric: Plug-in-hybrid, Diesel-electric: Normal-hybrid\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n   \n    ### Question: \n    What year saw the biggest year-on-year increase in electric cars in the city of Basel?\n    ### SQL query:\n\n",
    "process_time": 4.682646589819342,
    "num_tokens": 961,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 26,
    "question": "How many favorite babynames are registered in year 2011?",
    "query": "SELECT DISTINCT COUNT(bnff.first_name)\nFROM baby_names_favorite_firstname as bnff\nWHERE bnff.year = 2011;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT COUNT(*) FROM experiment.baby_names_favorite_firstname WHERE year = 2011;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1703249, 1703178, 1703087, 1703131, 1703116\nyear : 2011, 2012, 2019, 2018, 2006\namount : 4, 2, 1, 12, 8\nrank : 69, 4, 156, 23, 36\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many favorite babynames are registered in year 2011?\n    ### SQL query:\n\n",
    "process_time": 12.76803833199665,
    "num_tokens": 882,
    "hardness": "easy",
    "lang": "en"
  },
  {
    "i": 27,
    "question": "Show me all amount of baby names in all municipalities.",
    "query": "SELECT bnff.first_name, bnff.amount\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.municipal = 'TRUE';\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT SUM(amount) AS total_amount\nFROM experiment.baby_names_favorite_firstname",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1703249, 1703178, 1703087, 1703131, 1703116\nyear : 2011, 2012, 2019, 2018, 2006\namount : 4, 2, 1, 12, 8\nrank : 69, 4, 156, 23, 36\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Show me all amount of baby names in all municipalities.\n    ### SQL query:\n\n",
    "process_time": 8.924139716895297,
    "num_tokens": 879,
    "hardness": "medium",
    "lang": "en"
  },
  {
    "i": 28,
    "question": "Which canton has the most borned boys called 'Oscar' in 2016?",
    "query": "SELECT su.name, bnff.amount\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2016 AND gender = 'boy' AND bnff.first_name = 'Oscar' AND su.canton = 'TRUE'\nORDER BY bnff.amount DESC LIMIT 1;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.baby_names_favorite_firstname\nWHERE gender = 'boy' AND first_name = 'Oscar' AND year = 2016\nGROUP BY spatialunit_uid\nORDER BY COUNT(*) DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1703249, 1703178, 1703087, 1703131, 1703116\nyear : 2011, 2012, 2019, 2018, 2006\namount : 4, 2, 1, 12, 8\nrank : 69, 4, 156, 23, 36\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Which canton has the most borned boys called 'Oscar' in 2016?\n    ### SQL query:\n\n",
    "process_time": 4.658669924829155,
    "num_tokens": 887,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 29,
    "question": "Show me all top-1 ranked girl names for in each canton in year 2016. Return me the amount and year as well.",
    "query": "SELECT bnff.first_name, su.name, bnff.amount, bnff.year\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' and bnff.gender = 'girl' and bnff.year = 2016 and bnff.rank = 1;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT b.amount, b.year, b.first_name\nFROM experiment.baby_names_favorite_firstname b\nJOIN experiment.spatial_unit s ON b.spatialunit_uid = s.spatialunit_uid\nWHERE b.gender = 'girl' AND b.rank = 1 AND b.year = 2016 AND s.canton = true",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1703249, 1703178, 1703087, 1703131, 1703116\nyear : 2011, 2012, 2019, 2018, 2006\namount : 4, 2, 1, 12, 8\nrank : 69, 4, 156, 23, 36\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Show me all top-1 ranked girl names for in each canton in year 2016. Return me the amount and year as well.\n    ### SQL query:\n\n",
    "process_time": 13.83098676498048,
    "num_tokens": 897,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 30,
    "question": "How many girls new borned with name initial L from canton Zurich in 2016?",
    "query": "SELECT sum(amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2016 AND gender = 'girl' AND su.canton = ''True''\nAND su.name ilike '%zurich%' AND bnff.first_name ilike 'l%';\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.baby_names_favorite_firstname AS b\nJOIN experiment.spatial_unit AS s ON b.spatialunit_uid = s.spatialunit_uid\nWHERE b.gender = 'girl' \nAND b.first_name LIKE 'L%' \nAND s.name = 'Zurich' \nAND b.year = 2016",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1703249, 1703178, 1703087, 1703131, 1703116\nyear : 2011, 2012, 2019, 2018, 2006\namount : 4, 2, 1, 12, 8\nrank : 69, 4, 156, 23, 36\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many girls new borned with name initial L from canton Zurich in 2016?\n    ### SQL query:\n\n",
    "process_time": 5.442257117014378,
    "num_tokens": 887,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 31,
    "question": "Show me the top one ranking girl names from year 2010 in Switzerland.",
    "query": "SELECT bnff.first_name, bnff.year\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.country = 'TRUE' and su.name ilike '%Switzerland%' and bnff.gender = 'girl'\nand bnff.year >= 2010 and bnff.rank = 1\nORDER BY bnff.year;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT first_name\nFROM experiment.baby_names_favorite_firstname\nWHERE gender = 'girl' AND year = 2010\nORDER BY rank\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1703249, 1703178, 1703087, 1703131, 1703116\nyear : 2011, 2012, 2019, 2018, 2006\namount : 4, 2, 1, 12, 8\nrank : 69, 4, 156, 23, 36\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Show me the top one ranking girl names from year 2010 in Switzerland.\n    ### SQL query:\n\n",
    "process_time": 2.999441290041432,
    "num_tokens": 884,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 32,
    "question": "How many divorces were there in canton zurich in 2020?",
    "query": "SELECT S.name, T.year, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT SUM(amount) AS total_divorces\nFROM experiment.divorces_duration_of_marriage_age_classes d\nJOIN experiment.spatial_unit s ON d.spatialunit_uid = s.spatialunit_uid\nWHERE s.name = 'Zurich' AND d.year = 2020;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 857282, 857226, 857270, 857229, 857230\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\nyear : 2011, 1969, 2012, 2019, 1982\namount : 4, 59, 156, 11, 17\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many divorces were there in canton zurich in 2020?\n    ### SQL query:\n\n",
    "process_time": 9.566678232047707,
    "num_tokens": 995,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 33,
    "question": "Did any people divorce at an age of 70 or above in Switzerland in 2000?",
    "query": "SELECT S.name, T.age_class_husband, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year = 2000\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND (T.age_class_husband = '90 years or older' OR T.age_class_husband = '70-79 years')\nAND T.age_class_wife = 'Age class of wife - total'\nAND S.country\nGROUP BY S.name, T.age_class_husband;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT COUNT(*) FROM experiment.divorces_duration_of_marriage_age_classes\nWHERE age_class_husband = '70 years or more' OR age_class_wife = '70 years or more'\nAND spatialunit_uid LIKE '%_CH'\nAND year = 2000;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 857282, 857226, 857270, 857229, 857230\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\nyear : 2011, 1969, 2012, 2019, 1982\namount : 4, 59, 156, 11, 17\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Did any people divorce at an age of 70 or above in Switzerland in 2000?\n    ### SQL query:\n\n",
    "process_time": 4.571201495826244,
    "num_tokens": 998,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 34,
    "question": "Which year between 1990 and 2000 had the least divorces in Stadt Basel?",
    "query": "SELECT S.name, T.year, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 1990\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND S.country\nGROUP BY S.name, T.year\nORDER BY T.year;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT year, MIN(amount) AS least_divorces\nFROM experiment.divorces_duration_of_marriage_age_classes\nWHERE spatialunit_uid = '11_A.ADM1' AND year BETWEEN 1990 AND 2000\nGROUP BY year\nORDER BY least_divorces ASC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 857282, 857226, 857270, 857229, 857230\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\nyear : 2011, 1969, 2012, 2019, 1982\namount : 4, 59, 156, 11, 17\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Which year between 1990 and 2000 had the least divorces in Stadt Basel?\n    ### SQL query:\n\n",
    "process_time": 6.06694284803234,
    "num_tokens": 998,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 35,
    "question": "How many men divorced at an age between 60 and 69 in canton zurich in 2020?",
    "query": "SELECT S.name, T.year, T.age_class_husband, sum(T.amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = '60-69 years'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year, T.age_class_husband;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.divorces_duration_of_marriage_age_classes AS d\nJOIN experiment.spatial_unit AS s ON d.spatialunit_uid = s.spatialunit_uid\nWHERE d.age_class_husband = '60-69 years' \nAND s.name = 'Zurich' \nAND d.year = 2020",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 857282, 857226, 857270, 857229, 857230\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\nyear : 2011, 1969, 2012, 2019, 1982\namount : 4, 59, 156, 11, 17\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many men divorced at an age between 60 and 69 in canton zurich in 2020?\n    ### SQL query:\n\n",
    "process_time": 11.071561708115041,
    "num_tokens": 1002,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 36,
    "question": "From 2000 to 2022 which year saw the most divorces in Switzerland?",
    "query": "SELECT T.year, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 2000\nAND T.year <= 2022\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND S.country\nGROUP BY T.year\nORDER BY total_divorces DESC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT year, SUM(amount) AS total_divorces\nFROM experiment.divorces_duration_of_marriage_age_classes\nWHERE year BETWEEN 2000 AND 2022\nGROUP BY year\nORDER BY total_divorces DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 857282, 857226, 857270, 857229, 857230\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\nyear : 2011, 1969, 2012, 2019, 1982\namount : 4, 59, 156, 11, 17\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    From 2000 to 2022 which year saw the most divorces in Switzerland?\n    ### SQL query:\n\n",
    "process_time": 5.626093143830076,
    "num_tokens": 997,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 37,
    "question": "How many marriages in Switzerland got divorced after less then 5 years in 2000?",
    "query": "SELECT sum(amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = s.spatialunit_uid\nWHERE S.country\nAND T.year = '2000'\nAND T.duration_of_marriage = '0-4 years'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total';\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.divorces_duration_of_marriage_age_classes AS d\nJOIN experiment.spatial_unit AS s ON d.spatialunit_uid = s.spatialunit_uid\nWHERE d.duration_of_marriage = 'Less than 5 years' \nAND d.year = 2000\nAND s.country = true;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 857282, 857226, 857270, 857229, 857230\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 7_A.ADM1, 8_A.ADM1, 9_A.ADM1\nyear : 2011, 1969, 2012, 2019, 1982\namount : 4, 59, 156, 11, 17\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many marriages in Switzerland got divorced after less then 5 years in 2000?\n    ### SQL query:\n\n",
    "process_time": 6.126512908842415,
    "num_tokens": 997,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 38,
    "question": "What is the total number of divorces for Swiss couples where the duration of the marriage was 20 years or more in 1994?",
    "query": "SELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories WHERE year = 1994\n  AND duration_of_marriage = '20 years or more'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT SUM(amount) AS total_divorces\nFROM experiment.divorces_duration_of_marriage_citizenship_categories\nWHERE citizenship_category_husband = 'Switzerland'\nAND citizenship_category_wife = 'Switzerland'\nAND duration_of_marriage = '20 years or more'\nAND year = 1994;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 202, 171, 69, 4, 129\nspatialunit_uid : 6004_A.ADM3, 5843_A.ADM3, 2831_A.ADM3, 4230_A.ADM3, 786_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 0, 4, 11, 1, 12\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What is the total number of divorces for Swiss couples where the duration of the marriage was 20 years or more in 1994?\n    ### SQL query:\n\n",
    "process_time": 14.249030761886388,
    "num_tokens": 1021,
    "hardness": "medium",
    "lang": "en"
  },
  {
    "i": 39,
    "question": "What are the top 5 cantons with the highest number of divorces in 1994 for Swiss couples?",
    "query": "SELECT su.name, SUM(div.amount) as total\nFROM divorces_duration_of_marriage_citizenship_categories AS div\nJOIN spatial_unit AS su on div.spatialunit_uid = su.spatialunit_uid\nWHERE div.year = 1994\n  AND div.duration_of_marriage = 'Duration of marriage - total'\n  AND div.citizenship_category_husband = 'Switzerland'\n  AND div.citizenship_category_wife = 'Switzerland'\n  AND su.name LIKE '%Canton%'\nGROUP BY su.name\nORDER BY total DESC\nLIMIT 5;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.divorces_duration_of_marriage_citizenship_categories\nWHERE year = 1994\nAND citizenship_category_husband = 'Switzerland'\nAND citizenship_category_wife = 'Switzerland'\nORDER BY amount DESC\nLIMIT 5;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 202, 171, 69, 4, 129\nspatialunit_uid : 6004_A.ADM3, 5843_A.ADM3, 2831_A.ADM3, 4230_A.ADM3, 786_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 0, 4, 11, 1, 12\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What are the top 5 cantons with the highest number of divorces in 1994 for Swiss couples?\n    ### SQL query:\n\n",
    "process_time": 9.726417898200452,
    "num_tokens": 1016,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 40,
    "question": "In which year between 1990 and 2000 did the Canton of Zurich have the highest number of divorces between Swiss couples?",
    "query": "SELECT year, SUM(amount) as total\nFROM divorces_duration_of_marriage_citizenship_categories join spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year BETWEEN 2000 AND 2010\n  AND su.spatialunit_uid = '1_A.ADM1'\n  AND duration_of_marriage = 'Duration of marriage - total'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY year\nORDER BY total DESC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT year\nFROM experiment.divorces_duration_of_marriage_citizenship_categories\nWHERE citizenship_category_husband = 'Switzerland'\nAND citizenship_category_wife = 'Switzerland'\nAND spatialunit_uid IN (\n    SELECT spatialunit_uid\n    FROM experiment.spatial_unit\n    WHERE name = 'Zurich'\n    AND canton = true\n)\nAND year BETWEEN 1990 AND 2000\nGROUP BY year\nORDER BY SUM(amount) DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 202, 171, 69, 4, 129\nspatialunit_uid : 6004_A.ADM3, 5843_A.ADM3, 2831_A.ADM3, 4230_A.ADM3, 786_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 0, 4, 11, 1, 12\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In which year between 1990 and 2000 did the Canton of Zurich have the highest number of divorces between Swiss couples?\n    ### SQL query:\n\n",
    "process_time": 7.442908850964159,
    "num_tokens": 1020,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 41,
    "question": "In 1995, which municipality had the lowest number of divorces between Swiss couples who were married for 10-14 years?",
    "query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces ASC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.divorces_duration_of_marriage_citizenship_categories\nWHERE year = 1995\nAND citizenship_category_husband = 'Switzerland'\nAND citizenship_category_wife = 'Switzerland'\nAND duration_of_marriage = '10-14 years'\nORDER BY amount ASC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 202, 171, 69, 4, 129\nspatialunit_uid : 6004_A.ADM3, 5843_A.ADM3, 2831_A.ADM3, 4230_A.ADM3, 786_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 0, 4, 11, 1, 12\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In 1995, which municipality had the lowest number of divorces between Swiss couples who were married for 10-14 years?\n    ### SQL query:\n\n",
    "process_time": 5.960281683132052,
    "num_tokens": 1020,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 42,
    "question": "How has the number of divorces for Swiss couples changed from 1990 to 2000?",
    "query": "SELECT year, SUM(amount) as total\nFROM divorces_duration_of_marriage_citizenship_categories WHERE year BETWEEN 1990 AND 2000\n  AND duration_of_marriage = 'Duration of marriage - total'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY year\nORDER BY year;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT year, amount\nFROM experiment.divorces_duration_of_marriage_citizenship_categories\nWHERE citizenship_category_husband = 'Switzerland' AND citizenship_category_wife = 'Switzerland'\nAND year >= 1990 AND year <= 2000",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 202, 171, 69, 4, 129\nspatialunit_uid : 6004_A.ADM3, 5843_A.ADM3, 2831_A.ADM3, 4230_A.ADM3, 786_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 0, 4, 11, 1, 12\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How has the number of divorces for Swiss couples changed from 1990 to 2000?\n    ### SQL query:\n\n",
    "process_time": 12.186720268102363,
    "num_tokens": 1013,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 43,
    "question": "Which municipality had the highest number of divorces in 1995 between Swiss couples?",
    "query": "SELECT su.name, d.year, SUM(d.amount) as total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE d.year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND d.duration_of_marriage = 'Duration of marriage - total'\n  AND d.citizenship_category_husband = 'Switzerland'\n  AND d.citizenship_category_wife = 'Switzerland'\nGROUP BY su.name, d.year\nORDER BY total_divorces DESC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.divorces_duration_of_marriage_citizenship_categories\nWHERE year = 1995\nAND citizenship_category_husband = 'Switzerland'\nAND citizenship_category_wife = 'Switzerland'\nORDER BY amount DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 202, 171, 69, 4, 129\nspatialunit_uid : 6004_A.ADM3, 5843_A.ADM3, 2831_A.ADM3, 4230_A.ADM3, 786_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 0, 4, 11, 1, 12\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Which municipality had the highest number of divorces in 1995 between Swiss couples?\n    ### SQL query:\n\n",
    "process_time": 4.618737810989842,
    "num_tokens": 1010,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 44,
    "question": "Give me the average number of marriages at the canton level in 2001, where both the husband and wife are citizens of Swiss?",
    "query": "SELECT  AVG(T1.amount)  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2001  AND T1.citizenship_category_husband = 'Switzerland' AND  T1.citizenship_category_wife = 'Switzerland';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT AVG(amount) \nFROM experiment.marriage_citizenship mc\nJOIN experiment.spatial_unit su ON mc.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = true\nAND mc.year = 2001\nAND mc.citizenship_category_husband = 'Switzerland'\nAND mc.citizenship_category_wife = 'Switzerland'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Give me the average number of marriages at the canton level in 2001, where both the husband and wife are citizens of Swiss?\n    ### SQL query:\n\n",
    "process_time": 21.075940568000078,
    "num_tokens": 971,
    "hardness": "medium",
    "lang": "en"
  },
  {
    "i": 45,
    "question": "Give me the minimum , maximum and average number of marriages at the municipal level in 2011, where both the husband and wife are citizens of foreign countries?",
    "query": "SELECT  MIN(T1.amount),Max(T1.amount),AVG(T1.amount)  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' AND T1.year = 2011  AND T1.citizenship_category_husband = 'Foreign country' AND  T1.citizenship_category_wife = 'Foreign country';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT MIN(amount) AS minimum, MAX(amount) AS maximum, AVG(amount) AS average\nFROM experiment.marriage_citizenship mc\nJOIN experiment.spatial_unit su ON mc.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2011\nAND citizenship_category_husband = 'Foreign country'\nAND citizenship_category_wife = 'Foreign country'\nAND su.municipal = true",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Give me the minimum , maximum and average number of marriages at the municipal level in 2011, where both the husband and wife are citizens of foreign countries?\n    ### SQL query:\n\n",
    "process_time": 6.952613123925403,
    "num_tokens": 975,
    "hardness": "hard",
    "lang": "en"
  },
  {
    "i": 46,
    "question": "In 2006, what were the top 10 cantons with the highest number of marriages where the grooms were Swiss nationals?",
    "query": "SELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount   FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2012  AND T1.citizenship_category_husband = 'Switzerland' AND  T1.citizenship_category_wife = 'Citizenship of wife - total'\nORDER BY T1.amount DESC\nLIMIT 10;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT spatialunit_uid, SUM(amount) AS total_marriages\nFROM experiment.marriage_citizenship\nWHERE year = 2006 AND citizenship_category_husband = 'Switzerland'\nGROUP BY spatialunit_uid\nORDER BY total_marriages DESC\nLIMIT 10;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In 2006, what were the top 10 cantons with the highest number of marriages where the grooms were Swiss nationals?\n    ### SQL query:\n\n",
    "process_time": 4.298683866858482,
    "num_tokens": 970,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 47,
    "question": "Which canton has the highest number of marriages between Swiss women and Swiss men on 2018?",
    "query": "SELECT  T2.name,T1.citizenship_category_wife,T1.citizenship_category_husband,T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' and T1.year = 2018 and T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Switzerland'\nORDER BY  T1.amount DESC\nLIMIT 1;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.marriage_citizenship\nWHERE year = 2018\nAND citizenship_category_husband = 'Switzerland'\nAND citizenship_category_wife = 'Switzerland'\nGROUP BY spatialunit_uid\nORDER BY COUNT(*) DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Which canton has the highest number of marriages between Swiss women and Swiss men on 2018?\n    ### SQL query:\n\n",
    "process_time": 9.801033125026152,
    "num_tokens": 963,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 48,
    "question": "What are the top five municipalities with the highest number of marriages between Swiss men and foreign women in the year 2018?",
    "query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.municipal = 'True' AND T1.year = 2018 AND T1.citizenship_category_husband = 'Foreign country' and T1.citizenship_category_wife = 'Switzerland'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT spatialunit_uid, amount\nFROM experiment.marriage_citizenship\nWHERE year = 2018 AND citizenship_category_husband = 'Switzerland' AND citizenship_category_wife = 'Foreign country'\nORDER BY amount DESC\nLIMIT 5;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What are the top five municipalities with the highest number of marriages between Swiss men and foreign women in the year 2018?\n    ### SQL query:\n\n",
    "process_time": 7.7806720330845565,
    "num_tokens": 968,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 49,
    "question": "In 2012, how many marriages took place in the District of Affoltern, categorized by the citizenships of the wives and husbands involved?",
    "query": "SELECT T2.name,T1.citizenship_category_husband ,T1.citizenship_category_wife , T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.district = 'True' AND T1.year = 2010  AND T2.name ilike '%Affoltern%' AND T1.citizenship_category_wife != 'Citizenship of wife - total' and T1.citizenship_category_husband != 'Citizenship of husband - total';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT \n    citizenship_category_husband,\n    citizenship_category_wife,\n    SUM(amount) AS total_marriages\nFROM \n    experiment.marriage_citizenship mc\nJOIN \n    experiment.spatial_unit su ON mc.spatialunit_uid = su.spatialunit_uid\nWHERE \n    su.name = 'Affoltern' AND\n    su.district = true AND\n    mc.year = 2012\nGROUP BY \n    citizenship_category_husband,\n    citizenship_category_wife;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In 2012, how many marriages took place in the District of Affoltern, categorized by the citizenships of the wives and husbands involved?\n    ### SQL query:\n\n",
    "process_time": 6.914794334908947,
    "num_tokens": 973,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 50,
    "question": "How many marriages occurred in Reiden in 1999 with a wife who held Swiss citizenship?",
    "query": "SELECT  T1.citizenship_category_wife, T2.name,T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.name ilike  '%Reiden%' and T1.year = 1999 and T1.citizenship_category_wife = 'Switzerland' and T1.citizenship_category_husband = 'Citizenship of husband - total';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.marriage_citizenship mc\nJOIN experiment.spatial_unit su ON mc.spatialunit_uid = su.spatialunit_uid\nWHERE su.name = 'Reiden' AND mc.year = 1999 AND mc.citizenship_category_wife = 'Switzerland'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many marriages occurred in Reiden in 1999 with a wife who held Swiss citizenship?\n    ### SQL query:\n\n",
    "process_time": 15.573360808892176,
    "num_tokens": 962,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 51,
    "question": "In which year did the Canton of Bern have the highest number of marriages between Swiss citizens and foreigners?",
    "query": "SELECT UN.year, UN.citizenship_category_husband, UN.citizenship_category_wife, UN.amount FROM\n(SELECT T2.name, T1.year, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T2.name  ilike '%Bern%'  AND T1.citizenship_category_wife = 'Switzerland' AND T1.citizenship_category_husband = 'Foreign country'\nUNION ALL\nSELECT T2.name, T1.year, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T2.name  ilike '%Bern%'  AND T1.citizenship_category_wife = 'Foreign country' AND T1.citizenship_category_husband = 'Switzerland') AS UN\nORDER BY UN.amount DESC\nLIMIT 1;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT year\nFROM experiment.marriage_citizenship\nWHERE citizenship_category_husband = 'Switzerland' \n    AND citizenship_category_wife = 'Foreign country'\n    AND spatialunit_uid IN (\n        SELECT spatialunit_uid\n        FROM experiment.spatial_unit\n        WHERE name = 'Bern'\n            AND canton = true\n    )\nGROUP BY year\nORDER BY SUM(amount) DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 268714, 268618, 268736, 268690, 268715\nspatialunit_uid : 4120_A.ADM3, 3352_A.ADM3, 31_A.ADM3, 991_A.ADM3, 2831_A.ADM3\nyear : 2011, 1969, 2012, 2019, 1982\namount : 41, 4, 11, 156, 9\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In which year did the Canton of Bern have the highest number of marriages between Swiss citizens and foreigners?\n    ### SQL query:\n\n",
    "process_time": 6.242854845942929,
    "num_tokens": 963,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 52,
    "question": "What was the total population count in each canton , considering both non-permanent and permanent residents on the year of 2018?",
    "query": "SELECT T1.year, T2.name, T1.population_type, T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True'  AND T1.year = 2018 AND T1.place_of_birth = 'Place of birth - total' AND T1.citizenship = 'Citizenship - total'\nORDER BY  T1.amount DESC;\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT s.name, SUM(e.amount) AS total_population\nFROM experiment.resident_population_birthplace_citizenship_type AS e\nJOIN experiment.spatial_unit AS s ON e.spatialunit_uid = s.spatialunit_uid\nWHERE e.year = 2018\nGROUP BY s.name",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 11359925, 11360025, 11359887, 11359918, 11359943\nspatialunit_uid : 2087_A.ADM3, 5423_A.ADM3, 2772_A.ADM3, 923_A.ADM3, 1107_A.ADM2\nyear : 2011, 2012, 2019, 2021, 2014\ncitizenship : Yemen, Mozambique, Burundi, Mauritius, Israel\namount : 162, 4, 2, 1, 103\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What was the total population count in each canton , considering both non-permanent and permanent residents on the year of 2018?\n    ### SQL query:\n\n",
    "process_time": 4.777001430047676,
    "num_tokens": 1005,
    "hardness": "hard",
    "lang": "en"
  },
  {
    "i": 53,
    "question": "How many people who were born in Switzerland did not possess permanent residency status by 2015? List by citizenship",
    "query": "SELECT T1.year, T1.population_type,T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship != 'Citizenship - total';\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT citizenship, SUM(amount) AS total_people\nFROM experiment.resident_population_birthplace_citizenship_type\nWHERE place_of_birth = 'Switzerland' AND population_type = 'Non permanent resident population' AND year <= 2015\nGROUP BY citizenship",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 11359925, 11360025, 11359887, 11359918, 11359943\nspatialunit_uid : 2087_A.ADM3, 5423_A.ADM3, 2772_A.ADM3, 923_A.ADM3, 1107_A.ADM2\nyear : 2011, 2012, 2019, 2021, 2014\ncitizenship : Yemen, Mozambique, Burundi, Mauritius, Israel\namount : 162, 4, 2, 1, 103\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many people who were born in Switzerland did not possess permanent residency status by 2015? List by citizenship\n    ### SQL query:\n\n",
    "process_time": 4.01404759217985,
    "num_tokens": 1001,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 54,
    "question": "How many individuals with Swiss permanent residency were born within the country's borders on 2006?",
    "query": "SELECT T1.year,T1.population_type,T1.place_of_birth,T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True' AND T1.year = 2019 AND T1.population_type = 'Permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.resident_population_birthplace_citizenship_type \nWHERE population_type = 'Permanent resident population' \nAND place_of_birth = 'Switzerland' \nAND year = 2006",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 11359925, 11360025, 11359887, 11359918, 11359943\nspatialunit_uid : 2087_A.ADM3, 5423_A.ADM3, 2772_A.ADM3, 923_A.ADM3, 1107_A.ADM2\nyear : 2011, 2012, 2019, 2021, 2014\ncitizenship : Yemen, Mozambique, Burundi, Mauritius, Israel\namount : 162, 4, 2, 1, 103\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many individuals with Swiss permanent residency were born within the country's borders on 2006?\n    ### SQL query:\n\n",
    "process_time": 3.819255877053365,
    "num_tokens": 997,
    "hardness": "extra",
    "lang": "en"
  },
  {
    "i": 55,
    "question": "How many individuals in each canton of Switzerland were born abroad and hold Swiss citizenship?",
    "query": "SELECT T2.name, T1.place_of_birth, T1.citizenship, Sum(T1.amount) from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True'   AND T1.place_of_birth = 'Abroad' AND T1.citizenship ilike '%Switzerland%'\nGROUP BY T2.name, T1.place_of_birth, T1.citizenship;\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT s.name, COUNT(*) AS count\nFROM experiment.resident_population_birthplace_citizenship_type r\nJOIN experiment.spatial_unit s ON r.spatialunit_uid = s.spatialunit_uid\nWHERE r.population_type = 'Permanent resident population'\nAND r.place_of_birth = 'Abroad'\nAND r.citizenship = 'Switzerland'\nAND s.canton = true\nGROUP BY s.name;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 11359925, 11360025, 11359887, 11359918, 11359943\nspatialunit_uid : 2087_A.ADM3, 5423_A.ADM3, 2772_A.ADM3, 923_A.ADM3, 1107_A.ADM2\nyear : 2011, 2012, 2019, 2021, 2014\ncitizenship : Yemen, Mozambique, Burundi, Mauritius, Israel\namount : 162, 4, 2, 1, 103\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many individuals in each canton of Switzerland were born abroad and hold Swiss citizenship?\n    ### SQL query:\n\n",
    "process_time": 6.589335697004572,
    "num_tokens": 995,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 56,
    "question": "How many of Swiss residenc were born within the country and had Iranian Citizenship on 2018?",
    "query": "SELECT T1.year, T1.population_type, T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2018 AND T1.place_of_birth = 'Switzerland' AND T1.citizenship ilike '%iran%';\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.resident_population_birthplace_citizenship_type AS r\nJOIN experiment.spatial_unit AS s ON r.spatialunit_uid = s.spatialunit_uid\nWHERE r.year = 2018\nAND r.place_of_birth = 'Switzerland'\nAND r.citizenship = 'Iran'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 11359925, 11360025, 11359887, 11359918, 11359943\nspatialunit_uid : 2087_A.ADM3, 5423_A.ADM3, 2772_A.ADM3, 923_A.ADM3, 1107_A.ADM2\nyear : 2011, 2012, 2019, 2021, 2014\ncitizenship : Yemen, Mozambique, Burundi, Mauritius, Israel\namount : 162, 4, 2, 1, 103\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many of Swiss residenc were born within the country and had Iranian Citizenship on 2018?\n    ### SQL query:\n\n",
    "process_time": 5.074023975990713,
    "num_tokens": 998,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 57,
    "question": "How many vehicles do we have in canton zurich in 2020?",
    "query": "SELECT S.name, sum(T.amount) as amount from stock_vehicles as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'  and T.year = 2020 and S.canton = 'True'\nGROUP BY S.name;\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT SUM(amount) AS total_vehicles\nFROM experiment.resident_population_birthplace_citizenship_type AS rp\nJOIN experiment.spatial_unit AS su ON rp.spatialunit_uid = su.spatialunit_uid\nWHERE su.name = 'Zurich' AND rp.year = 2020",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 11359925, 11360025, 11359887, 11359918, 11359943\nspatialunit_uid : 2087_A.ADM3, 5423_A.ADM3, 2772_A.ADM3, 923_A.ADM3, 1107_A.ADM2\nyear : 2011, 2012, 2019, 2021, 2014\ncitizenship : Yemen, Mozambique, Burundi, Mauritius, Israel\namount : 162, 4, 2, 1, 103\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    How many vehicles do we have in canton zurich in 2020?\n    ### SQL query:\n\n",
    "process_time": 13.530777869047597,
    "num_tokens": 994,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 58,
    "question": "What proportion of the Swiss budget will be spent on health in 2010 and 2020?",
    "query": "SELECT year, SUM(percentage_of_total_expenses) as precentage_of_total_expenses_for_health\nFROM government_expenditure_by_function_cofog WHERE function_cofog_broad = 'Health'\n    AND institutional_sector = 'Government'\n    AND year <= 2020\n    AND year >= 2010\nGROUP BY year\nORDER BY year ASC;\n",
    "db_id": "government_expenditure_by_function_cofog",
    "generated_query": "SELECT year, SUM(percentage_of_total_expenses) AS proportion_of_budget\nFROM experiment.government_expenditure_by_function_cofog\nWHERE function_cofog_narrow = 'Health'\nAND year IN (2010, 2020)\nGROUP BY year",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.government_expenditure_by_function_cofog (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tfunction_cofog_narrow TEXT, \n\tfunction_cofog_broad TEXT, \n\tinstitutional_sector TEXT, \n\texpenses_in_million_chf NUMERIC, \n\tpercentage_of_total_expenses NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT government_expenditure_by_function_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT government_expenditure_by_function_cofog_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in government_expenditure_by_function_cofog and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nexpenses_in_million_chf : 1507, 4, 1406, 1547, 1423\npercentage_of_total_expenses : 3.29999999999999982, 3.60000000000000009, 1.89999999999999991, 3.79999999999999982, 1.30000000000000004\n*/\n\n/*\nColumn name, Column discription, Example values\nfunction_cofog_narrow, Narrow function of govenrment by COFOG (Classification of the functions of government) of the United Nations, Foreign economic aid,General services,Executive and legislative organs, financial and fiscal affairs, external affairs\nfunction_cofog_broad, Broad function of govenrment by COFOG (Classification of the functions of government) of the United Nations, General public services,Defence,Public order and safety\ninstitutional_sector, Institutional Sector, Government,   Confederation,Canton,Commune,Social security funds\nexpenses_in_million_chf, Expenses in million CHF, 2167,2341,2599\npercentage_of_total_expenses, percentage of total expenses, 1.1,1.2,2.6\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What proportion of the Swiss budget will be spent on health in 2010 and 2020?\n    ### SQL query:\n\n",
    "process_time": 4.438340336084366,
    "num_tokens": 1101,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 59,
    "question": "What were the 3 largest sectors for spending of the confederation in year 2021 and how much were they?",
    "query": "SELECT SUM(T.expenses_in_million_chf) as expenses_in_mio_chf,\n  T.function_cofog_narrow as section_with_the_highest_expenses_2020\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Confederation' AND year = 2020\nGROUP BY T.function_cofog_narrow, T.year, T.institutional_sector\nORDER BY SUM(expenses_in_million_chf) DESC LIMIT 3;\n",
    "db_id": "government_expenditure_by_function_cofog",
    "generated_query": "SELECT function_cofog_broad, expenses_in_million_chf\nFROM experiment.government_expenditure_by_function_cofog\nWHERE year = 2021 AND institutional_sector = 'Confederation'\nORDER BY expenses_in_million_chf DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.government_expenditure_by_function_cofog (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tfunction_cofog_narrow TEXT, \n\tfunction_cofog_broad TEXT, \n\tinstitutional_sector TEXT, \n\texpenses_in_million_chf NUMERIC, \n\tpercentage_of_total_expenses NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT government_expenditure_by_function_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT government_expenditure_by_function_cofog_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in government_expenditure_by_function_cofog and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nexpenses_in_million_chf : 1507, 4, 1406, 1547, 1423\npercentage_of_total_expenses : 3.29999999999999982, 3.60000000000000009, 1.89999999999999991, 3.79999999999999982, 1.30000000000000004\n*/\n\n/*\nColumn name, Column discription, Example values\nfunction_cofog_narrow, Narrow function of govenrment by COFOG (Classification of the functions of government) of the United Nations, Foreign economic aid,General services,Executive and legislative organs, financial and fiscal affairs, external affairs\nfunction_cofog_broad, Broad function of govenrment by COFOG (Classification of the functions of government) of the United Nations, General public services,Defence,Public order and safety\ninstitutional_sector, Institutional Sector, Government,   Confederation,Canton,Commune,Social security funds\nexpenses_in_million_chf, Expenses in million CHF, 2167,2341,2599\npercentage_of_total_expenses, percentage of total expenses, 1.1,1.2,2.6\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What were the 3 largest sectors for spending of the confederation in year 2021 and how much were they?\n    ### SQL query:\n\n",
    "process_time": 10.855463220039383,
    "num_tokens": 1105,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 60,
    "question": "What proportion of the Swiss budget is invested in public safety each year?",
    "query": "SELECT year, SUM(T.percentage_of_total_expenses) as percentage_of_total_expenses_for_safety\nFROM government_expenditure_by_function_cofog AS T\nWHERE LOWER(function_cofog_broad) LIKE '%public%safety%'\n    AND institutional_sector = 'Government'\nGROUP BY year\nORDER BY year ASC;\n",
    "db_id": "government_expenditure_by_function_cofog",
    "generated_query": "SELECT year, SUM(percentage_of_total_expenses) AS proportion_invested\nFROM experiment.government_expenditure_by_function_cofog\nWHERE function_cofog_broad = 'Public order and safety'\nGROUP BY year",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.government_expenditure_by_function_cofog (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tfunction_cofog_narrow TEXT, \n\tfunction_cofog_broad TEXT, \n\tinstitutional_sector TEXT, \n\texpenses_in_million_chf NUMERIC, \n\tpercentage_of_total_expenses NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT government_expenditure_by_function_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT government_expenditure_by_function_cofog_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in government_expenditure_by_function_cofog and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nyear : 2011, 2012, 2019, 2018, 2006\nexpenses_in_million_chf : 1507, 4, 1406, 1547, 1423\npercentage_of_total_expenses : 3.29999999999999982, 3.60000000000000009, 1.89999999999999991, 3.79999999999999982, 1.30000000000000004\n*/\n\n/*\nColumn name, Column discription, Example values\nfunction_cofog_narrow, Narrow function of govenrment by COFOG (Classification of the functions of government) of the United Nations, Foreign economic aid,General services,Executive and legislative organs, financial and fiscal affairs, external affairs\nfunction_cofog_broad, Broad function of govenrment by COFOG (Classification of the functions of government) of the United Nations, General public services,Defence,Public order and safety\ninstitutional_sector, Institutional Sector, Government,   Confederation,Canton,Commune,Social security funds\nexpenses_in_million_chf, Expenses in million CHF, 2167,2341,2599\npercentage_of_total_expenses, percentage of total expenses, 1.1,1.2,2.6\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    What proportion of the Swiss budget is invested in public safety each year?\n    ### SQL query:\n\n",
    "process_time": 4.035760319791734,
    "num_tokens": 1095,
    "hardness": "unknown",
    "lang": "en"
  },
  {
    "i": 61,
    "question": "Welches drei medizinischen Ger\u00e4te hatten den meisten Zuwachs zwischen 2013 und 2021 in der Schweiz und wieviele Neuanschaffungen gab es jeweils?",
    "query": "SELECT T.genutzte_infrastruktur,\n    SUM(CASE WHEN T.jahr = 2021 THEN T.anzahl_gerate ELSE - T.anzahl_gerate END) AS zuwachs_an_geraeten\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country\n    AND T.jahr IN (2013, 2021)\nGROUP BY T.genutzte_infrastruktur\nORDER BY zuwachs_an_geraeten DESC\nLIMIT 3;\n",
    "db_id": "medizinisch_technische_infrastruktur",
    "generated_query": "SELECT genutzte_infrastruktur, SUM(anzahl_gerate) AS neuanschaffungen\nFROM experiment.medizinisch_technische_infrastruktur mti\nJOIN experiment.spatial_unit su ON mti.spatialunit_uid = su.spatialunit_uid\nWHERE su.country = true\nAND jahr >= 2013 AND jahr <= 2021\nGROUP BY genutzte_infrastruktur\nORDER BY neuanschaffungen DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.medizinisch_technische_infrastruktur (\n\tuid SERIAL NOT NULL, \n\tgenutzte_infrastruktur TEXT, \n\tjahr INTEGER, \n\tanzahl_gerate NUMERIC, \n\tanzahl_untersuchungen_total NUMERIC, \n\tanzahl_ambulante_untersuchungen NUMERIC, \n\tanzahl_stationare_untersuchungen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT medizinisch_technische_infrastruktur_pkey PRIMARY KEY (uid), \n\tCONSTRAINT medizinisch_technische_infrastruktur_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in medizinisch_technische_infrastruktur and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_gerate : 201, 4, 11, 219, 23\nanzahl_untersuchungen_total : 1924, 115682, 26024, 59112, 26871\nanzahl_ambulante_untersuchungen : 14104, 84512, 1169, 64467, 669\nanzahl_stationare_untersuchungen : 3582, 7023, 35793, 5682, 1266\nspatialunit_uid : 26_A.ADM1, 2_A.ADM1, 0_CH, 1_A.ADM1, 10_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\ngenutzte_infrastruktur, genutzte Infrastruktur, Gamma Camera (inklusive Szintigraphie und SPECT-Scanner),Linearbeschleuniger (Radiotherapie),MRI\nanzahl_gerate, Anzahl der Ger\u00e4te, None\nanzahl_untersuchungen_total, Anzahl aller Untersuchungen, None\nanzahl_ambulante_untersuchungen, Anzahl der ambulanten Untersuchungen, None\nanzahl_stationare_untersuchungen, Anzahl der station\u00e4ren Untersuchungen, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches drei medizinischen Ger\u00e4te hatten den meisten Zuwachs zwischen 2013 und 2021 in der Schweiz und wieviele Neuanschaffungen gab es jeweils?\n    ### SQL query:\n\n",
    "process_time": 8.747276581125334,
    "num_tokens": 1157,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 62,
    "question": "Welches war das medizinische Ger\u00e4t 2021 in der Schweiz mit den meisten Untersuchungen und wieviele Untersuchungen gab es damit?",
    "query": "SELECT T.genutzte_infrastruktur as meistgenutztes_geraet_2021,\n  SUM(anzahl_untersuchungen_total) as anzahl_untersuchungen\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND jahr = '2021'\nGROUP BY T.genutzte_infrastruktur\nORDER BY anzahl_untersuchungen DESC LIMIT 1;\n",
    "db_id": "medizinisch_technische_infrastruktur",
    "generated_query": "SELECT genutzte_infrastruktur, anzahl_untersuchungen_total\nFROM experiment.medizinisch_technische_infrastruktur\nJOIN experiment.spatial_unit ON experiment.medizinisch_technische_infrastruktur.spatialunit_uid = experiment.spatial_unit.spatialunit_uid\nWHERE jahr = 2021 AND country = true\nORDER BY anzahl_untersuchungen_total DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.medizinisch_technische_infrastruktur (\n\tuid SERIAL NOT NULL, \n\tgenutzte_infrastruktur TEXT, \n\tjahr INTEGER, \n\tanzahl_gerate NUMERIC, \n\tanzahl_untersuchungen_total NUMERIC, \n\tanzahl_ambulante_untersuchungen NUMERIC, \n\tanzahl_stationare_untersuchungen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT medizinisch_technische_infrastruktur_pkey PRIMARY KEY (uid), \n\tCONSTRAINT medizinisch_technische_infrastruktur_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in medizinisch_technische_infrastruktur and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_gerate : 201, 4, 11, 219, 23\nanzahl_untersuchungen_total : 1924, 115682, 26024, 59112, 26871\nanzahl_ambulante_untersuchungen : 14104, 84512, 1169, 64467, 669\nanzahl_stationare_untersuchungen : 3582, 7023, 35793, 5682, 1266\nspatialunit_uid : 26_A.ADM1, 2_A.ADM1, 0_CH, 1_A.ADM1, 10_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\ngenutzte_infrastruktur, genutzte Infrastruktur, Gamma Camera (inklusive Szintigraphie und SPECT-Scanner),Linearbeschleuniger (Radiotherapie),MRI\nanzahl_gerate, Anzahl der Ger\u00e4te, None\nanzahl_untersuchungen_total, Anzahl aller Untersuchungen, None\nanzahl_ambulante_untersuchungen, Anzahl der ambulanten Untersuchungen, None\nanzahl_stationare_untersuchungen, Anzahl der station\u00e4ren Untersuchungen, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches war das medizinische Ger\u00e4t 2021 in der Schweiz mit den meisten Untersuchungen und wieviele Untersuchungen gab es damit?\n    ### SQL query:\n\n",
    "process_time": 7.728882017079741,
    "num_tokens": 1148,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 63,
    "question": "Welche f\u00fcnf Kantone hatte 2021 die gr\u00f6sste medizinische Infrastruktur mit den meisten Ger\u00e4ten und wieviele Ger\u00e4te waren es?",
    "query": "SELECT S.name_de as kanton_mit_groesster_medizinischer_infrastruktur, SUM(T.anzahl_gerate) as anzahl_geraete\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY anzahl_geraete DESC LIMIT 5;\n",
    "db_id": "medizinisch_technische_infrastruktur",
    "generated_query": "SELECT \n    s.name AS kanton,\n    m.anzahl_gerate AS anzahl_gerate\nFROM \n    experiment.medizinisch_technische_infrastruktur AS m\n    INNER JOIN experiment.spatial_unit AS s ON m.spatialunit_uid = s.spatialunit_uid\nWHERE \n    m.jahr = 2021\nORDER BY \n    m.anzahl_gerate DESC\nLIMIT 5;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.medizinisch_technische_infrastruktur (\n\tuid SERIAL NOT NULL, \n\tgenutzte_infrastruktur TEXT, \n\tjahr INTEGER, \n\tanzahl_gerate NUMERIC, \n\tanzahl_untersuchungen_total NUMERIC, \n\tanzahl_ambulante_untersuchungen NUMERIC, \n\tanzahl_stationare_untersuchungen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT medizinisch_technische_infrastruktur_pkey PRIMARY KEY (uid), \n\tCONSTRAINT medizinisch_technische_infrastruktur_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in medizinisch_technische_infrastruktur and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_gerate : 201, 4, 11, 219, 23\nanzahl_untersuchungen_total : 1924, 115682, 26024, 59112, 26871\nanzahl_ambulante_untersuchungen : 14104, 84512, 1169, 64467, 669\nanzahl_stationare_untersuchungen : 3582, 7023, 35793, 5682, 1266\nspatialunit_uid : 26_A.ADM1, 2_A.ADM1, 0_CH, 1_A.ADM1, 10_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\ngenutzte_infrastruktur, genutzte Infrastruktur, Gamma Camera (inklusive Szintigraphie und SPECT-Scanner),Linearbeschleuniger (Radiotherapie),MRI\nanzahl_gerate, Anzahl der Ger\u00e4te, None\nanzahl_untersuchungen_total, Anzahl aller Untersuchungen, None\nanzahl_ambulante_untersuchungen, Anzahl der ambulanten Untersuchungen, None\nanzahl_stationare_untersuchungen, Anzahl der station\u00e4ren Untersuchungen, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche f\u00fcnf Kantone hatte 2021 die gr\u00f6sste medizinische Infrastruktur mit den meisten Ger\u00e4ten und wieviele Ger\u00e4te waren es?\n    ### SQL query:\n\n",
    "process_time": 7.557218404952437,
    "num_tokens": 1152,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 64,
    "question": "Welcher Vorlage in welchem Jahr hatte die meisten Nein Stimmen und bei welcher Wahlbeteiligung und wievielen Ja Stimmen in Prozent?",
    "query": "SELECT T.vorlage, T.jahr, T.anzahl_nein_stimmen AS hoechste_anzahl_nein_stimmen, T.beteiligung_in_prozent, T.ja_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\nORDER BY hoechste_anzahl_nein_stimmen DESC LIMIT 1;\n",
    "db_id": "volksabstimmung_nach_kanton_seit_1861",
    "generated_query": "SELECT vorlage, jahr, anzahl_nein_stimmen, beteiligung_in_prozent, ja_in_prozent\nFROM experiment.volksabstimmung_nach_kanton_seit_1861\nWHERE anzahl_nein_stimmen = (SELECT MAX(anzahl_nein_stimmen) FROM experiment.volksabstimmung_nach_kanton_seit_1861)",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.volksabstimmung_nach_kanton_seit_1861 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tvorlage TEXT, \n\tanzahl_stimmberechtigte NUMERIC, \n\tanzahl_abgegebene_stimmen NUMERIC, \n\tbeteiligung_in_prozent NUMERIC, \n\tanzahl_gueltige_stimmzettel NUMERIC, \n\tanzahl_ja_stimmen NUMERIC, \n\tanzahl_nein_stimmen NUMERIC, \n\tja_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_pkey PRIMARY KEY (uid), \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in volksabstimmung_nach_kanton_seit_1861 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nvorlage : Bundesgesetz \u00fcber polizeiliche Massnahmen zur Bek\u00e4mpfung von Terrorismus (PMT), Bundesgesetz \u00fcber den Strassentransitverkehr im Alpengebiet (Sanierung Gotthard-Strassentunnel), Volksinitiative \u00abSchweizer Recht statt fremde Richter (Selbstbestimmungsinitiative)\u00bb, Volksinitiative \u00abF\u00fcr eine soziale Einheitskrankenkasse\u00bb, Volksinitiative \u00abEigene vier W\u00e4nde dank Bausparen\u00bb\nanzahl_stimmberechtigte : 5400197, 5493036, 4721422, 5039710, 4859437\nanzahl_abgegebene_stimmen : 2314490, 2030846, 2941136, 1783507, 1914955\nbeteiligung_in_prozent : 49.5600000000000023, 59.7000000000000028, 44.8500000000000014, 41.7199999999999989, 53.5900000000000034\nanzahl_gueltige_stimmzettel : 2542334, 2275233, 1942832, 2342747, 2218098\nanzahl_ja_stimmen : 881953, 384905, 343008, 1073229, 1442591\nanzahl_nein_stimmen : 780457, 1662748, 393638, 618664, 1049508\nja_in_prozent : 29.50000000000000000, 46.02000000000000313, 32.72999999999999687, 60.20000000000000284, 60.34000000000000341\n*/\n\n/*\nColumn name, Column discription, Example values\nvorlage, Titel der Abstimmungsvorlage, Bundesgesetz \u00fcber die Errichtung der schweizerischen Bundesbank,Bundesbeschluss betreffend Revision von Art. 103 der Bundesverfassung und Aufnahme eines Artikels 114bis in die Bundesverfassung,Volksinitiative \u00abf\u00fcr die vermehrte Mitbestimmung der Bundesversammlung und des Schweizervolkes im Nationalstrassenbau\u00bb\nanzahl_stimmberechtigte, Anzahl Stimmberechtigte, None\nanzahl_abgegebene_stimmen, Anzahl abgegebene Stimmenen, None\nbeteiligung_in_prozent, Wahlbeteiligung in Prozent, None\nanzahl_gueltige_stimmzettel, Anzahl g\u00fcltige Stimmenzettel, None\nanzahl_ja_stimmen, Anzahl ja Stimmen, None\nanzahl_nein_stimmen, Anzahl nein Stimmen, None\nja_in_prozent, ja Stimmen in Prozent der Gesamtstimmen, None\n*/\n\n   \n    ### Question: \n    Welcher Vorlage in welchem Jahr hatte die meisten Nein Stimmen und bei welcher Wahlbeteiligung und wievielen Ja Stimmen in Prozent?\n    ### SQL query:\n\n",
    "process_time": 15.933431778103113,
    "num_tokens": 1576,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 65,
    "question": "Welches waren die drei Volksabstimmung mit der h\u00f6chsten Beteiligung, wann fanden sie statt und wie hoch war die Beteiligung in Prozent?",
    "query": "SELECT T.jahr, MAX(T.beteiligung_in_prozent) AS hoechste_beteiligung_in_prozent, T.vorlage\nFROM volksabstimmung_nach_kanton_seit_1861 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.beteiligung_in_prozent IS NOT NULL\nGROUP BY T.jahr, T.vorlage\nORDER BY hoechste_beteiligung_in_prozent DESC\nLIMIT 3;\n",
    "db_id": "volksabstimmung_nach_kanton_seit_1861",
    "generated_query": "SELECT vorlage, jahr, beteiligung_in_prozent\nFROM experiment.volksabstimmung_nach_kanton_seit_1861\nORDER BY beteiligung_in_prozent DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.volksabstimmung_nach_kanton_seit_1861 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tvorlage TEXT, \n\tanzahl_stimmberechtigte NUMERIC, \n\tanzahl_abgegebene_stimmen NUMERIC, \n\tbeteiligung_in_prozent NUMERIC, \n\tanzahl_gueltige_stimmzettel NUMERIC, \n\tanzahl_ja_stimmen NUMERIC, \n\tanzahl_nein_stimmen NUMERIC, \n\tja_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_pkey PRIMARY KEY (uid), \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in volksabstimmung_nach_kanton_seit_1861 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nvorlage : Bundesgesetz \u00fcber polizeiliche Massnahmen zur Bek\u00e4mpfung von Terrorismus (PMT), Bundesgesetz \u00fcber den Strassentransitverkehr im Alpengebiet (Sanierung Gotthard-Strassentunnel), Volksinitiative \u00abSchweizer Recht statt fremde Richter (Selbstbestimmungsinitiative)\u00bb, Volksinitiative \u00abF\u00fcr eine soziale Einheitskrankenkasse\u00bb, Volksinitiative \u00abEigene vier W\u00e4nde dank Bausparen\u00bb\nanzahl_stimmberechtigte : 5400197, 5493036, 4721422, 5039710, 4859437\nanzahl_abgegebene_stimmen : 2314490, 2030846, 2941136, 1783507, 1914955\nbeteiligung_in_prozent : 49.5600000000000023, 59.7000000000000028, 44.8500000000000014, 41.7199999999999989, 53.5900000000000034\nanzahl_gueltige_stimmzettel : 2542334, 2275233, 1942832, 2342747, 2218098\nanzahl_ja_stimmen : 881953, 384905, 343008, 1073229, 1442591\nanzahl_nein_stimmen : 780457, 1662748, 393638, 618664, 1049508\nja_in_prozent : 29.50000000000000000, 46.02000000000000313, 32.72999999999999687, 60.20000000000000284, 60.34000000000000341\n*/\n\n/*\nColumn name, Column discription, Example values\nvorlage, Titel der Abstimmungsvorlage, Bundesgesetz \u00fcber die Errichtung der schweizerischen Bundesbank,Bundesbeschluss betreffend Revision von Art. 103 der Bundesverfassung und Aufnahme eines Artikels 114bis in die Bundesverfassung,Volksinitiative \u00abf\u00fcr die vermehrte Mitbestimmung der Bundesversammlung und des Schweizervolkes im Nationalstrassenbau\u00bb\nanzahl_stimmberechtigte, Anzahl Stimmberechtigte, None\nanzahl_abgegebene_stimmen, Anzahl abgegebene Stimmenen, None\nbeteiligung_in_prozent, Wahlbeteiligung in Prozent, None\nanzahl_gueltige_stimmzettel, Anzahl g\u00fcltige Stimmenzettel, None\nanzahl_ja_stimmen, Anzahl ja Stimmen, None\nanzahl_nein_stimmen, Anzahl nein Stimmen, None\nja_in_prozent, ja Stimmen in Prozent der Gesamtstimmen, None\n*/\n\n   \n    ### Question: \n    Welches waren die drei Volksabstimmung mit der h\u00f6chsten Beteiligung, wann fanden sie statt und wie hoch war die Beteiligung in Prozent?\n    ### SQL query:\n\n",
    "process_time": 3.992968879174441,
    "num_tokens": 1580,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 66,
    "question": "Welches ist aktuellest Vorlage die schweizweit angenommen wurde, aber bei der in der Mehrheit der Kanton dagegen gestimmt wurde? Zeige auch wieviel Prozent Ja Stimmen sie Schweiz weit bekam.",
    "query": "SELECT T.vorlage,\n  MAX(CASE WHEN T.ja_in_prozent > 50 AND S.country = 'TRUE' THEN T.ja_in_prozent ELSE NULL END) AS angenommen_gesamt,\n  COUNT(CASE WHEN T.ja_in_prozent > 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END) AS angenommen_in,\n  COUNT(CASE WHEN T.ja_in_prozent <= 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END) AS abgelehnt_in\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nGROUP BY T.vorlage, T.jahr\nHAVING MAX(CASE WHEN T.ja_in_prozent > 50 AND S.country = 'TRUE' THEN T.ja_in_prozent ELSE NULL END) IS NOT NULL\n   AND COUNT(CASE WHEN T.ja_in_prozent <= 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END) > COUNT(CASE WHEN T.ja_in_prozent > 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END)\nORDER BY T.jahr DESC LIMIT 1;\n",
    "db_id": "volksabstimmung_nach_kanton_seit_1861",
    "generated_query": "SELECT \n    v.vorlage,\n    v.ja_in_prozent\nFROM \n    experiment.volksabstimmung_nach_kanton_seit_1861 v\nWHERE \n    v.ja_in_prozent > 50\n    AND NOT EXISTS (\n        SELECT \n            *\n        FROM \n            experiment.volksabstimmung_nach_kanton_seit_1861 v2\n        WHERE \n            v2.vorlage = v.vorlage\n            AND v2.ja_in_prozent > 50\n            AND v2.ja_in_prozent < v.ja_in_prozent\n    )",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.volksabstimmung_nach_kanton_seit_1861 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tvorlage TEXT, \n\tanzahl_stimmberechtigte NUMERIC, \n\tanzahl_abgegebene_stimmen NUMERIC, \n\tbeteiligung_in_prozent NUMERIC, \n\tanzahl_gueltige_stimmzettel NUMERIC, \n\tanzahl_ja_stimmen NUMERIC, \n\tanzahl_nein_stimmen NUMERIC, \n\tja_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_pkey PRIMARY KEY (uid), \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in volksabstimmung_nach_kanton_seit_1861 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nvorlage : Bundesgesetz \u00fcber polizeiliche Massnahmen zur Bek\u00e4mpfung von Terrorismus (PMT), Bundesgesetz \u00fcber den Strassentransitverkehr im Alpengebiet (Sanierung Gotthard-Strassentunnel), Volksinitiative \u00abSchweizer Recht statt fremde Richter (Selbstbestimmungsinitiative)\u00bb, Volksinitiative \u00abF\u00fcr eine soziale Einheitskrankenkasse\u00bb, Volksinitiative \u00abEigene vier W\u00e4nde dank Bausparen\u00bb\nanzahl_stimmberechtigte : 5400197, 5493036, 4721422, 5039710, 4859437\nanzahl_abgegebene_stimmen : 2314490, 2030846, 2941136, 1783507, 1914955\nbeteiligung_in_prozent : 49.5600000000000023, 59.7000000000000028, 44.8500000000000014, 41.7199999999999989, 53.5900000000000034\nanzahl_gueltige_stimmzettel : 2542334, 2275233, 1942832, 2342747, 2218098\nanzahl_ja_stimmen : 881953, 384905, 343008, 1073229, 1442591\nanzahl_nein_stimmen : 780457, 1662748, 393638, 618664, 1049508\nja_in_prozent : 29.50000000000000000, 46.02000000000000313, 32.72999999999999687, 60.20000000000000284, 60.34000000000000341\n*/\n\n/*\nColumn name, Column discription, Example values\nvorlage, Titel der Abstimmungsvorlage, Bundesgesetz \u00fcber die Errichtung der schweizerischen Bundesbank,Bundesbeschluss betreffend Revision von Art. 103 der Bundesverfassung und Aufnahme eines Artikels 114bis in die Bundesverfassung,Volksinitiative \u00abf\u00fcr die vermehrte Mitbestimmung der Bundesversammlung und des Schweizervolkes im Nationalstrassenbau\u00bb\nanzahl_stimmberechtigte, Anzahl Stimmberechtigte, None\nanzahl_abgegebene_stimmen, Anzahl abgegebene Stimmenen, None\nbeteiligung_in_prozent, Wahlbeteiligung in Prozent, None\nanzahl_gueltige_stimmzettel, Anzahl g\u00fcltige Stimmenzettel, None\nanzahl_ja_stimmen, Anzahl ja Stimmen, None\nanzahl_nein_stimmen, Anzahl nein Stimmen, None\nja_in_prozent, ja Stimmen in Prozent der Gesamtstimmen, None\n*/\n\n   \n    ### Question: \n    Welches ist aktuellest Vorlage die schweizweit angenommen wurde, aber bei der in der Mehrheit der Kanton dagegen gestimmt wurde? Zeige auch wieviel Prozent Ja Stimmen sie Schweiz weit bekam.\n    ### SQL query:\n\n",
    "process_time": 22.703545124968514,
    "num_tokens": 1595,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 67,
    "question": "Zeigen Sie mir den Gesamtstromverbrauch der Gemeinden in Basel-Landschaft im Jahr 2000 gegen\u00fcber 2020.",
    "query": "SELECT T.jahr , SUM(T.endverbrauch_elektrizitaet_mwh) as gesamt_endverbrauch_elektrizitaet_mwh_2020\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2000, 2020)\nGROUP BY T.jahr\nORDER BY gesamt_endverbrauch_elektrizitaet_mwh_2020 DESC;\n",
    "db_id": "basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr",
    "generated_query": "SELECT \n    SUM(CASE WHEN jahr = 2000 THEN endverbrauch_elektrizitaet_mwh ELSE 0 END) AS gesamtstromverbrauch_2000,\n    SUM(CASE WHEN jahr = 2020 THEN endverbrauch_elektrizitaet_mwh ELSE 0 END) AS gesamtstromverbrauch_2020\nFROM \n    experiment.basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr AS e\nJOIN \n    experiment.spatial_unit AS s ON e.spatialunit_uid = s.spatialunit_uid\nWHERE \n    s.canton = true\n    AND s.name_de LIKE '%Basel-Landschaft%'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tendverbrauch_elektrizitaet_mwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und__pkey1 PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_na_spatialunit_uid_fkey1 FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nendverbrauch_elektrizitaet_mwh : 23253.00000000000000, 5606.00000000000000, 4943.00000000000000, 1040.00000000000000, 8903.00000000000000\nspatialunit_uid : 2772_A.ADM3, 2856_A.ADM3, 2831_A.ADM3, 645_A.ADM3, 2811_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nendverbrauch_elektrizitaet_mwh, Endverbrauch Elektrizitaet Mwh, 536937258529674\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Zeigen Sie mir den Gesamtstromverbrauch der Gemeinden in Basel-Landschaft im Jahr 2000 gegen\u00fcber 2020.\n    ### SQL query:\n\n",
    "process_time": 21.28443303098902,
    "num_tokens": 1011,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 68,
    "question": "Welche der Gemeinden Bottmingen und Birsfelden in Basel-Landschaft hatte 2018 den h\u00f6chsten Stromverbrauch?",
    "query": "SELECT S.name AS gemeinde, T.endverbrauch_elektrizitaet_mwh as endverbrauch_elektrizitaet_mwh_2018\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2018\n    AND S.name IN ('Blauen', 'Blauen (BL)', 'Birsfelden', 'Birsfelden (BL)')\nORDER BY T.endverbrauch_elektrizitaet_mwh DESC;\n",
    "db_id": "basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr",
    "generated_query": "SELECT spatialunit_uid, endverbrauch_elektrizitaet_mwh\nFROM experiment.basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr\nWHERE jahr = 2018 AND spatialunit_uid IN ('Bottmingen', 'Birsfelden')\nORDER BY endverbrauch_elektrizitaet_mwh DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tendverbrauch_elektrizitaet_mwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und__pkey1 PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_na_spatialunit_uid_fkey1 FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nendverbrauch_elektrizitaet_mwh : 23253.00000000000000, 5606.00000000000000, 4943.00000000000000, 1040.00000000000000, 8903.00000000000000\nspatialunit_uid : 2772_A.ADM3, 2856_A.ADM3, 2831_A.ADM3, 645_A.ADM3, 2811_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nendverbrauch_elektrizitaet_mwh, Endverbrauch Elektrizitaet Mwh, 536937258529674\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche der Gemeinden Bottmingen und Birsfelden in Basel-Landschaft hatte 2018 den h\u00f6chsten Stromverbrauch?\n    ### SQL query:\n\n",
    "process_time": 12.558786823879927,
    "num_tokens": 1012,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 69,
    "question": "Wie viele Reformierte gab es im Kanton Basel-Landschaft in 2022?",
    "query": "SELECT SUM(T.anzahl_evangelisch_reformiert)\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2022;\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT anzahl_evangelisch_reformiert\nFROM experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde\nWHERE jahr = 2022",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_evangelisch_reformiert : 628, 4, 1169, 156, 2464\nanzahl_romisch_katholisch : 171, 69, 4, 2350, 4635\nanzahl_christkatholisch : 69, 4, 11, 9, 250\nanzahl_unbekannt_konfession : 269, 69, 4, 23, 314\ngesamt_anzahl_personen : 1042, 9292, 444, 1266, 275\nspatialunit_uid : 2772_A.ADM3, 2856_A.ADM3, 2831_A.ADM3, 2890_A.ADM3, 2784_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viele Reformierte gab es im Kanton Basel-Landschaft in 2022?\n    ### SQL query:\n\n",
    "process_time": 4.223174431128427,
    "num_tokens": 1188,
    "hardness": "medium",
    "lang": "de"
  },
  {
    "i": 70,
    "question": "Zwischen den Gemeinden Arlesheim und Birsfelden im Kanton Basel-Landschaft, welche hatte 2003 einen h\u00f6heren Anteil an Protestanten?",
    "query": "SELECT S.name AS gemeinde, CAST(SUM(T.anzahl_evangelisch_reformiert) AS FLOAT) / SUM(T.gesamt_anzahl_personen) as proportion_protestants_2003\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Ettingen', 'Ettingen (BL)', 'Birsfelden', 'Birsfelden (BL)')\n    AND T.jahr = 2003\nGROUP BY S.name\nORDER BY proportion_protestants_2003 DESC;\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT \n    b1.spatialunit_uid AS gemeinde_arlesheim,\n    b2.spatialunit_uid AS gemeinde_birsfelden\nFROM \n    experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde b1\nJOIN \n    experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde b2 ON b1.spatialunit_uid = b2.spatialunit_uid\nJOIN \n    experiment.spatial_unit s1 ON b1.spatialunit_uid = s1.spatialunit_uid\nJOIN \n    experiment.spatial_unit s2 ON b2.spatialunit_uid = s2.spatialunit_uid\nWHERE \n    s1.name = 'Arlesheim' AND s2.name = 'Birsfelden' AND b1.jahr = 2003 AND b2.jahr = 2003\n    AND b1.anzahl_evangelisch_reformiert > b2.anzahl_evangelisch_reformiert",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_evangelisch_reformiert : 628, 4, 1169, 156, 2464\nanzahl_romisch_katholisch : 171, 69, 4, 2350, 4635\nanzahl_christkatholisch : 69, 4, 11, 9, 250\nanzahl_unbekannt_konfession : 269, 69, 4, 23, 314\ngesamt_anzahl_personen : 1042, 9292, 444, 1266, 275\nspatialunit_uid : 2772_A.ADM3, 2856_A.ADM3, 2831_A.ADM3, 2890_A.ADM3, 2784_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Zwischen den Gemeinden Arlesheim und Birsfelden im Kanton Basel-Landschaft, welche hatte 2003 einen h\u00f6heren Anteil an Protestanten?\n    ### SQL query:\n\n",
    "process_time": 15.100119956070557,
    "num_tokens": 1206,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 71,
    "question": "Wie hoch war der Anteil der r\u00f6misch-katholischen Personen an der ausl\u00e4ndischen Bev\u00f6lkerung des Kantons Basel-Landschaft im Jahr 2021?",
    "query": "SELECT SUM(CAST(T.anzahl_romisch_katholisch AS FLOAT)) / SUM(T.gesamt_anzahl_personen) AS proportion_foreign_romisch_katholisch_basel_land_2021\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\n    AND T.nationalitat = 'Ausland';\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT (anzahl_romisch_katholisch / gesamt_anzahl_personen) * 100 AS Anteil_R\u00f6misch_Katholisch\nFROM experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde\nWHERE jahr = 2021\nAND nationalitat = 'Ausland'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_evangelisch_reformiert : 628, 4, 1169, 156, 2464\nanzahl_romisch_katholisch : 171, 69, 4, 2350, 4635\nanzahl_christkatholisch : 69, 4, 11, 9, 250\nanzahl_unbekannt_konfession : 269, 69, 4, 23, 314\ngesamt_anzahl_personen : 1042, 9292, 444, 1266, 275\nspatialunit_uid : 2772_A.ADM3, 2856_A.ADM3, 2831_A.ADM3, 2890_A.ADM3, 2784_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war der Anteil der r\u00f6misch-katholischen Personen an der ausl\u00e4ndischen Bev\u00f6lkerung des Kantons Basel-Landschaft im Jahr 2021?\n    ### SQL query:\n\n",
    "process_time": 5.9088995300699025,
    "num_tokens": 1209,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 72,
    "question": "Welches waren im Jahr 2022 die 3 Gemeinden mit dem h\u00f6chsten Ausl\u00e4nderanteil im Kanton Basel-Landschaft?",
    "query": "SELECT S.name AS gemeinde, SUM(CASE WHEN T.nationalitat = 'Ausland' THEN T.gesamt_anzahl_personen ELSE 0 END) / CAST(SUM(T.gesamt_anzahl_personen) AS FLOAT) AS proportion_foreign_residents\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2022\nGROUP BY S.name\nORDER BY proportion_foreign_residents DESC\nLIMIT 3;\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT \n    b.spatialunit_uid,\n    b.name,\n    b.name_de,\n    b.name_fr,\n    b.name_it,\n    b.spatialunit_current_id,\n    b.spatialunit_ontology,\n    b.country,\n    b.canton,\n    b.district,\n    b.municipal,\n    b.residence_area,\n    b.neighborhood,\n    b.region,\n    b.zone,\n    b.spatialunit_hist_id,\n    b.canton_hist_id,\n    b.district_hist_id,\n    b.valid_from,\n    b.valid_until,\n    a.nationalitat,\n    a.gesamt_anzahl_personen,\n    a.anzahl_evangelisch_reformiert,\n    a.anzahl_romisch_katholisch,\n    a.anzahl_christkatholisch,\n    a.anzahl_unbekannt_konfession\nFROM \n    experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde AS a\nJOIN \n    experiment.spatial_unit AS b ON a.spatialunit_uid = b.spatialunit_uid\nWHERE \n    a.jahr = 2022\n    AND a.nationalitat = 'Ausland'\n    AND b.canton = true\nORDER BY \n    a.gesamt_anzahl_personen DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_evangelisch_reformiert : 628, 4, 1169, 156, 2464\nanzahl_romisch_katholisch : 171, 69, 4, 2350, 4635\nanzahl_christkatholisch : 69, 4, 11, 9, 250\nanzahl_unbekannt_konfession : 269, 69, 4, 23, 314\ngesamt_anzahl_personen : 1042, 9292, 444, 1266, 275\nspatialunit_uid : 2772_A.ADM3, 2856_A.ADM3, 2831_A.ADM3, 2890_A.ADM3, 2784_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches waren im Jahr 2022 die 3 Gemeinden mit dem h\u00f6chsten Ausl\u00e4nderanteil im Kanton Basel-Landschaft?\n    ### SQL query:\n\n",
    "process_time": 38.41748348204419,
    "num_tokens": 1201,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 73,
    "question": "In welchem Jahr wurde die meiste Wohnfl\u00e4che im Kanton Basel-Landschaft gekauft?",
    "query": "SELECT T.jahr\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nGROUP BY T.jahr\nORDER BY SUM(T.flache_in_m2) DESC\nLIMIT 1;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT jahr\nFROM experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr\nWHERE spatialunit_uid LIKE '28%'\nGROUP BY jahr\nORDER BY SUM(flache_in_m2) DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 1994, 1987, 1991, 1982, 1992\nfalle : 69, 4, 11, 23, 9\nflache_in_m2 : 3900, 2900, 5200, 7900, 11200\nquadratmeterpreis_chf : 551, 275, 314, 250, 586\nspatialunit_uid : 2816_A.ADM3, 2805_A.ADM3, 2808_A.ADM3, 2815_A.ADM3, 2803_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In welchem Jahr wurde die meiste Wohnfl\u00e4che im Kanton Basel-Landschaft gekauft?\n    ### SQL query:\n\n",
    "process_time": 5.1527955159544945,
    "num_tokens": 1062,
    "hardness": "hard",
    "lang": "de"
  },
  {
    "i": 74,
    "question": "Zeigen Sie mir den Preis f\u00fcr Wohnbauland in Basel-Landschaft, dessen Name mit A beginnt, im Jahr 2012.",
    "query": "SELECT S.name, T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2008\n    AND S.name LIKE 'A%'\nLIMIT 10;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT quadratmeterpreis_chf\nFROM experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS b\nJOIN experiment.spatial_unit AS s ON b.spatialunit_uid = s.spatialunit_uid\nWHERE s.name_de LIKE 'A%'\nAND b.jahr = 2012;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 1994, 1987, 1991, 1982, 1992\nfalle : 69, 4, 11, 23, 9\nflache_in_m2 : 3900, 2900, 5200, 7900, 11200\nquadratmeterpreis_chf : 551, 275, 314, 250, 586\nspatialunit_uid : 2816_A.ADM3, 2805_A.ADM3, 2808_A.ADM3, 2815_A.ADM3, 2803_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Zeigen Sie mir den Preis f\u00fcr Wohnbauland in Basel-Landschaft, dessen Name mit A beginnt, im Jahr 2012.\n    ### SQL query:\n\n",
    "process_time": 18.197123118909076,
    "num_tokens": 1071,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 75,
    "question": "Wie viel kostete ein Quadratmeter Wohnbauland in den f\u00fcnf teuersten Gemeinden von Basel-Landschaft im Jahr 2005?",
    "query": "SELECT S.name AS gemeinde, T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2005\nORDER BY T.quadratmeterpreis_chf DESC\nLIMIT 5;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT quadratmeterpreis_chf\nFROM experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr\nWHERE jahr = 2005\nAND spatialunit_uid IN (\n    SELECT spatialunit_uid\n    FROM experiment.spatial_unit\n    WHERE canton = true\n    ORDER BY quadratmeterpreis_chf DESC\n    LIMIT 5\n)",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 1994, 1987, 1991, 1982, 1992\nfalle : 69, 4, 11, 23, 9\nflache_in_m2 : 3900, 2900, 5200, 7900, 11200\nquadratmeterpreis_chf : 551, 275, 314, 250, 586\nspatialunit_uid : 2816_A.ADM3, 2805_A.ADM3, 2808_A.ADM3, 2815_A.ADM3, 2803_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viel kostete ein Quadratmeter Wohnbauland in den f\u00fcnf teuersten Gemeinden von Basel-Landschaft im Jahr 2005?\n    ### SQL query:\n\n",
    "process_time": 7.071719393832609,
    "num_tokens": 1072,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 76,
    "question": "Wie viel Wohnbauland wurde zwischen 2010 und 2012 in Pratteln, BL, gekauft?",
    "query": "SELECT SUM(T.flache_in_m2) as gesamt_flache_in_m2\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Pratteln', 'Pratteln (BL)')\n    AND T.jahr >= 2010\n    AND T.jahr <= 2012;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT SUM(flache_in_m2) AS total_land_bought\nFROM experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS b\nJOIN experiment.spatial_unit AS s ON b.spatialunit_uid = s.spatialunit_uid\nWHERE s.name = 'Pratteln' AND s.canton = true AND b.jahr BETWEEN 2010 AND 2012",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 1994, 1987, 1991, 1982, 1992\nfalle : 69, 4, 11, 23, 9\nflache_in_m2 : 3900, 2900, 5200, 7900, 11200\nquadratmeterpreis_chf : 551, 275, 314, 250, 586\nspatialunit_uid : 2816_A.ADM3, 2805_A.ADM3, 2808_A.ADM3, 2815_A.ADM3, 2803_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viel Wohnbauland wurde zwischen 2010 und 2012 in Pratteln, BL, gekauft?\n    ### SQL query:\n\n",
    "process_time": 7.517314702970907,
    "num_tokens": 1065,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 77,
    "question": "Wie viele landwirtschaftliche Fahrzeuge gab es im Kanton Aargau im Jahr 2010?",
    "query": "SELECT anzahl_landwirtschaftliche_motorfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr = 2010;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT anzahl_landwirtschaftliche_motorfahrzeuge\nFROM experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten\nWHERE jahr = 2010",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 1982, 2018\nanzahl_personenwagen : 628, 147, 444, 3963, 669\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 4, 99, 9, 76, 100\nanzahl_nutzfahrzeuge : 275, 1617, 23, 36, 56\nanzahl_arbeitsmotorfahrzeuge : 4, 156, 11, 9, 14\nanzahl_motorrader : 171, 69, 4, 147, 23\nanzahl_klein_motorrader : 849, 41, 4, 11, 23\nanzahl_motorfahrrader : 23, 181, 36, 56, 191\nanzahl_landwirtschaftliche_motorfahrzeuge : 45, 41, 61, 11, 59\nanzahl_anhaenger : 147, 129, 4, 880, 23\nanzahl_kollektivfahrzeuge : 4, 61, 59, 11, 23\nanzahl_personenwagen_pro_1000_einwohner : 661.20000000000005, 510.39999999999998, 505.30000000000001, 418.80000000000001, 565.50000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viele landwirtschaftliche Fahrzeuge gab es im Kanton Aargau im Jahr 2010?\n    ### SQL query:\n\n",
    "process_time": 3.4778848520945758,
    "num_tokens": 1631,
    "hardness": "medium",
    "lang": "de"
  },
  {
    "i": 78,
    "question": "Wie hat sich der Bestand an Motorr\u00e4dern und Personenwagen im Kanton Aargau im Zeitraum zwischen 1930 und 1960 entwickelt?",
    "query": "SELECT T.jahr, anzahl_motorrader, anzahl_klein_motorrader, anzahl_motorfahrrader, anzahl_personenwagen\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr >= 1930\n    AND T.jahr <= 1960;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT jahr, anzahl_motorrader, anzahl_personenwagen\nFROM experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten AS a\nJOIN experiment.spatial_unit AS s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE s.name_de = 'Aargau' AND jahr BETWEEN 1930 AND 1960",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 1982, 2018\nanzahl_personenwagen : 628, 147, 444, 3963, 669\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 4, 99, 9, 76, 100\nanzahl_nutzfahrzeuge : 275, 1617, 23, 36, 56\nanzahl_arbeitsmotorfahrzeuge : 4, 156, 11, 9, 14\nanzahl_motorrader : 171, 69, 4, 147, 23\nanzahl_klein_motorrader : 849, 41, 4, 11, 23\nanzahl_motorfahrrader : 23, 181, 36, 56, 191\nanzahl_landwirtschaftliche_motorfahrzeuge : 45, 41, 61, 11, 59\nanzahl_anhaenger : 147, 129, 4, 880, 23\nanzahl_kollektivfahrzeuge : 4, 61, 59, 11, 23\nanzahl_personenwagen_pro_1000_einwohner : 661.20000000000005, 510.39999999999998, 505.30000000000001, 418.80000000000001, 565.50000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hat sich der Bestand an Motorr\u00e4dern und Personenwagen im Kanton Aargau im Zeitraum zwischen 1930 und 1960 entwickelt?\n    ### SQL query:\n\n",
    "process_time": 6.411587358918041,
    "num_tokens": 1644,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 79,
    "question": "Welche Gemeinde im Kanton Aargau hatte im Jahr 2020 am meisten Autos pro Einwohner?",
    "query": "SELECT S.name AS gemeinde\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.anzahl_personenwagen_pro_1000_einwohner DESC\nLIMIT 1;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT s.name AS gemeinde, a.anzahl_personenwagen_pro_1000_einwohner AS autos_pro_einwohner\nFROM experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten AS a\nJOIN experiment.spatial_unit AS s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE s.canton = true AND s.name_de = 'Aargau' AND a.jahr = 2020\nORDER BY autos_pro_einwohner DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 1982, 2018\nanzahl_personenwagen : 628, 147, 444, 3963, 669\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 4, 99, 9, 76, 100\nanzahl_nutzfahrzeuge : 275, 1617, 23, 36, 56\nanzahl_arbeitsmotorfahrzeuge : 4, 156, 11, 9, 14\nanzahl_motorrader : 171, 69, 4, 147, 23\nanzahl_klein_motorrader : 849, 41, 4, 11, 23\nanzahl_motorfahrrader : 23, 181, 36, 56, 191\nanzahl_landwirtschaftliche_motorfahrzeuge : 45, 41, 61, 11, 59\nanzahl_anhaenger : 147, 129, 4, 880, 23\nanzahl_kollektivfahrzeuge : 4, 61, 59, 11, 23\nanzahl_personenwagen_pro_1000_einwohner : 661.20000000000005, 510.39999999999998, 505.30000000000001, 418.80000000000001, 565.50000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche Gemeinde im Kanton Aargau hatte im Jahr 2020 am meisten Autos pro Einwohner?\n    ### SQL query:\n\n",
    "process_time": 18.447255654027686,
    "num_tokens": 1633,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 80,
    "question": "Wie hoch war die Zahl der Nutzfahrzeuge 1960 und 1980 im Kanton Aargau?",
    "query": "SELECT T.jahr, anzahl_nutzfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr IN (1960, 1980);\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT anzahl_nutzfahrzeuge\nFROM experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten AS a\nJOIN experiment.spatial_unit AS s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE s.name = 'Aargau' AND (a.jahr = 1960 OR a.jahr = 1980)",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 1982, 2018\nanzahl_personenwagen : 628, 147, 444, 3963, 669\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 4, 99, 9, 76, 100\nanzahl_nutzfahrzeuge : 275, 1617, 23, 36, 56\nanzahl_arbeitsmotorfahrzeuge : 4, 156, 11, 9, 14\nanzahl_motorrader : 171, 69, 4, 147, 23\nanzahl_klein_motorrader : 849, 41, 4, 11, 23\nanzahl_motorfahrrader : 23, 181, 36, 56, 191\nanzahl_landwirtschaftliche_motorfahrzeuge : 45, 41, 61, 11, 59\nanzahl_anhaenger : 147, 129, 4, 880, 23\nanzahl_kollektivfahrzeuge : 4, 61, 59, 11, 23\nanzahl_personenwagen_pro_1000_einwohner : 661.20000000000005, 510.39999999999998, 505.30000000000001, 418.80000000000001, 565.50000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war die Zahl der Nutzfahrzeuge 1960 und 1980 im Kanton Aargau?\n    ### SQL query:\n\n",
    "process_time": 6.253305525984615,
    "num_tokens": 1633,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 81,
    "question": "Wie hoch war die Zahl der Nutzfahrzeuge in Abtwil, AG im Jahr 2000 ?",
    "query": "SELECT T.anzahl_nutzfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Abtwil', 'Abtwil (AG)')\n    AND T.jahr = 2000;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT anzahl_nutzfahrzeuge\nFROM experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten AS a\nJOIN experiment.spatial_unit AS s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE s.name = 'Abtwil' AND s.name_de = 'Abtwil' AND s.name_fr = 'Abtwil' AND s.name_it = 'Abtwil'\nAND a.jahr = 2000",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 1982, 2018\nanzahl_personenwagen : 628, 147, 444, 3963, 669\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 4, 99, 9, 76, 100\nanzahl_nutzfahrzeuge : 275, 1617, 23, 36, 56\nanzahl_arbeitsmotorfahrzeuge : 4, 156, 11, 9, 14\nanzahl_motorrader : 171, 69, 4, 147, 23\nanzahl_klein_motorrader : 849, 41, 4, 11, 23\nanzahl_motorfahrrader : 23, 181, 36, 56, 191\nanzahl_landwirtschaftliche_motorfahrzeuge : 45, 41, 61, 11, 59\nanzahl_anhaenger : 147, 129, 4, 880, 23\nanzahl_kollektivfahrzeuge : 4, 61, 59, 11, 23\nanzahl_personenwagen_pro_1000_einwohner : 661.20000000000005, 510.39999999999998, 505.30000000000001, 418.80000000000001, 565.50000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war die Zahl der Nutzfahrzeuge in Abtwil, AG im Jahr 2000 ?\n    ### SQL query:\n\n",
    "process_time": 17.73749718302861,
    "num_tokens": 1631,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 82,
    "question": "Wie viele Kollektivfahrzeuge gab es 2022 in Wettingen, AG?",
    "query": "SELECT T.anzahl_kollektivfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Wettingen', 'Wettingen (AG)')\n    AND T.jahr = 2022;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT anzahl_kollektivfahrzeuge\nFROM experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten AS a\nJOIN experiment.spatial_unit AS s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE s.name = 'Wettingen' AND s.spatialunit_ontology = 'A.ADM3' AND s.valid_from <= '2022-01-01' AND s.valid_until >= '2022-12-31' AND a.jahr = 2022",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 1982, 2018\nanzahl_personenwagen : 628, 147, 444, 3963, 669\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 4, 99, 9, 76, 100\nanzahl_nutzfahrzeuge : 275, 1617, 23, 36, 56\nanzahl_arbeitsmotorfahrzeuge : 4, 156, 11, 9, 14\nanzahl_motorrader : 171, 69, 4, 147, 23\nanzahl_klein_motorrader : 849, 41, 4, 11, 23\nanzahl_motorfahrrader : 23, 181, 36, 56, 191\nanzahl_landwirtschaftliche_motorfahrzeuge : 45, 41, 61, 11, 59\nanzahl_anhaenger : 147, 129, 4, 880, 23\nanzahl_kollektivfahrzeuge : 4, 61, 59, 11, 23\nanzahl_personenwagen_pro_1000_einwohner : 661.20000000000005, 510.39999999999998, 505.30000000000001, 418.80000000000001, 565.50000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viele Kollektivfahrzeuge gab es 2022 in Wettingen, AG?\n    ### SQL query:\n\n",
    "process_time": 8.636025615036488,
    "num_tokens": 1630,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 83,
    "question": "Wie viel Fl\u00e4che wurde im Jahr 2017 im Aargau f\u00fcr den Rotweinanbau genutzt?",
    "query": "SELECT T.flache_rebland_rote_europaische_reben_ha, T.flache_rebland_kreuzung_rote_weisse_ha\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2017;\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT SUM(flache_rebland_rote_europaische_reben_ha) \nFROM experiment.aargau_obst_rebbau_rebland_wein_ernte \nWHERE jahr = 2017",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1972\nflache_rebland_rote_europaische_reben_ha : 171, 250, 164, 192, 256\nflache_rebland_kreuzung_rote_weisse_ha : 4, 23, 9, 19, 14\nflache_rebland_weisse_reben_ha : 99, 106, 127, 151, 126\nflache_total_ha : 301, 401, 386, 277, 387\nweinernte_total_hl : 16050, 10545, 20820, 20166, 22600\nweinernte_rot_europaische_hl : 5000, 11000, 1950, 16139, 13499\nweinernte_rot_kreuzung_rot_hl : 1000, 400, 250, 220, 101\nweinernte_europaische_weiss_hl : 7390, 6570, 6644, 2130, 11950\nerntewert_rot_1000_chf : 6105, 9938, 5182, 8116, 3873\nerntewert_weiss_1000_chf : 5113, 2996, 4334, 2980, 4027\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viel Fl\u00e4che wurde im Jahr 2017 im Aargau f\u00fcr den Rotweinanbau genutzt?\n    ### SQL query:\n\n",
    "process_time": 7.830473724985495,
    "num_tokens": 1610,
    "hardness": "hard",
    "lang": "de"
  },
  {
    "i": 84,
    "question": "In welchem Jahr wurde im Aargau am meisten Wein geerntet?",
    "query": "SELECT T.jahr\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\nGROUP BY T.jahr\nORDER BY SUM(T.weinernte_total_hl) DESC\nLIMIT 1;\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT jahr\nFROM experiment.aargau_obst_rebbau_rebland_wein_ernte\nORDER BY weinernte_total_hl DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1972\nflache_rebland_rote_europaische_reben_ha : 171, 250, 164, 192, 256\nflache_rebland_kreuzung_rote_weisse_ha : 4, 23, 9, 19, 14\nflache_rebland_weisse_reben_ha : 99, 106, 127, 151, 126\nflache_total_ha : 301, 401, 386, 277, 387\nweinernte_total_hl : 16050, 10545, 20820, 20166, 22600\nweinernte_rot_europaische_hl : 5000, 11000, 1950, 16139, 13499\nweinernte_rot_kreuzung_rot_hl : 1000, 400, 250, 220, 101\nweinernte_europaische_weiss_hl : 7390, 6570, 6644, 2130, 11950\nerntewert_rot_1000_chf : 6105, 9938, 5182, 8116, 3873\nerntewert_weiss_1000_chf : 5113, 2996, 4334, 2980, 4027\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In welchem Jahr wurde im Aargau am meisten Wein geerntet?\n    ### SQL query:\n\n",
    "process_time": 8.315634617814794,
    "num_tokens": 1604,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 85,
    "question": "Um wie viel Franken hat sich der Gesamtwert der Weinernte im Aargau zwischen 1980 und 2016 ver\u00e4ndert?",
    "query": "SELECT (\n    SUM(CASE WHEN T.jahr = 2016 THEN T.erntewert_rot_1000_chf + T.erntewert_weiss_1000_chf ELSE 0 END) -\n    SUM(CASE WHEN T.jahr = 1980 THEN T.erntewert_rot_1000_chf + T.erntewert_weiss_1000_chf ELSE 0 END)\n) * 1000.0 AS wertanderung_1980_2016_chf\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr IN (1980, 2016);\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT SUM(erntewert_rot_1000_chf + erntewert_weiss_1000_chf) AS wertveraenderung\nFROM experiment.aargau_obst_rebbau_rebland_wein_ernte\nWHERE jahr >= 1980 AND jahr <= 2016",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1972\nflache_rebland_rote_europaische_reben_ha : 171, 250, 164, 192, 256\nflache_rebland_kreuzung_rote_weisse_ha : 4, 23, 9, 19, 14\nflache_rebland_weisse_reben_ha : 99, 106, 127, 151, 126\nflache_total_ha : 301, 401, 386, 277, 387\nweinernte_total_hl : 16050, 10545, 20820, 20166, 22600\nweinernte_rot_europaische_hl : 5000, 11000, 1950, 16139, 13499\nweinernte_rot_kreuzung_rot_hl : 1000, 400, 250, 220, 101\nweinernte_europaische_weiss_hl : 7390, 6570, 6644, 2130, 11950\nerntewert_rot_1000_chf : 6105, 9938, 5182, 8116, 3873\nerntewert_weiss_1000_chf : 5113, 2996, 4334, 2980, 4027\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Um wie viel Franken hat sich der Gesamtwert der Weinernte im Aargau zwischen 1980 und 2016 ver\u00e4ndert?\n    ### SQL query:\n\n",
    "process_time": 9.221263256156817,
    "num_tokens": 1617,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 86,
    "question": "Wie viele Quadratkilometer Rebfl\u00e4che gab es im Aargau im Jahr 2018?",
    "query": "SELECT CAST(T.flache_total_ha AS FLOAT) / 100 AS flache_total_km2\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2018;\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT SUM(flache_total_ha) / 100 AS \"Quadratkilometer Rebfl\u00e4che\"\nFROM experiment.aargau_obst_rebbau_rebland_wein_ernte\nWHERE jahr = 2018;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1972\nflache_rebland_rote_europaische_reben_ha : 171, 250, 164, 192, 256\nflache_rebland_kreuzung_rote_weisse_ha : 4, 23, 9, 19, 14\nflache_rebland_weisse_reben_ha : 99, 106, 127, 151, 126\nflache_total_ha : 301, 401, 386, 277, 387\nweinernte_total_hl : 16050, 10545, 20820, 20166, 22600\nweinernte_rot_europaische_hl : 5000, 11000, 1950, 16139, 13499\nweinernte_rot_kreuzung_rot_hl : 1000, 400, 250, 220, 101\nweinernte_europaische_weiss_hl : 7390, 6570, 6644, 2130, 11950\nerntewert_rot_1000_chf : 6105, 9938, 5182, 8116, 3873\nerntewert_weiss_1000_chf : 5113, 2996, 4334, 2980, 4027\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viele Quadratkilometer Rebfl\u00e4che gab es im Aargau im Jahr 2018?\n    ### SQL query:\n\n",
    "process_time": 9.126980473054573,
    "num_tokens": 1608,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 87,
    "question": "Wie viele Brandf\u00e4lle gab es im Jahr 2011 im Aargau?",
    "query": "SELECT T.total_anzahl_schadenfalle\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2011;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT total_anzahl_schadenfalle\nFROM experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen\nWHERE jahr = 2011",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 2018\ntotal_anzahl_schadenfalle : 1744, 1117, 1233, 1244, 1199\ntotal_schaden_1000_chf : 14250, 17557, 19779, 27496, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 104, 147, 160, 11, 37\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 815, 7276, 1042, 41, 2495\nelektrizitaet_anzahl_schadenfalle : 292, 203, 275, 279, 255\nelektrizitaet_schaden_1000_chf : 1781, 4359, 8174, 9628, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 45, 41, 23, 63, 24\nvorsatzliche_brandstift_schaden_1000_chf : 3005, 655, 758, 2435, 341\nfeuerungsanlagen_anzahl_schadenfalle : 45, 69, 41, 59, 23\nfeuerungsanlagen_schaden_1000_chf : 725, 792, 174, 700, 587\nexplosion_anzahl_schadenfalle : 45, 41, 69, 59, 23\nexplosion_schaden_1000_chf : 202, 702, 515, 492, 76\nuebrige_anzahl_schadenfalle : 269, 504, 475, 612, 421\nuebrige_schaden_1000_chf : 3151, 2251, 8100, 3191, 3232\nunbekannt_anzahl_schadenfalle : 41, 61, 63, 37, 26\nunbekannt_schaden_1000_chf : 3678, 10357, 3413, 17006, 3684\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viele Brandf\u00e4lle gab es im Jahr 2011 im Aargau?\n    ### SQL query:\n\n",
    "process_time": 3.502733204048127,
    "num_tokens": 1955,
    "hardness": "hard",
    "lang": "de"
  },
  {
    "i": 88,
    "question": "In welchem Jahr wurden im Aargau die meisten Brandstiftungen gemeldet?",
    "query": "SELECT T.jahr\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\nORDER BY T.vorsatzliche_brandstift_anzahl_schadenfalle DESC\nLIMIT 1;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT jahr\nFROM experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen\nORDER BY vorsatzliche_brandstift_anzahl_schadenfalle DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 2018\ntotal_anzahl_schadenfalle : 1744, 1117, 1233, 1244, 1199\ntotal_schaden_1000_chf : 14250, 17557, 19779, 27496, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 104, 147, 160, 11, 37\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 815, 7276, 1042, 41, 2495\nelektrizitaet_anzahl_schadenfalle : 292, 203, 275, 279, 255\nelektrizitaet_schaden_1000_chf : 1781, 4359, 8174, 9628, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 45, 41, 23, 63, 24\nvorsatzliche_brandstift_schaden_1000_chf : 3005, 655, 758, 2435, 341\nfeuerungsanlagen_anzahl_schadenfalle : 45, 69, 41, 59, 23\nfeuerungsanlagen_schaden_1000_chf : 725, 792, 174, 700, 587\nexplosion_anzahl_schadenfalle : 45, 41, 69, 59, 23\nexplosion_schaden_1000_chf : 202, 702, 515, 492, 76\nuebrige_anzahl_schadenfalle : 269, 504, 475, 612, 421\nuebrige_schaden_1000_chf : 3151, 2251, 8100, 3191, 3232\nunbekannt_anzahl_schadenfalle : 41, 61, 63, 37, 26\nunbekannt_schaden_1000_chf : 3678, 10357, 3413, 17006, 3684\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In welchem Jahr wurden im Aargau die meisten Brandstiftungen gemeldet?\n    ### SQL query:\n\n",
    "process_time": 11.690576469991356,
    "num_tokens": 1956,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 89,
    "question": "Welches waren die 3 h\u00e4ufigsten Ursachen f\u00fcr Brandf\u00e4lle im Aargau im Jahr 1985?",
    "query": "WITH T1 AS (\n    SELECT * FROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.canton = 'TRUE'\n        AND S.name LIKE '%Aargau%'\n        AND T.jahr = 1985\n)\nSELECT T2.source_name\nFROM (\n    SELECT T1.feuerzeug_rauchzeug_licht_anzahl_schadenfalle as source, 'feuerzeug_rauchzeug_licht_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.elektrizitaet_anzahl_schadenfalle as source, 'elektrizitaet_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.vorsatzliche_brandstift_anzahl_schadenfalle as source, 'vorsatzliche_brandstift_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.feuerungsanlagen_anzahl_schadenfalle as source, 'feuerungsanlagen_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.explosion_anzahl_schadenfalle as source, 'explosion_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.uebrige_anzahl_schadenfalle as source, 'uebrige_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.unbekannt_anzahl_schadenfalle as source, 'unbekannt_anzahl_schadenfalle' as source_name\n    FROM T1\n) AS T2\nORDER BY T2.source DESC\nLIMIT 3;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT \n    feuerzeug_rauchzeug_licht_anzahl_schadenfalle AS anzahl_schadenfalle,\n    'Feuerzeug/Rauchzeug/Licht' AS ursache\nFROM \n    experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen\nWHERE \n    jahr = 1985\nORDER BY \n    feuerzeug_rauchzeug_licht_anzahl_schadenfalle DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 2018\ntotal_anzahl_schadenfalle : 1744, 1117, 1233, 1244, 1199\ntotal_schaden_1000_chf : 14250, 17557, 19779, 27496, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 104, 147, 160, 11, 37\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 815, 7276, 1042, 41, 2495\nelektrizitaet_anzahl_schadenfalle : 292, 203, 275, 279, 255\nelektrizitaet_schaden_1000_chf : 1781, 4359, 8174, 9628, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 45, 41, 23, 63, 24\nvorsatzliche_brandstift_schaden_1000_chf : 3005, 655, 758, 2435, 341\nfeuerungsanlagen_anzahl_schadenfalle : 45, 69, 41, 59, 23\nfeuerungsanlagen_schaden_1000_chf : 725, 792, 174, 700, 587\nexplosion_anzahl_schadenfalle : 45, 41, 69, 59, 23\nexplosion_schaden_1000_chf : 202, 702, 515, 492, 76\nuebrige_anzahl_schadenfalle : 269, 504, 475, 612, 421\nuebrige_schaden_1000_chf : 3151, 2251, 8100, 3191, 3232\nunbekannt_anzahl_schadenfalle : 41, 61, 63, 37, 26\nunbekannt_schaden_1000_chf : 3678, 10357, 3413, 17006, 3684\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches waren die 3 h\u00e4ufigsten Ursachen f\u00fcr Brandf\u00e4lle im Aargau im Jahr 1985?\n    ### SQL query:\n\n",
    "process_time": 7.903091163840145,
    "num_tokens": 1963,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 90,
    "question": "Wie hoch waren die j\u00e4hrlichen Kosten in CHF f\u00fcr die durch Elektrizit\u00e4t und Explosionen verursachten Brandsch\u00e4den im Kanton Aargau in den Jahren 2001 bis 2007?",
    "query": "SELECT T.jahr, T.elektrizitaet_schaden_1000_chf * 1000 AS elektrizitaet_schaden_chf\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 2001\n    AND T.jahr <= 2007\nORDER BY T.jahr DESC;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT jahr, elektrizitaet_schaden_1000_chf + explosion_schaden_1000_chf AS kosten_chf\nFROM experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen AS b\nJOIN experiment.spatial_unit AS s ON b.spatialunit_uid = s.spatialunit_uid\nWHERE s.canton = true\nAND s.name = 'Aargau'\nAND jahr BETWEEN 2001 AND 2007",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 2018\ntotal_anzahl_schadenfalle : 1744, 1117, 1233, 1244, 1199\ntotal_schaden_1000_chf : 14250, 17557, 19779, 27496, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 104, 147, 160, 11, 37\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 815, 7276, 1042, 41, 2495\nelektrizitaet_anzahl_schadenfalle : 292, 203, 275, 279, 255\nelektrizitaet_schaden_1000_chf : 1781, 4359, 8174, 9628, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 45, 41, 23, 63, 24\nvorsatzliche_brandstift_schaden_1000_chf : 3005, 655, 758, 2435, 341\nfeuerungsanlagen_anzahl_schadenfalle : 45, 69, 41, 59, 23\nfeuerungsanlagen_schaden_1000_chf : 725, 792, 174, 700, 587\nexplosion_anzahl_schadenfalle : 45, 41, 69, 59, 23\nexplosion_schaden_1000_chf : 202, 702, 515, 492, 76\nuebrige_anzahl_schadenfalle : 269, 504, 475, 612, 421\nuebrige_schaden_1000_chf : 3151, 2251, 8100, 3191, 3232\nunbekannt_anzahl_schadenfalle : 41, 61, 63, 37, 26\nunbekannt_schaden_1000_chf : 3678, 10357, 3413, 17006, 3684\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch waren die j\u00e4hrlichen Kosten in CHF f\u00fcr die durch Elektrizit\u00e4t und Explosionen verursachten Brandsch\u00e4den im Kanton Aargau in den Jahren 2001 bis 2007?\n    ### SQL query:\n\n",
    "process_time": 7.8503685251343995,
    "num_tokens": 1983,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 91,
    "question": "Wie setzt sich die erneuerbare Energieproduktion im Kanton Thurgau seit 2018 j\u00e4hrlich zusammen?",
    "query": "SELECT\n    T.jahr,\n    SUM(biogasanlagen_abwasser_gwh),\n    SUM(biogasanlagen_industrie_gwh),\n    SUM(biogasanlagen_landwirtschaft_gwh),\n    SUM(biomasse_holz_gwh),\n    SUM(kehricht_gwh),\n    SUM(photovoltaik_gwh),\n    SUM(wasserkraft_gwh),\n    SUM(wind_gwh),\n    SUM(total_gwh)\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2018\nGROUP BY T.jahr;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT jahr, \n       SUM(wasserkraft_gwh) AS wasserkraft_gwh, \n       SUM(biomasse_holz_gwh) AS biomasse_holz_gwh, \n       SUM(biogasanlagen_landwirtschaft_gwh) AS biogasanlagen_landwirtschaft_gwh, \n       SUM(kehricht_gwh) AS kehricht_gwh, \n       SUM(biogasanlagen_industrie_gwh) AS biogasanlagen_industrie_gwh, \n       SUM(biogasanlagen_abwasser_gwh) AS biogasanlagen_abwasser_gwh, \n       SUM(photovoltaik_gwh) AS photovoltaik_gwh, \n       SUM(wind_gwh) AS wind_gwh, \n       SUM(total_gwh) AS total_gwh\nFROM experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde\nWHERE jahr >= 2018\nGROUP BY jahr\nORDER BY jahr ASC;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\neinwohner : 1250, 4729, 2094, 9198, 2883\nwasserkraft_gwh : 9.619999999999999218, 1.782999999999999918, 0.202000000000000013, 1.074000000000000066, 0.029000000000000001\nbiogasanlagen_landwirtschaft_gwh : 2.202999999999999847, 1.608999999999999986, 0.910000000000000031, 0.293999999999999984, 0.102999999999999994\nbiogasanlagen_abwasser_gwh : 1.5840000000000000746, 1.2190000000000000835, 1.2290000000000000924, 0.7630000000000000115, 0.0100000000000000002\nphotovoltaik_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 2.060000000000000053, 0.857999999999999985\ntotal_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 0.857999999999999985, 2.919999999999999929\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4671_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n   \n    ### Question: \n    Wie setzt sich die erneuerbare Energieproduktion im Kanton Thurgau seit 2018 j\u00e4hrlich zusammen?\n    ### SQL query:\n\n",
    "process_time": 16.87918036687188,
    "num_tokens": 1572,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 92,
    "question": "Wie viel Prozent der erneuerbaren Energie in Frauenfeld TG wurde im Jahr 2021 durch Solarenergie erzeugt?",
    "query": "SELECT\n    100 * photovoltaik_gwh/total_gwh AS photovoltaik_prozent_frauenfeld_2021\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\n    AND S.name IN ('Frauenfeld', 'Frauenfeld (TG)');\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT (photovoltaik_gwh / total_gwh) * 100 AS percentage\nFROM experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde\nWHERE spatialunit_uid = '4641_A.ADM3' AND jahr = 2021",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\neinwohner : 1250, 4729, 2094, 9198, 2883\nwasserkraft_gwh : 9.619999999999999218, 1.782999999999999918, 0.202000000000000013, 1.074000000000000066, 0.029000000000000001\nbiogasanlagen_landwirtschaft_gwh : 2.202999999999999847, 1.608999999999999986, 0.910000000000000031, 0.293999999999999984, 0.102999999999999994\nbiogasanlagen_abwasser_gwh : 1.5840000000000000746, 1.2190000000000000835, 1.2290000000000000924, 0.7630000000000000115, 0.0100000000000000002\nphotovoltaik_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 2.060000000000000053, 0.857999999999999985\ntotal_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 0.857999999999999985, 2.919999999999999929\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4671_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n   \n    ### Question: \n    Wie viel Prozent der erneuerbaren Energie in Frauenfeld TG wurde im Jahr 2021 durch Solarenergie erzeugt?\n    ### SQL query:\n\n",
    "process_time": 4.863472776021808,
    "num_tokens": 1573,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 93,
    "question": "Wie viele Gemeinden im Kanton Thurgau produzierten im Jahr 2019 Energie aus Wind?",
    "query": "SELECT\n    COUNT(*) AS anzahl_gemeinden_wind_2019\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\n    AND T.wind_gwh > 0;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde \nWHERE jahr = 2019 AND wind_gwh > 0;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\neinwohner : 1250, 4729, 2094, 9198, 2883\nwasserkraft_gwh : 9.619999999999999218, 1.782999999999999918, 0.202000000000000013, 1.074000000000000066, 0.029000000000000001\nbiogasanlagen_landwirtschaft_gwh : 2.202999999999999847, 1.608999999999999986, 0.910000000000000031, 0.293999999999999984, 0.102999999999999994\nbiogasanlagen_abwasser_gwh : 1.5840000000000000746, 1.2190000000000000835, 1.2290000000000000924, 0.7630000000000000115, 0.0100000000000000002\nphotovoltaik_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 2.060000000000000053, 0.857999999999999985\ntotal_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 0.857999999999999985, 2.919999999999999929\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4671_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n   \n    ### Question: \n    Wie viele Gemeinden im Kanton Thurgau produzierten im Jahr 2019 Energie aus Wind?\n    ### SQL query:\n\n",
    "process_time": 8.347496391972527,
    "num_tokens": 1567,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 94,
    "question": "Welche 3 Thurgauer Gemeinden weisen zwischen 2018 und 2021 den gr\u00f6ssten Zuwachs an erneuerbarer Energieproduktion auf? Geben Sie auch den prozentualen Anstieg an.",
    "query": "SELECT\n    S.name AS gemeinde,\n    (\n        100.0 * SUM( CASE WHEN T.jahr = 2021 THEN T.total_gwh ELSE 0 END) /\n        SUM( CASE WHEN T.jahr = 2018 THEN T.total_gwh ELSE 0 END\n    )) AS prozent_anstieg\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2018, 2021)\nGROUP BY S.name\nORDER BY prozent_anstieg DESC\nLIMIT 3;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT \n    t1.spatialunit_uid AS gemeinde_uid,\n    t1.total_gwh AS energieproduktion_2018,\n    t2.total_gwh AS energieproduktion_2021,\n    (t2.total_gwh - t1.total_gwh) AS zuwachs_gwh,\n    ((t2.total_gwh - t1.total_gwh) / t1.total_gwh) * 100 AS prozentualer_anstieg\nFROM \n    experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS t1\nJOIN \n    experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS t2 ON t1.spatialunit_uid = t2.spatialunit_uid\nWHERE \n    t1.jahr = 2018 AND t2.jahr = 2021\nORDER BY \n    zuwachs_gwh DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\neinwohner : 1250, 4729, 2094, 9198, 2883\nwasserkraft_gwh : 9.619999999999999218, 1.782999999999999918, 0.202000000000000013, 1.074000000000000066, 0.029000000000000001\nbiogasanlagen_landwirtschaft_gwh : 2.202999999999999847, 1.608999999999999986, 0.910000000000000031, 0.293999999999999984, 0.102999999999999994\nbiogasanlagen_abwasser_gwh : 1.5840000000000000746, 1.2190000000000000835, 1.2290000000000000924, 0.7630000000000000115, 0.0100000000000000002\nphotovoltaik_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 2.060000000000000053, 0.857999999999999985\ntotal_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 0.857999999999999985, 2.919999999999999929\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4671_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n   \n    ### Question: \n    Welche 3 Thurgauer Gemeinden weisen zwischen 2018 und 2021 den gr\u00f6ssten Zuwachs an erneuerbarer Energieproduktion auf? Geben Sie auch den prozentualen Anstieg an.\n    ### SQL query:\n\n",
    "process_time": 28.09620850207284,
    "num_tokens": 1596,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 95,
    "question": "Wie viel erneuerbare Energie hat der Kanton Thurgau im Zeitraum 2017-2021 insgesamt produziert?",
    "query": "SELECT SUM(T.total_gwh) AS total_gwh_2017_2021\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nWHERE T.jahr >= 2017\n    AND T.jahr <= 2021;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT SUM(total_gwh) AS total_renewable_energy\nFROM experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde\nWHERE jahr BETWEEN 2017 AND 2021",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\neinwohner : 1250, 4729, 2094, 9198, 2883\nwasserkraft_gwh : 9.619999999999999218, 1.782999999999999918, 0.202000000000000013, 1.074000000000000066, 0.029000000000000001\nbiogasanlagen_landwirtschaft_gwh : 2.202999999999999847, 1.608999999999999986, 0.910000000000000031, 0.293999999999999984, 0.102999999999999994\nbiogasanlagen_abwasser_gwh : 1.5840000000000000746, 1.2190000000000000835, 1.2290000000000000924, 0.7630000000000000115, 0.0100000000000000002\nphotovoltaik_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 2.060000000000000053, 0.857999999999999985\ntotal_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 0.857999999999999985, 2.919999999999999929\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4671_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n   \n    ### Question: \n    Wie viel erneuerbare Energie hat der Kanton Thurgau im Zeitraum 2017-2021 insgesamt produziert?\n    ### SQL query:\n\n",
    "process_time": 3.978077368810773,
    "num_tokens": 1576,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 96,
    "question": "Zeigen Sie mir die Produktion von Energie aus Sonne und Wind in Berg, TG im Jahr 2018.",
    "query": "SELECT T.photovoltaik_gwh, T.wind_gwh\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Berg', 'Berg (TG)')\n    AND T.jahr = 2018;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT photovoltaik_gwh, wind_gwh\nFROM experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde\nJOIN experiment.spatial_unit ON experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde.spatialunit_uid = experiment.spatial_unit.spatialunit_uid\nWHERE experiment.spatial_unit.name = 'Berg' AND experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde.jahr = 2018",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\neinwohner : 1250, 4729, 2094, 9198, 2883\nwasserkraft_gwh : 9.619999999999999218, 1.782999999999999918, 0.202000000000000013, 1.074000000000000066, 0.029000000000000001\nbiogasanlagen_landwirtschaft_gwh : 2.202999999999999847, 1.608999999999999986, 0.910000000000000031, 0.293999999999999984, 0.102999999999999994\nbiogasanlagen_abwasser_gwh : 1.5840000000000000746, 1.2190000000000000835, 1.2290000000000000924, 0.7630000000000000115, 0.0100000000000000002\nphotovoltaik_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 2.060000000000000053, 0.857999999999999985\ntotal_gwh : 0.947999999999999954, 0.750000000000000000, 0.737999999999999989, 0.857999999999999985, 2.919999999999999929\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4671_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n   \n    ### Question: \n    Zeigen Sie mir die Produktion von Energie aus Sonne und Wind in Berg, TG im Jahr 2018.\n    ### SQL query:\n\n",
    "process_time": 16.622057821135968,
    "num_tokens": 1569,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 97,
    "question": "In welchem Jahr erreichte die Zahl der Besch\u00e4ftigten im prim\u00e4ren Sektor im Thurgau ihren H\u00f6hepunkt?",
    "query": "SELECT T.jahr\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.sektor = 'Prim\u00e4r'\nGROUP BY T.jahr\nORDER BY SUM(T.beschaftigte_personen) DESC LIMIT 1;\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT jahr\nFROM experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden\nWHERE sektor = 'Prim\u00e4r'\nORDER BY beschaftigte_personen DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nbeschaftigte_personen : 202, 1054, 147, 129, 444\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4566_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n   \n    ### Question: \n    In welchem Jahr erreichte die Zahl der Besch\u00e4ftigten im prim\u00e4ren Sektor im Thurgau ihren H\u00f6hepunkt?\n    ### SQL query:\n\n",
    "process_time": 4.0630401039961725,
    "num_tokens": 954,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 98,
    "question": "Wie hoch ist die relative Ver\u00e4nderung der Besch\u00e4ftigten in den einzelnen Wirtschaftssektoren im Thurgau in Prozent zwischen 2011 und 2021?",
    "query": "SELECT\n    AGG.sektor,\n    (\n        100.0 *\n        (AGG.beschaftigte_personen_2021 - AGG.beschaftigte_personen_2011) /\n        AGG.beschaftigte_personen_2011\n    ) AS relative_veranderung_beschaftigte_personen\nFROM (\n    SELECT\n        T.sektor,\n        SUM(CASE WHEN T.jahr = 2021 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_2021,\n        SUM(CASE WHEN T.jahr = 2011 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_2011\n    FROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr IN (2011, 2021)\n    GROUP BY T.sektor\n) AS AGG;\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT \n    t1.sektor,\n    ((t2.beschaftigte_personen - t1.beschaftigte_personen) / t1.beschaftigte_personen) * 100 AS relative_veranderung_prozent\nFROM \n    experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden AS t1\nJOIN \n    experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden AS t2 ON t1.spatialunit_uid = t2.spatialunit_uid\nWHERE \n    t1.jahr = 2011 AND t2.jahr = 2021",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nbeschaftigte_personen : 202, 1054, 147, 129, 444\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4566_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n   \n    ### Question: \n    Wie hoch ist die relative Ver\u00e4nderung der Besch\u00e4ftigten in den einzelnen Wirtschaftssektoren im Thurgau in Prozent zwischen 2011 und 2021?\n    ### SQL query:\n\n",
    "process_time": 10.88669661199674,
    "num_tokens": 964,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 99,
    "question": "Wie viele Personen waren 2015 im prim\u00e4ren Sektor in Uttwil TG besch\u00e4ftigt?",
    "query": "SELECT T.beschaftigte_personen\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Uttwil', 'Uttwil (TG)')\n    AND T.jahr = 2015\n    AND T.sektor = 'Prim\u00e4r';\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT beschaftigte_personen\nFROM experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden\nWHERE jahr = 2015\nAND sektor = 'Prim\u00e4r'\nAND spatialunit_uid = '1234_A.ADM3'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nbeschaftigte_personen : 202, 1054, 147, 129, 444\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4566_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n   \n    ### Question: \n    Wie viele Personen waren 2015 im prim\u00e4ren Sektor in Uttwil TG besch\u00e4ftigt?\n    ### SQL query:\n\n",
    "process_time": 11.070895955199376,
    "num_tokens": 947,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 100,
    "question": "Wie viele Besch\u00e4ftigte aus dem ersten Sektor gab es in Arbon und Egnach, Thurgau, in den Jahren 2012 und 2019?",
    "query": "SELECT S.name AS gemeinde, T.jahr, SUM(T.beschaftigte_personen) AS beschaftigte_personen_sektor_1\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Arbon', 'Arbon (TG)', 'Egnach', 'Egnach (TG)')\n    AND T.jahr IN (2012, 2019)\n    AND T.sektor = 'Prim\u00e4r'\nGROUP BY T.jahr, S.name\nORDER BY S.name, T.jahr;\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT SUM(beschaftigte_personen) AS total_beschaeftigte\nFROM experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden AS tb\nJOIN experiment.spatial_unit AS su ON tb.spatialunit_uid = su.spatialunit_uid\nWHERE su.name IN ('Arbon', 'Egnach')\nAND tb.jahr IN (2012, 2019)\nAND tb.sektor = 'Prim\u00e4r'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nbeschaftigte_personen : 202, 1054, 147, 129, 444\nspatialunit_uid : 4641_A.ADM3, 4691_A.ADM3, 4616_A.ADM3, 4406_A.ADM3, 4566_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n   \n    ### Question: \n    Wie viele Besch\u00e4ftigte aus dem ersten Sektor gab es in Arbon und Egnach, Thurgau, in den Jahren 2012 und 2019?\n    ### SQL query:\n\n",
    "process_time": 8.092182704946026,
    "num_tokens": 962,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 101,
    "question": "Wie hoch war die monatliche Stickoxidkonzentration (in Teilen pro Milliarde) in der Stadt Z\u00fcrich im Jahr 2019?",
    "query": "SELECT T.monat, T.nox_ppb\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT nox_ppb\nFROM experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983\nWHERE jahr = 2019",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nco_mg_m3 : 1.12269230769230766, 1.00967741935483879, 1.73807692307692307, 0.56032258064516127, 1.16551724137931023\nno2_ug_m3 : 79.952258064516130, 39.145333333333333, 60.594000000000001, 42.564000000000000, 59.692333333333330\nno_ug_m3 : 42.6767741935483897, 106.9709677419354819, 54.2258064516129039, 83.6256666666666604, 45.1348275862068959\nnox_ppb : 40.7261290322580649, 39.8816129032258075, 130.0165517241379405, 274.7029032258064376, 205.9816129032257948\nso2_ug_m3 : 71.69740740740741103, 8.21700000000000053, 6.66366666666666685, 30.48034482758620811, 4.00354838709677452\no3_ug_m3 : 52.6003225806451624, 26.5241379310344847, 7.3399999999999999, 57.0313333333333290, 59.7490322580645170\njahr : 1994, 1996, 1987, 1991, 1992\nmonat : 4, 11, 1, 12, 8\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n   \n    ### Question: \n    Wie hoch war die monatliche Stickoxidkonzentration (in Teilen pro Milliarde) in der Stadt Z\u00fcrich im Jahr 2019?\n    ### SQL query:\n\n",
    "process_time": 5.986315242014825,
    "num_tokens": 1707,
    "hardness": "hard",
    "lang": "de"
  },
  {
    "i": 102,
    "question": "Wie hoch war die durchschnittliche Kohlenmonoxid-Konzentration in der Z\u00fcrcher Luft im Januar und im Juli, bezogen auf den Zeitraum 1990-2000?",
    "query": "SELECT\n    T.monat,\n    SUM(T.co_mg_m3) / COUNT(T.co_mg_m3) AS avg_co_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr >= 1990\n    AND T.jahr <= 2000\n    AND T.co_mg_m3 IS NOT NULL\n    AND T.monat IN (1, 7)\nGROUP BY T.monat;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT AVG(co_mg_m3) \nFROM experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 \nWHERE monat IN (1, 7) \nAND jahr BETWEEN 1990 AND 2000",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nco_mg_m3 : 1.12269230769230766, 1.00967741935483879, 1.73807692307692307, 0.56032258064516127, 1.16551724137931023\nno2_ug_m3 : 79.952258064516130, 39.145333333333333, 60.594000000000001, 42.564000000000000, 59.692333333333330\nno_ug_m3 : 42.6767741935483897, 106.9709677419354819, 54.2258064516129039, 83.6256666666666604, 45.1348275862068959\nnox_ppb : 40.7261290322580649, 39.8816129032258075, 130.0165517241379405, 274.7029032258064376, 205.9816129032257948\nso2_ug_m3 : 71.69740740740741103, 8.21700000000000053, 6.66366666666666685, 30.48034482758620811, 4.00354838709677452\no3_ug_m3 : 52.6003225806451624, 26.5241379310344847, 7.3399999999999999, 57.0313333333333290, 59.7490322580645170\njahr : 1994, 1996, 1987, 1991, 1992\nmonat : 4, 11, 1, 12, 8\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n   \n    ### Question: \n    Wie hoch war die durchschnittliche Kohlenmonoxid-Konzentration in der Z\u00fcrcher Luft im Januar und im Juli, bezogen auf den Zeitraum 1990-2000?\n    ### SQL query:\n\n",
    "process_time": 5.048453557072207,
    "num_tokens": 1716,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 103,
    "question": "Wie viel Ozon war im Jahr 2005 jeden Monat in der Luft der Stadt Z\u00fcrich?",
    "query": "SELECT T.monat, T.o3_ug_m3 AS o3_ug_m3_2005\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2005;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT o3_ug_m3, jahr, monat\nFROM experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983\nWHERE jahr = 2005",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nco_mg_m3 : 1.12269230769230766, 1.00967741935483879, 1.73807692307692307, 0.56032258064516127, 1.16551724137931023\nno2_ug_m3 : 79.952258064516130, 39.145333333333333, 60.594000000000001, 42.564000000000000, 59.692333333333330\nno_ug_m3 : 42.6767741935483897, 106.9709677419354819, 54.2258064516129039, 83.6256666666666604, 45.1348275862068959\nnox_ppb : 40.7261290322580649, 39.8816129032258075, 130.0165517241379405, 274.7029032258064376, 205.9816129032257948\nso2_ug_m3 : 71.69740740740741103, 8.21700000000000053, 6.66366666666666685, 30.48034482758620811, 4.00354838709677452\no3_ug_m3 : 52.6003225806451624, 26.5241379310344847, 7.3399999999999999, 57.0313333333333290, 59.7490322580645170\njahr : 1994, 1996, 1987, 1991, 1992\nmonat : 4, 11, 1, 12, 8\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n   \n    ### Question: \n    Wie viel Ozon war im Jahr 2005 jeden Monat in der Luft der Stadt Z\u00fcrich?\n    ### SQL query:\n\n",
    "process_time": 8.01082936883904,
    "num_tokens": 1695,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 104,
    "question": "Wann erreichte die Kohlenmonoxidkonzentration in der Luft in der Stadt Z\u00fcrich ihr Maximum? Geben Sie auch die Konzentration in mg/m3 an.",
    "query": "SELECT T.jahr, T.monat, T.co_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.co_mg_m3 IS NOT NULL\nORDER BY T.co_mg_m3 DESC\nLIMIT 1;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT MAX(co_mg_m3) AS maximum_kohlenmonoxidkonzentration, jahr\nFROM experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983\nWHERE co_mg_m3 IS NOT NULL\nGROUP BY jahr\nORDER BY maximum_kohlenmonoxidkonzentration DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nco_mg_m3 : 1.12269230769230766, 1.00967741935483879, 1.73807692307692307, 0.56032258064516127, 1.16551724137931023\nno2_ug_m3 : 79.952258064516130, 39.145333333333333, 60.594000000000001, 42.564000000000000, 59.692333333333330\nno_ug_m3 : 42.6767741935483897, 106.9709677419354819, 54.2258064516129039, 83.6256666666666604, 45.1348275862068959\nnox_ppb : 40.7261290322580649, 39.8816129032258075, 130.0165517241379405, 274.7029032258064376, 205.9816129032257948\nso2_ug_m3 : 71.69740740740741103, 8.21700000000000053, 6.66366666666666685, 30.48034482758620811, 4.00354838709677452\no3_ug_m3 : 52.6003225806451624, 26.5241379310344847, 7.3399999999999999, 57.0313333333333290, 59.7490322580645170\njahr : 1994, 1996, 1987, 1991, 1992\nmonat : 4, 11, 1, 12, 8\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n   \n    ### Question: \n    Wann erreichte die Kohlenmonoxidkonzentration in der Luft in der Stadt Z\u00fcrich ihr Maximum? Geben Sie auch die Konzentration in mg/m3 an.\n    ### SQL query:\n\n",
    "process_time": 15.483852779027075,
    "num_tokens": 1712,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 105,
    "question": "Zeigen Sie mir den Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich f\u00fcr jedes Jahr zwischen 2010 und 2020.",
    "query": "SELECT T.jahr, T.median_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020;\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT jahr, median_preis_chf_pro_m2\nFROM experiment.zurich_effektive_preise_wohnbauland\nJOIN experiment.spatial_unit ON zurich_effektive_preise_wohnbauland.spatialunit_uid = spatial_unit.spatialunit_uid\nWHERE spatial_unit.canton = true\nAND spatial_unit.name = 'Z\u00fcrich'\nAND jahr BETWEEN 2010 AND 2020",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1980\nfaelle : 1260, 437, 1307, 1905, 1199\ndurschnitt_preis_chf_pro_m2 : 171, 726, 174, 279, 1733\nquantil_25_preis_chf_pro_m2 : 677, 104, 607, 400, 420\nmedian_preis_chf_pro_m2 : 551, 190, 1353, 147, 930\nquantil_75_preis_chf_pro_m2 : 705, 301, 750, 725, 2048\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n   \n    ### Question: \n    Zeigen Sie mir den Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich f\u00fcr jedes Jahr zwischen 2010 und 2020.\n    ### SQL query:\n\n",
    "process_time": 16.74669466004707,
    "num_tokens": 1181,
    "hardness": "hard",
    "lang": "de"
  },
  {
    "i": 106,
    "question": "Wann hat der Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich seinen H\u00f6hepunkt erreicht?",
    "query": "SELECT T.jahr\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY T.median_preis_chf_pro_m2 DESC\nLIMIT 1;\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT jahr\nFROM experiment.zurich_effektive_preise_wohnbauland\nWHERE spatialunit_uid IN (\n    SELECT spatialunit_uid\n    FROM experiment.spatial_unit\n    WHERE canton = true\n    AND name = 'Z\u00fcrich'\n)\nORDER BY median_preis_chf_pro_m2 DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1980\nfaelle : 1260, 437, 1307, 1905, 1199\ndurschnitt_preis_chf_pro_m2 : 171, 726, 174, 279, 1733\nquantil_25_preis_chf_pro_m2 : 677, 104, 607, 400, 420\nmedian_preis_chf_pro_m2 : 551, 190, 1353, 147, 930\nquantil_75_preis_chf_pro_m2 : 705, 301, 750, 725, 2048\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n   \n    ### Question: \n    Wann hat der Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich seinen H\u00f6hepunkt erreicht?\n    ### SQL query:\n\n",
    "process_time": 6.335227155126631,
    "num_tokens": 1174,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 107,
    "question": "Wie viele Verk\u00e4ufe von Wohnbauland gab es im Kanton Z\u00fcrich in den Jahren 2015 und 2021?",
    "query": "SELECT T.jahr, T.faelle\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr IN (2015, 2021);\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.zurich_effektive_preise_wohnbauland AS z\nJOIN experiment.spatial_unit AS s ON z.spatialunit_uid = s.spatialunit_uid\nWHERE s.canton = true\nAND z.jahr IN (2015, 2021)",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1980\nfaelle : 1260, 437, 1307, 1905, 1199\ndurschnitt_preis_chf_pro_m2 : 171, 726, 174, 279, 1733\nquantil_25_preis_chf_pro_m2 : 677, 104, 607, 400, 420\nmedian_preis_chf_pro_m2 : 551, 190, 1353, 147, 930\nquantil_75_preis_chf_pro_m2 : 705, 301, 750, 725, 2048\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n   \n    ### Question: \n    Wie viele Verk\u00e4ufe von Wohnbauland gab es im Kanton Z\u00fcrich in den Jahren 2015 und 2021?\n    ### SQL query:\n\n",
    "process_time": 14.940651487093419,
    "num_tokens": 1179,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 108,
    "question": "In welchem Jahr ist der durchschnittliche Preis f\u00fcr Wohnbauland im Kanton Z\u00fcrich am st\u00e4rksten gestiegen (in CHF) im Vergleich zum Vorjahr?",
    "query": "SELECT T.jahr\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY T.durschnitt_preis_chf_pro_m2 - LAG(T.durschnitt_preis_chf_pro_m2) OVER (ORDER BY T.jahr) DESC\nLIMIT 1;\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT jahr\nFROM experiment.zurich_effektive_preise_wohnbauland\nWHERE durschnitt_preis_chf_pro_m2 > (SELECT durschnitt_preis_chf_pro_m2\n                                     FROM experiment.zurich_effektive_preise_wohnbauland\n                                     WHERE jahr = (SELECT MAX(jahr) FROM experiment.zurich_effektive_preise_wohnbauland)) \n      AND jahr <> (SELECT MAX(jahr) FROM experiment.zurich_effektive_preise_wohnbauland)\nORDER BY durschnitt_preis_chf_pro_m2 DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 45, 41, 4, 11, 23\njahr : 2011, 2012, 2019, 1982, 1980\nfaelle : 1260, 437, 1307, 1905, 1199\ndurschnitt_preis_chf_pro_m2 : 171, 726, 174, 279, 1733\nquantil_25_preis_chf_pro_m2 : 677, 104, 607, 400, 420\nmedian_preis_chf_pro_m2 : 551, 190, 1353, 147, 930\nquantil_75_preis_chf_pro_m2 : 705, 301, 750, 725, 2048\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n   \n    ### Question: \n    In welchem Jahr ist der durchschnittliche Preis f\u00fcr Wohnbauland im Kanton Z\u00fcrich am st\u00e4rksten gestiegen (in CHF) im Vergleich zum Vorjahr?\n    ### SQL query:\n\n",
    "process_time": 11.46452782000415,
    "num_tokens": 1192,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 109,
    "question": "Wie hoch war das durchschnittliche Reineinkommen in Matth\u00e4us, BS, 2015?",
    "query": "SELECT T.reineinkommen_mittelwert\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2015\n    AND S.name = 'Matth\u00e4us';\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT reineinkommen_mittelwert\nFROM experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS b\nJOIN experiment.spatial_unit AS s ON b.spatialunit_uid = s.spatialunit_uid\nWHERE s.name = 'Matth\u00e4us' AND s.canton = true AND b.jahr = 2015;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_veranlagungen : 628, 3955, 2464, 3344, 11451\nreineinkommen_mittelwert : 45664, 47475, 49543, 79683, 48791\nreineinkommen_median : 52400, 39951, 51264, 57654, 42300\nreineinkommen_gini_koeffizient : 0.49600000000000000, 0.43500000000000000, 0.38800000000000001, 0.34899999999999998, 0.51600000000000001\nsteuerbares_einkommen_mittelwert : 81740, 56594, 42073, 83204, 40805\nsteuerbares_einkommen_median : 33650, 44999, 43007, 19678, 27120\nertrag_einkommenssteuer_mittelwert : 6193, 7774, 5948, 7172, 7151\nertrag_einkommenssteuer_median : 5522, 4739, 5617, 6402, 5162\nreinvermogen_mittelwert : 291589, 982401, 52396, 139220, 66050\nreinvermogen_median : 16657, 22985, 15796, 33807, 25007\nreinvermogen_gini_koeffizient : 0.90100000000000002, 0.93300000000000005, 0.86499999999999999, 0.95299999999999996, 0.83399999999999996\nsteuerbares_vermogen_mittelwert : 287072, 146581, 549360, 32985, 185150\nertrag_vermogenssteuer_mittelwert : 6943, 1896, 535, 3197, 170\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war das durchschnittliche Reineinkommen in Matth\u00e4us, BS, 2015?\n    ### SQL query:\n\n",
    "process_time": 7.085446015931666,
    "num_tokens": 1853,
    "hardness": "medium",
    "lang": "de"
  },
  {
    "i": 110,
    "question": "In welchem Wohnquartier in Basel-Stadt war die Einkommensungleichheit im Jahr 2020 am gr\u00f6ssten?",
    "query": "SELECT S.name\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.reineinkommen_gini_koeffizient DESC\nLIMIT 1;\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT spatialunit_uid\nFROM experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln\nWHERE jahr = 2020\nORDER BY reineinkommen_gini_koeffizient DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_veranlagungen : 628, 3955, 2464, 3344, 11451\nreineinkommen_mittelwert : 45664, 47475, 49543, 79683, 48791\nreineinkommen_median : 52400, 39951, 51264, 57654, 42300\nreineinkommen_gini_koeffizient : 0.49600000000000000, 0.43500000000000000, 0.38800000000000001, 0.34899999999999998, 0.51600000000000001\nsteuerbares_einkommen_mittelwert : 81740, 56594, 42073, 83204, 40805\nsteuerbares_einkommen_median : 33650, 44999, 43007, 19678, 27120\nertrag_einkommenssteuer_mittelwert : 6193, 7774, 5948, 7172, 7151\nertrag_einkommenssteuer_median : 5522, 4739, 5617, 6402, 5162\nreinvermogen_mittelwert : 291589, 982401, 52396, 139220, 66050\nreinvermogen_median : 16657, 22985, 15796, 33807, 25007\nreinvermogen_gini_koeffizient : 0.90100000000000002, 0.93300000000000005, 0.86499999999999999, 0.95299999999999996, 0.83399999999999996\nsteuerbares_vermogen_mittelwert : 287072, 146581, 549360, 32985, 185150\nertrag_vermogenssteuer_mittelwert : 6943, 1896, 535, 3197, 170\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In welchem Wohnquartier in Basel-Stadt war die Einkommensungleichheit im Jahr 2020 am gr\u00f6ssten?\n    ### SQL query:\n\n",
    "process_time": 4.750882768072188,
    "num_tokens": 1860,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 111,
    "question": "Wie hoch war das durchschnittliche steuerbare Einkommen im Kanton Basel-Stadt im Jahr 2014?",
    "query": "SELECT (SUM(T.anzahl_veranlagungen * T.steuerbares_einkommen_mittelwert)) / SUM(T.anzahl_veranlagungen) AS steuerbares_einkommen_mittelwert_basel_stadt_2014\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2014;\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT steuerbares_einkommen_mittelwert\nFROM experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln\nWHERE jahr = 2014",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_veranlagungen : 628, 3955, 2464, 3344, 11451\nreineinkommen_mittelwert : 45664, 47475, 49543, 79683, 48791\nreineinkommen_median : 52400, 39951, 51264, 57654, 42300\nreineinkommen_gini_koeffizient : 0.49600000000000000, 0.43500000000000000, 0.38800000000000001, 0.34899999999999998, 0.51600000000000001\nsteuerbares_einkommen_mittelwert : 81740, 56594, 42073, 83204, 40805\nsteuerbares_einkommen_median : 33650, 44999, 43007, 19678, 27120\nertrag_einkommenssteuer_mittelwert : 6193, 7774, 5948, 7172, 7151\nertrag_einkommenssteuer_median : 5522, 4739, 5617, 6402, 5162\nreinvermogen_mittelwert : 291589, 982401, 52396, 139220, 66050\nreinvermogen_median : 16657, 22985, 15796, 33807, 25007\nreinvermogen_gini_koeffizient : 0.90100000000000002, 0.93300000000000005, 0.86499999999999999, 0.95299999999999996, 0.83399999999999996\nsteuerbares_vermogen_mittelwert : 287072, 146581, 549360, 32985, 185150\nertrag_vermogenssteuer_mittelwert : 6943, 1896, 535, 3197, 170\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war das durchschnittliche steuerbare Einkommen im Kanton Basel-Stadt im Jahr 2014?\n    ### SQL query:\n\n",
    "process_time": 3.970947406021878,
    "num_tokens": 1856,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 112,
    "question": "Wie stark hat sich das durchschnittliche steuerpflichtige Verm\u00f6gen in Clara (BS) zwischen 1995 und 2015 ver\u00e4ndert? Geben Sie den relativen Unterschied in Prozent an.",
    "query": "SELECT\n    (\n        100.0 * SUM(CASE WHEN T.jahr = 2015 THEN T.steuerbares_vermogen_mittelwert ELSE - T.steuerbares_vermogen_mittelwert END) /\n        SUM(T.steuerbares_vermogen_mittelwert)\n     ) AS steuerbares_vermogen_mittelwert_prozent_aenderung_1995_2015\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Clara'\n    AND T.jahr IN (1995, 2015);\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT \n    (e2.steuerbares_vermogen_mittelwert - e1.steuerbares_vermogen_mittelwert) / e1.steuerbares_vermogen_mittelwert * 100 AS relative_difference\nFROM \n    experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS e1\nJOIN \n    experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS e2 ON e1.spatialunit_uid = e2.spatialunit_uid\nJOIN \n    experiment.spatial_unit AS s ON e1.spatialunit_uid = s.spatialunit_uid\nWHERE \n    s.name = 'Clara (BS)' AND e1.jahr = 1995 AND e2.jahr = 2015",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_veranlagungen : 628, 3955, 2464, 3344, 11451\nreineinkommen_mittelwert : 45664, 47475, 49543, 79683, 48791\nreineinkommen_median : 52400, 39951, 51264, 57654, 42300\nreineinkommen_gini_koeffizient : 0.49600000000000000, 0.43500000000000000, 0.38800000000000001, 0.34899999999999998, 0.51600000000000001\nsteuerbares_einkommen_mittelwert : 81740, 56594, 42073, 83204, 40805\nsteuerbares_einkommen_median : 33650, 44999, 43007, 19678, 27120\nertrag_einkommenssteuer_mittelwert : 6193, 7774, 5948, 7172, 7151\nertrag_einkommenssteuer_median : 5522, 4739, 5617, 6402, 5162\nreinvermogen_mittelwert : 291589, 982401, 52396, 139220, 66050\nreinvermogen_median : 16657, 22985, 15796, 33807, 25007\nreinvermogen_gini_koeffizient : 0.90100000000000002, 0.93300000000000005, 0.86499999999999999, 0.95299999999999996, 0.83399999999999996\nsteuerbares_vermogen_mittelwert : 287072, 146581, 549360, 32985, 185150\nertrag_vermogenssteuer_mittelwert : 6943, 1896, 535, 3197, 170\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie stark hat sich das durchschnittliche steuerpflichtige Verm\u00f6gen in Clara (BS) zwischen 1995 und 2015 ver\u00e4ndert? Geben Sie den relativen Unterschied in Prozent an.\n    ### SQL query:\n\n",
    "process_time": 13.821612406056374,
    "num_tokens": 1876,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 113,
    "question": "Wie hat sich die Wohnfl\u00e4che pro Einwohner in der Altstadt Grossbasel \u00fcber den Zeitraum 2015 - 2019 entwickelt?",
    "query": "SELECT T.jahr, T.wohnflache_pro_person_m2\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Altstadt Grossbasel'\n    AND T.jahr >= 2015\n    AND T.jahr <= 2019\nORDER BY T.jahr ASC;\n",
    "db_id": "basel_stadt_kennzahlen_zu_den_basler_wohnvierteln",
    "generated_query": "SELECT jahr, wohnflache_pro_person_m2\nFROM experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS w\nJOIN experiment.spatial_unit AS s ON w.spatialunit_uid = s.spatialunit_uid\nWHERE s.name_de = 'Altstadt Grossbasel' AND jahr BETWEEN 2015 AND 2019",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanteil_sozialhilfeempfanger NUMERIC, \n\tanteil_auslander NUMERIC, \n\tanteil_personen_ohne_religionszugehorigkeit NUMERIC, \n\tanteil_personen_in_einpersonenhaushalten NUMERIC, \n\tgymnasialquote_anteil_progymnasium NUMERIC, \n\taltersquotient_uber_64_jahr NUMERIC, \n\tanteil_sesshafte_10_jahr NUMERIC, \n\tjugendquotient_unter_20_jahr NUMERIC, \n\tbaujahr_der_wohngebaude NUMERIC, \n\tanteil_einfamilienhauser NUMERIC, \n\tanteil_grunflachen NUMERIC, \n\tflache_pro_wohnung_m2 NUMERIC, \n\twohnflache_pro_person_m2 NUMERIC, \n\tvermogenssteuer_pro_veranlagung NUMERIC, \n\teinkommenssteuer_pro_veranlagung NUMERIC, \n\terwerbstatigenquote NUMERIC, \n\tarbeitsplatze_pro_einwohner NUMERIC, \n\tarbeitslosenquote NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnv_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_kennzahlen_zu_den_basler_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanteil_sozialhilfeempfanger : 0.034955835400000003, 0.017414818799999999, 0.103472968100000007, 0.024250822799999999, 0.031635168399999997\nanteil_auslander : 0.23110865970000000, 0.36734570880000000, 0.43287212190000002, 0.52373417720000004, 0.50286048630000002\nanteil_personen_ohne_religionszugehorigkeit : 0.47899577430000001, 0.46552614110000001, 0.46202134340000001, 0.39128931900000002, 0.49168912850000002\nanteil_personen_in_einpersonenhaushalten : 0.14391819160000000, 0.18861558549999999, 0.21622826570000001, 0.28639149030000000, 0.24744082940000001\ngymnasialquote_anteil_progymnasium : 0.243200000000000000, 0.164062500000000000, 0.228571428599999987, 0.613900000000000001, 0.584615384599999954\naltersquotient_uber_64_jahr : 0.31009648049999999, 0.30637156269999999, 0.25224255470000001, 0.28330319469999998, 0.30522306859999998\nanteil_sesshafte_10_jahr : 0.31372549020000001, 0.43245559740000000, 0.27836490530000002, 0.42437948149999999, 0.42447418739999998\njugendquotient_unter_20_jahr : 0.31715771230000001, 0.15792575130000000, 0.25419058550000001, 0.25223413760000002, 0.13142523360000000\nbaujahr_der_wohngebaude : 1929.2055336000001, 1919.0706382999999, 1932.9380355999999, 1822.7614314000000, 1949.4723546234500\nanteil_einfamilienhauser : 0.134328358199999998, 0.069767441900000005, 0.071929824599999997, 0.077348066300000004, 0.697468354399999990\nanteil_grunflachen : 0.286999999999999977, 0.903448413300000031, 0.157000000000000001, 0.902011667699999964, 0.113490495400000002\nflache_pro_wohnung_m2 : 67.244349005000004, 68.852039000000005, 70.142190999999997, 82.343801381000006, 66.592351152000006\nwohnflache_pro_person_m2 : 40.865903756000002, 39.319586495000003, 33.392761000000000, 47.348309000000000, 37.648552000000002\nvermogenssteuer_pro_veranlagung : 1877.61476820000007, 318.34641689000000, 1944.57709120000004, 2060.93861199999992, 654.89999999999998\neinkommenssteuer_pro_veranlagung : 6827.6999999999998, 13428.8114480000004, 6313.3239063000001, 7509.6000000000004, 13499.9171640000004\nerwerbstatigenquote : 0.73882142539999995, 0.76275590000000004, 0.73685340619999995, 0.83744095709999999, 0.70189314520000001\narbeitsplatze_pro_einwohner : 0.31634281809999998, 0.57665478169999995, 0.15853759619999999, 0.31356404750000000, 0.57879080000000005\narbeitslosenquote : 0.029567489499999999, 0.025975172899999999, 0.046665948800000003, 0.046227770899999999, 0.065472489199999998\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanteil_sozialhilfeempfanger, None, 0.0384108454,0.0566399639,0.0616651708\nanteil_auslander, None, 0.3403313877,0.3193049757,0.3919011668\nanteil_personen_ohne_religionszugehorigkeit, None, 0.4882319714,0.4715107751,0.4412121852\nanteil_personen_in_einpersonenhaushalten, None, 0.3000205634,0.2883006761,0.2792870645\ngymnasialquote_anteil_progymnasium, None, 0.5740740741,0.2924528302,0.3366336634\naltersquotient_uber_64_jahr, None, 0.3601476015,0.3394025102,0.2155230596\nanteil_sesshafte_10_jahr, None, 0.3055921672,0.3543946745,0.3012512539\njugendquotient_unter_20_jahr, None, 0.2076752768,0.227328973,0.2048743907\nbaujahr_der_wohngebaude, None, 1918.3832335,1939.8939394,1931.8792135\nanteil_einfamilienhauser, None, 0.1984602224,0.1363636364,0.029494382\nanteil_grunflachen, None, 0.2390179539,0.3585967524,0.1742961539\nflache_pro_wohnung_m2, None, 82.343801381,69.810768933,70.418289354\nwohnflache_pro_person_m2, None, 47.311517,39.026379,38.692324\nvermogenssteuer_pro_veranlagung, None, 2378.931266,483.02681775,460.5646986\neinkommenssteuer_pro_veranlagung, None, 10820.800512,7123.8581681,7075.5415415\nerwerbstatigenquote, None, 0.8077279565,0.7324650618,0.7397509203\narbeitsplatze_pro_einwohner, None, 0.9906581653,0.1403727831,0.6350379648\narbeitslosenquote, None, 0.0252819637,0.0466659488,0.0400550591\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hat sich die Wohnfl\u00e4che pro Einwohner in der Altstadt Grossbasel \u00fcber den Zeitraum 2015 - 2019 entwickelt?\n    ### SQL query:\n\n",
    "process_time": 6.9465404690708965,
    "num_tokens": 2812,
    "hardness": "hard",
    "lang": "de"
  },
  {
    "i": 114,
    "question": "Wie heissen die 3 Wohngebiete in Basel-Stadt mit der kleinsten Wohnfl\u00e4che pro Einwohner im Jahr 2020?",
    "query": "SELECT S.name\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.wohnflache_pro_person_m2 ASC\nLIMIT 3;\n",
    "db_id": "basel_stadt_kennzahlen_zu_den_basler_wohnvierteln",
    "generated_query": "SELECT name\nFROM experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS w\nJOIN experiment.spatial_unit AS s ON w.spatialunit_uid = s.spatialunit_uid\nWHERE jahr = 2020\nORDER BY wohnflache_pro_person_m2\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanteil_sozialhilfeempfanger NUMERIC, \n\tanteil_auslander NUMERIC, \n\tanteil_personen_ohne_religionszugehorigkeit NUMERIC, \n\tanteil_personen_in_einpersonenhaushalten NUMERIC, \n\tgymnasialquote_anteil_progymnasium NUMERIC, \n\taltersquotient_uber_64_jahr NUMERIC, \n\tanteil_sesshafte_10_jahr NUMERIC, \n\tjugendquotient_unter_20_jahr NUMERIC, \n\tbaujahr_der_wohngebaude NUMERIC, \n\tanteil_einfamilienhauser NUMERIC, \n\tanteil_grunflachen NUMERIC, \n\tflache_pro_wohnung_m2 NUMERIC, \n\twohnflache_pro_person_m2 NUMERIC, \n\tvermogenssteuer_pro_veranlagung NUMERIC, \n\teinkommenssteuer_pro_veranlagung NUMERIC, \n\terwerbstatigenquote NUMERIC, \n\tarbeitsplatze_pro_einwohner NUMERIC, \n\tarbeitslosenquote NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnv_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_kennzahlen_zu_den_basler_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanteil_sozialhilfeempfanger : 0.034955835400000003, 0.017414818799999999, 0.103472968100000007, 0.024250822799999999, 0.031635168399999997\nanteil_auslander : 0.23110865970000000, 0.36734570880000000, 0.43287212190000002, 0.52373417720000004, 0.50286048630000002\nanteil_personen_ohne_religionszugehorigkeit : 0.47899577430000001, 0.46552614110000001, 0.46202134340000001, 0.39128931900000002, 0.49168912850000002\nanteil_personen_in_einpersonenhaushalten : 0.14391819160000000, 0.18861558549999999, 0.21622826570000001, 0.28639149030000000, 0.24744082940000001\ngymnasialquote_anteil_progymnasium : 0.243200000000000000, 0.164062500000000000, 0.228571428599999987, 0.613900000000000001, 0.584615384599999954\naltersquotient_uber_64_jahr : 0.31009648049999999, 0.30637156269999999, 0.25224255470000001, 0.28330319469999998, 0.30522306859999998\nanteil_sesshafte_10_jahr : 0.31372549020000001, 0.43245559740000000, 0.27836490530000002, 0.42437948149999999, 0.42447418739999998\njugendquotient_unter_20_jahr : 0.31715771230000001, 0.15792575130000000, 0.25419058550000001, 0.25223413760000002, 0.13142523360000000\nbaujahr_der_wohngebaude : 1929.2055336000001, 1919.0706382999999, 1932.9380355999999, 1822.7614314000000, 1949.4723546234500\nanteil_einfamilienhauser : 0.134328358199999998, 0.069767441900000005, 0.071929824599999997, 0.077348066300000004, 0.697468354399999990\nanteil_grunflachen : 0.286999999999999977, 0.903448413300000031, 0.157000000000000001, 0.902011667699999964, 0.113490495400000002\nflache_pro_wohnung_m2 : 67.244349005000004, 68.852039000000005, 70.142190999999997, 82.343801381000006, 66.592351152000006\nwohnflache_pro_person_m2 : 40.865903756000002, 39.319586495000003, 33.392761000000000, 47.348309000000000, 37.648552000000002\nvermogenssteuer_pro_veranlagung : 1877.61476820000007, 318.34641689000000, 1944.57709120000004, 2060.93861199999992, 654.89999999999998\neinkommenssteuer_pro_veranlagung : 6827.6999999999998, 13428.8114480000004, 6313.3239063000001, 7509.6000000000004, 13499.9171640000004\nerwerbstatigenquote : 0.73882142539999995, 0.76275590000000004, 0.73685340619999995, 0.83744095709999999, 0.70189314520000001\narbeitsplatze_pro_einwohner : 0.31634281809999998, 0.57665478169999995, 0.15853759619999999, 0.31356404750000000, 0.57879080000000005\narbeitslosenquote : 0.029567489499999999, 0.025975172899999999, 0.046665948800000003, 0.046227770899999999, 0.065472489199999998\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanteil_sozialhilfeempfanger, None, 0.0384108454,0.0566399639,0.0616651708\nanteil_auslander, None, 0.3403313877,0.3193049757,0.3919011668\nanteil_personen_ohne_religionszugehorigkeit, None, 0.4882319714,0.4715107751,0.4412121852\nanteil_personen_in_einpersonenhaushalten, None, 0.3000205634,0.2883006761,0.2792870645\ngymnasialquote_anteil_progymnasium, None, 0.5740740741,0.2924528302,0.3366336634\naltersquotient_uber_64_jahr, None, 0.3601476015,0.3394025102,0.2155230596\nanteil_sesshafte_10_jahr, None, 0.3055921672,0.3543946745,0.3012512539\njugendquotient_unter_20_jahr, None, 0.2076752768,0.227328973,0.2048743907\nbaujahr_der_wohngebaude, None, 1918.3832335,1939.8939394,1931.8792135\nanteil_einfamilienhauser, None, 0.1984602224,0.1363636364,0.029494382\nanteil_grunflachen, None, 0.2390179539,0.3585967524,0.1742961539\nflache_pro_wohnung_m2, None, 82.343801381,69.810768933,70.418289354\nwohnflache_pro_person_m2, None, 47.311517,39.026379,38.692324\nvermogenssteuer_pro_veranlagung, None, 2378.931266,483.02681775,460.5646986\neinkommenssteuer_pro_veranlagung, None, 10820.800512,7123.8581681,7075.5415415\nerwerbstatigenquote, None, 0.8077279565,0.7324650618,0.7397509203\narbeitsplatze_pro_einwohner, None, 0.9906581653,0.1403727831,0.6350379648\narbeitslosenquote, None, 0.0252819637,0.0466659488,0.0400550591\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie heissen die 3 Wohngebiete in Basel-Stadt mit der kleinsten Wohnfl\u00e4che pro Einwohner im Jahr 2020?\n    ### SQL query:\n\n",
    "process_time": 6.2455611419864,
    "num_tokens": 2810,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 115,
    "question": "Wie hoch ist die relative Ver\u00e4nderung (in %) des Ausl\u00e4nderanteils zwischen 2018 und 2023 in den einzelnen Wohnvierteln von Basel-Stadt?",
    "query": "SELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2023 THEN T.anteil_auslander ELSE - T.anteil_auslander END) /\n        SUM(CASE WHEN T.jahr = 2018 THEN T.anteil_auslander END)\n    ) AS prozent_aenderung_anteil_auslander_2018_2023\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2018, 2023)\nGROUP BY S.name ;\n",
    "db_id": "basel_stadt_kennzahlen_zu_den_basler_wohnvierteln",
    "generated_query": "SELECT \n    b.spatialunit_uid,\n    ((b.anteil_auslander - a.anteil_auslander) / a.anteil_auslander) * 100 AS relative_veranderung\nFROM \n    experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS a\nJOIN \n    experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS b ON a.spatialunit_uid = b.spatialunit_uid\nWHERE \n    a.jahr = 2018 AND b.jahr = 2023",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanteil_sozialhilfeempfanger NUMERIC, \n\tanteil_auslander NUMERIC, \n\tanteil_personen_ohne_religionszugehorigkeit NUMERIC, \n\tanteil_personen_in_einpersonenhaushalten NUMERIC, \n\tgymnasialquote_anteil_progymnasium NUMERIC, \n\taltersquotient_uber_64_jahr NUMERIC, \n\tanteil_sesshafte_10_jahr NUMERIC, \n\tjugendquotient_unter_20_jahr NUMERIC, \n\tbaujahr_der_wohngebaude NUMERIC, \n\tanteil_einfamilienhauser NUMERIC, \n\tanteil_grunflachen NUMERIC, \n\tflache_pro_wohnung_m2 NUMERIC, \n\twohnflache_pro_person_m2 NUMERIC, \n\tvermogenssteuer_pro_veranlagung NUMERIC, \n\teinkommenssteuer_pro_veranlagung NUMERIC, \n\terwerbstatigenquote NUMERIC, \n\tarbeitsplatze_pro_einwohner NUMERIC, \n\tarbeitslosenquote NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnv_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_kennzahlen_zu_den_basler_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanteil_sozialhilfeempfanger : 0.034955835400000003, 0.017414818799999999, 0.103472968100000007, 0.024250822799999999, 0.031635168399999997\nanteil_auslander : 0.23110865970000000, 0.36734570880000000, 0.43287212190000002, 0.52373417720000004, 0.50286048630000002\nanteil_personen_ohne_religionszugehorigkeit : 0.47899577430000001, 0.46552614110000001, 0.46202134340000001, 0.39128931900000002, 0.49168912850000002\nanteil_personen_in_einpersonenhaushalten : 0.14391819160000000, 0.18861558549999999, 0.21622826570000001, 0.28639149030000000, 0.24744082940000001\ngymnasialquote_anteil_progymnasium : 0.243200000000000000, 0.164062500000000000, 0.228571428599999987, 0.613900000000000001, 0.584615384599999954\naltersquotient_uber_64_jahr : 0.31009648049999999, 0.30637156269999999, 0.25224255470000001, 0.28330319469999998, 0.30522306859999998\nanteil_sesshafte_10_jahr : 0.31372549020000001, 0.43245559740000000, 0.27836490530000002, 0.42437948149999999, 0.42447418739999998\njugendquotient_unter_20_jahr : 0.31715771230000001, 0.15792575130000000, 0.25419058550000001, 0.25223413760000002, 0.13142523360000000\nbaujahr_der_wohngebaude : 1929.2055336000001, 1919.0706382999999, 1932.9380355999999, 1822.7614314000000, 1949.4723546234500\nanteil_einfamilienhauser : 0.134328358199999998, 0.069767441900000005, 0.071929824599999997, 0.077348066300000004, 0.697468354399999990\nanteil_grunflachen : 0.286999999999999977, 0.903448413300000031, 0.157000000000000001, 0.902011667699999964, 0.113490495400000002\nflache_pro_wohnung_m2 : 67.244349005000004, 68.852039000000005, 70.142190999999997, 82.343801381000006, 66.592351152000006\nwohnflache_pro_person_m2 : 40.865903756000002, 39.319586495000003, 33.392761000000000, 47.348309000000000, 37.648552000000002\nvermogenssteuer_pro_veranlagung : 1877.61476820000007, 318.34641689000000, 1944.57709120000004, 2060.93861199999992, 654.89999999999998\neinkommenssteuer_pro_veranlagung : 6827.6999999999998, 13428.8114480000004, 6313.3239063000001, 7509.6000000000004, 13499.9171640000004\nerwerbstatigenquote : 0.73882142539999995, 0.76275590000000004, 0.73685340619999995, 0.83744095709999999, 0.70189314520000001\narbeitsplatze_pro_einwohner : 0.31634281809999998, 0.57665478169999995, 0.15853759619999999, 0.31356404750000000, 0.57879080000000005\narbeitslosenquote : 0.029567489499999999, 0.025975172899999999, 0.046665948800000003, 0.046227770899999999, 0.065472489199999998\nspatialunit_uid : 1209_A.ADM4, 1220_A.ADM4, 1212_A.ADM4, 1215_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanteil_sozialhilfeempfanger, None, 0.0384108454,0.0566399639,0.0616651708\nanteil_auslander, None, 0.3403313877,0.3193049757,0.3919011668\nanteil_personen_ohne_religionszugehorigkeit, None, 0.4882319714,0.4715107751,0.4412121852\nanteil_personen_in_einpersonenhaushalten, None, 0.3000205634,0.2883006761,0.2792870645\ngymnasialquote_anteil_progymnasium, None, 0.5740740741,0.2924528302,0.3366336634\naltersquotient_uber_64_jahr, None, 0.3601476015,0.3394025102,0.2155230596\nanteil_sesshafte_10_jahr, None, 0.3055921672,0.3543946745,0.3012512539\njugendquotient_unter_20_jahr, None, 0.2076752768,0.227328973,0.2048743907\nbaujahr_der_wohngebaude, None, 1918.3832335,1939.8939394,1931.8792135\nanteil_einfamilienhauser, None, 0.1984602224,0.1363636364,0.029494382\nanteil_grunflachen, None, 0.2390179539,0.3585967524,0.1742961539\nflache_pro_wohnung_m2, None, 82.343801381,69.810768933,70.418289354\nwohnflache_pro_person_m2, None, 47.311517,39.026379,38.692324\nvermogenssteuer_pro_veranlagung, None, 2378.931266,483.02681775,460.5646986\neinkommenssteuer_pro_veranlagung, None, 10820.800512,7123.8581681,7075.5415415\nerwerbstatigenquote, None, 0.8077279565,0.7324650618,0.7397509203\narbeitsplatze_pro_einwohner, None, 0.9906581653,0.1403727831,0.6350379648\narbeitslosenquote, None, 0.0252819637,0.0466659488,0.0400550591\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch ist die relative Ver\u00e4nderung (in %) des Ausl\u00e4nderanteils zwischen 2018 und 2023 in den einzelnen Wohnvierteln von Basel-Stadt?\n    ### SQL query:\n\n",
    "process_time": 10.182936470024288,
    "num_tokens": 2817,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 116,
    "question": "Wie hiessen die 3 bev\u00f6lkerungsreichsten Gemeinden im Kanton Schwyz im Jahr 2015?",
    "query": "SELECT S.name\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2015\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) DESC\nLIMIT 3;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT s.name\nFROM experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS w\nJOIN experiment.spatial_unit AS s ON w.spatialunit_uid = s.spatialunit_uid\nWHERE s.canton = true\nAND w.jahr = 2015\nORDER BY w.anzahl_personen DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_personen : 1079, 1149, 957, 3467, 129\nspatialunit_uid : 1341_A.ADM3, 1343_A.ADM3, 1375_A.ADM3, 1311_A.ADM3, 1364_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hiessen die 3 bev\u00f6lkerungsreichsten Gemeinden im Kanton Schwyz im Jahr 2015?\n    ### SQL query:\n\n",
    "process_time": 6.09831708483398,
    "num_tokens": 968,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 117,
    "question": "Wie hoch war der Anteil der M\u00e4nner an der schweizerischen und ausl\u00e4ndischen Wohnbev\u00f6lkerung im Kanton Schwyz in den Jahren 2015 bis 2020?",
    "query": "SELECT\n    T.jahr,\n    (\n        SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' AND T.nationalitaet = 'Schweiz' THEN T.anzahl_personen END) /\n        SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen END)\n    ) AS anteil_manner_schweizer,\n    (\n        SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' AND T.nationalitaet = 'Ausland' THEN T.anzahl_personen END) /\n        SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen END)\n    ) AS anteil_manner_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2015\n    AND T.jahr >= 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT \n    jahr,\n    geschlecht,\n    nationalitaet,\n    anzahl_personen\nFROM \n    experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS wohnbevolkerung\nJOIN \n    experiment.spatial_unit AS spatialunit ON wohnbevolkerung.spatialunit_uid = spatialunit.spatialunit_uid\nWHERE \n    spatialunit.canton = true\n    AND jahr BETWEEN 2015 AND 2020\n    AND nationalitaet IN ('Schweiz', 'Ausland')\n    AND geschlecht = 'm\u00e4nnlich'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_personen : 1079, 1149, 957, 3467, 129\nspatialunit_uid : 1341_A.ADM3, 1343_A.ADM3, 1375_A.ADM3, 1311_A.ADM3, 1364_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war der Anteil der M\u00e4nner an der schweizerischen und ausl\u00e4ndischen Wohnbev\u00f6lkerung im Kanton Schwyz in den Jahren 2015 bis 2020?\n    ### SQL query:\n\n",
    "process_time": 22.551509105833247,
    "num_tokens": 984,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 118,
    "question": "Wie viele Einwohner gab es in Freienbach (SZ) im Zeitraum 2010 - 2020 ?",
    "query": "SELECT T.jahr, SUM(T.anzahl_personen)\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Freienbach', 'Freienbach (SZ)')\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT SUM(anzahl_personen) AS einwohnerzahl\nFROM experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat\nJOIN experiment.spatial_unit ON schwyz_standige_wohnbevolkerung_geschlecht_nationalitat.spatialunit_uid = spatial_unit.spatialunit_uid\nWHERE spatial_unit.name = 'Freienbach (SZ)' AND jahr BETWEEN 2010 AND 2020",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_personen : 1079, 1149, 957, 3467, 129\nspatialunit_uid : 1341_A.ADM3, 1343_A.ADM3, 1375_A.ADM3, 1311_A.ADM3, 1364_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viele Einwohner gab es in Freienbach (SZ) im Zeitraum 2010 - 2020 ?\n    ### SQL query:\n\n",
    "process_time": 20.124870511936024,
    "num_tokens": 970,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 119,
    "question": "Zeigen Sie mir den Anteil der ausl\u00e4ndischen Bev\u00f6lkerung (als Verh\u00e4ltnis) im Kanton Schwyz in jedem Jahr zwischen 2010 und 2020.",
    "query": "SELECT\n    T.jahr,\n    (\n        SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) /\n        SUM(T.anzahl_personen)\n    ) AS anteil_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT jahr, \n       SUM(CASE WHEN nationalitaet = 'Ausland' THEN anzahl_personen ELSE 0 END) / \n       SUM(anzahl_personen) AS auslaendischer_bevolkerungsanteil\nFROM experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS s\nJOIN experiment.spatial_unit AS u ON s.spatialunit_uid = u.spatialunit_uid\nWHERE u.canton = true\n  AND u.name = 'Schwyz'\n  AND jahr BETWEEN 2010 AND 2020\nGROUP BY jahr;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_personen : 1079, 1149, 957, 3467, 129\nspatialunit_uid : 1341_A.ADM3, 1343_A.ADM3, 1375_A.ADM3, 1311_A.ADM3, 1364_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Zeigen Sie mir den Anteil der ausl\u00e4ndischen Bev\u00f6lkerung (als Verh\u00e4ltnis) im Kanton Schwyz in jedem Jahr zwischen 2010 und 2020.\n    ### SQL query:\n\n",
    "process_time": 9.870481645921245,
    "num_tokens": 985,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 120,
    "question": "Bei der Umwandlung durch Kernkraftwerke, welche Energietr\u00e4ger sind da mit welchen Mengen durchschnittlich im Spiel?",
    "query": "SELECT\n    energietraeger,\n    AVG(energiemenge_in_tera_joule) as durchschnittliche_umwandlung_kernkraft_in_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE LOWER(nutzungs_sektor) LIKE '%umwandlung%'\nAND LOWER(nutzungs_sektor) LIKE '%kernkraftwerk%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger\nORDER BY durchschnittliche_umwandlung_kernkraft_in_tj ASC;\n",
    "db_id": "energiebilanz_schweiz_in_tera_joule",
    "generated_query": "SELECT energietraeger, AVG(energiemenge_in_tera_joule) AS durchschnittliche_menge\nFROM energiebilanz_schweiz_in_tera_joule\nWHERE nutzungs_sektor = 'Energieumwandlung - Kernkraftwerke'\nGROUP BY energietraeger",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.energiebilanz_schweiz_in_tera_joule (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnutzungs_sektor TEXT, \n\tenergietraeger TEXT, \n\tenergiemenge_in_tera_joule NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_pkey PRIMARY KEY (uid), \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in energiebilanz_schweiz_in_tera_joule and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nnutzungs_sektor : Endverbrauch - Total, Endverbrauch - Dienstleistungen, Endverbrauch - Verkehr, Energieumwandlung - Raffinerien, Endverbrauch - Industrie\nenergietraeger : Holzenergie, Elektrizit\u00e4t, Gas, Kohle, Uebrige erneuerbare Energien\nenergiemenge_in_tera_joule : 7920, 489480, 48670, 960, 11370\n*/\n\n/*\nColumn name, Column discription, Example values\nenergietraeger, Energietr\u00e4ger, Elektrizit\u00e4t,Wasserkraft,Uebrige erneuerbare Energien,M\u00fcll und Industrieabf\u00e4lle\nnutzungs_sektor, Nutzungs Rubrik, Endverbrauch - Haushalte,Endverbrauch - Industrie,Import\nenergiemenge_in_tera_joule, Numeric value in Terajoule, NA,14820,4820\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Bei der Umwandlung durch Kernkraftwerke, welche Energietr\u00e4ger sind da mit welchen Mengen durchschnittlich im Spiel?\n    ### SQL query:\n\n",
    "process_time": 6.3876249780878425,
    "num_tokens": 1075,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 121,
    "question": "Welches war der am meisten exportierten Energietraeger 2020 in der Schweiz und wieviel wurde exportiert?",
    "query": "SELECT nutzungs_sektor, energietraeger, SUM(energiemenge_in_tera_joule) as tj_export_2020\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%export%'\nAND energiemenge_in_tera_joule IS NOT NULL\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY tj_export_2020 DESC;\n",
    "db_id": "energiebilanz_schweiz_in_tera_joule",
    "generated_query": "SELECT energietraeger, SUM(energiemenge_in_tera_joule) AS export_menge\nFROM experiment.energiebilanz_schweiz_in_tera_joule\nWHERE nutzungs_sektor = 'Export' AND jahr = 2020\nGROUP BY energietraeger\nORDER BY export_menge DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.energiebilanz_schweiz_in_tera_joule (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnutzungs_sektor TEXT, \n\tenergietraeger TEXT, \n\tenergiemenge_in_tera_joule NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_pkey PRIMARY KEY (uid), \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in energiebilanz_schweiz_in_tera_joule and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nnutzungs_sektor : Endverbrauch - Total, Endverbrauch - Dienstleistungen, Endverbrauch - Verkehr, Energieumwandlung - Raffinerien, Endverbrauch - Industrie\nenergietraeger : Holzenergie, Elektrizit\u00e4t, Gas, Kohle, Uebrige erneuerbare Energien\nenergiemenge_in_tera_joule : 7920, 489480, 48670, 960, 11370\n*/\n\n/*\nColumn name, Column discription, Example values\nenergietraeger, Energietr\u00e4ger, Elektrizit\u00e4t,Wasserkraft,Uebrige erneuerbare Energien,M\u00fcll und Industrieabf\u00e4lle\nnutzungs_sektor, Nutzungs Rubrik, Endverbrauch - Haushalte,Endverbrauch - Industrie,Import\nenergiemenge_in_tera_joule, Numeric value in Terajoule, NA,14820,4820\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches war der am meisten exportierten Energietraeger 2020 in der Schweiz und wieviel wurde exportiert?\n    ### SQL query:\n\n",
    "process_time": 23.070083408150822,
    "num_tokens": 1070,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 122,
    "question": "In 2020 auf welche Energietr\u00e4ger hat sich der Verbrauch von Haushalten gest\u00fctzt? Gib die Energietr\u00e4ger und Energiemengen an.",
    "query": "SELECT energietraeger, SUM(energiemenge_in_tera_joule) as energieverbrauch_in_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%verbrauch%haushalt%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY energieverbrauch_in_tj DESC;\n",
    "db_id": "energiebilanz_schweiz_in_tera_joule",
    "generated_query": "SELECT energietraeger, energiemenge_in_tera_joule\nFROM experiment.energiebilanz_schweiz_in_tera_joule\nWHERE nutzungs_sektor = 'Endverbrauch - Haushalte' AND jahr = 2020",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.energiebilanz_schweiz_in_tera_joule (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnutzungs_sektor TEXT, \n\tenergietraeger TEXT, \n\tenergiemenge_in_tera_joule NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_pkey PRIMARY KEY (uid), \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in energiebilanz_schweiz_in_tera_joule and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nnutzungs_sektor : Endverbrauch - Total, Endverbrauch - Dienstleistungen, Endverbrauch - Verkehr, Energieumwandlung - Raffinerien, Endverbrauch - Industrie\nenergietraeger : Holzenergie, Elektrizit\u00e4t, Gas, Kohle, Uebrige erneuerbare Energien\nenergiemenge_in_tera_joule : 7920, 489480, 48670, 960, 11370\n*/\n\n/*\nColumn name, Column discription, Example values\nenergietraeger, Energietr\u00e4ger, Elektrizit\u00e4t,Wasserkraft,Uebrige erneuerbare Energien,M\u00fcll und Industrieabf\u00e4lle\nnutzungs_sektor, Nutzungs Rubrik, Endverbrauch - Haushalte,Endverbrauch - Industrie,Import\nenergiemenge_in_tera_joule, Numeric value in Terajoule, NA,14820,4820\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In 2020 auf welche Energietr\u00e4ger hat sich der Verbrauch von Haushalten gest\u00fctzt? Gib die Energietr\u00e4ger und Energiemengen an.\n    ### SQL query:\n\n",
    "process_time": 5.6426393911242485,
    "num_tokens": 1084,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 123,
    "question": "Welche Rentenarten gibt es in der Schweiz und was sind die durchschnittliche Ausgaben daf\u00fcr pro Jahr?",
    "query": "SELECT rententyp,\n  (AVG(rentensumme_in_tausend_franken) * 1000) as durchschnittliche_ausgaben_pro_jahr_chf\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n  AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND geschlecht = 'Geschlecht - Total'\nGROUP BY rententyp\nORDER BY durchschnittliche_ausgaben_pro_jahr_chf DESC;\n",
    "db_id": "ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit",
    "generated_query": "SELECT rententyp, AVG(renten_mittelwert_in_franken) AS durchschnittliche_ausgaben\nFROM experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit\nWHERE wohnsitzstaat_kategorie = 'Schweiz'\nGROUP BY rententyp",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit (\n\tuid SERIAL NOT NULL, \n\trententyp TEXT, \n\twohnsitzstaat_kategorie TEXT, \n\tstaatsangehorigkeit_kategorie TEXT, \n\tgeschlecht TEXT, \n\tjahr INTEGER, \n\tspatialunit_uid VARCHAR, \n\tanzahl_renten NUMERIC, \n\trentensumme_in_tausend_franken NUMERIC, \n\trenten_mittelwert_in_franken NUMERIC, \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit_pkey PRIMARY KEY (uid), \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoe_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_renten : 2239821, 408075, 541342, 65924, 2363780\nrentensumme_in_tausend_franken : 1988962, 407414, 443785, 2018810, 2321011\nrenten_mittelwert_in_franken : 1402, 628, 1752, 1202, 1754\n*/\n\n/*\nColumn name, Column discription, Example values\nrententyp, Rentenart, Zusatzrente f\u00fcr Kinder (Mutter),Zusatzrente f\u00fcr Ehepartner,Altersrente\nwohnsitzstaat_kategorie, Wohnsitz Kategorie, Ausland,Schweiz,Wohnsitzstaat - Total\nstaatsangehorigkeit_kategorie, Staatsangeh\u00f6rigkeit Kategorie, Ausland,Schweiz,Staatsangeh\u00f6rigkeit - Total\ngeschlecht, Geschlecht, Frau,Mann,Geschlecht - Total\nanzahl_renten, Anzahl Renten, None\nrentensumme_in_tausend_franken, Rentensumme in Tausend CHF, None\nrenten_mittelwert_in_franken, Renten Mittelwert in CHF, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche Rentenarten gibt es in der Schweiz und was sind die durchschnittliche Ausgaben daf\u00fcr pro Jahr?\n    ### SQL query:\n\n",
    "process_time": 11.844098295085132,
    "num_tokens": 1198,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 124,
    "question": "Was waren die Gesamtausgaben f\u00fcr Renten 2022 in Franken, wie verteilten sie sich auf die Rentenarten, auf wieviele Renten jeweils und was kam dabei als durchschnittliche Rente heraus? Ordne das Ergebnis nach Anzahl der Renten.",
    "query": "SELECT rententyp,\n  anzahl_renten AS renten_anzahl_2022,\n  1000 * rentensumme_in_tausend_franken AS rentengesamt_ausgaben_in_CHF,\n  renten_mittelwert_in_franken AS durchschnittliche_rente_in_CHF\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE jahr = 2022\n  AND staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n  AND geschlecht = 'Geschlecht - Total'\n  AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\nORDER BY anzahl_renten DESC;\n",
    "db_id": "ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit",
    "generated_query": "SELECT rententyp, anzahl_renten, rentensumme_in_tausend_franken, renten_mittelwert_in_franken\nFROM experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit\nWHERE jahr = 2022\nORDER BY anzahl_renten DESC;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit (\n\tuid SERIAL NOT NULL, \n\trententyp TEXT, \n\twohnsitzstaat_kategorie TEXT, \n\tstaatsangehorigkeit_kategorie TEXT, \n\tgeschlecht TEXT, \n\tjahr INTEGER, \n\tspatialunit_uid VARCHAR, \n\tanzahl_renten NUMERIC, \n\trentensumme_in_tausend_franken NUMERIC, \n\trenten_mittelwert_in_franken NUMERIC, \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit_pkey PRIMARY KEY (uid), \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoe_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_renten : 2239821, 408075, 541342, 65924, 2363780\nrentensumme_in_tausend_franken : 1988962, 407414, 443785, 2018810, 2321011\nrenten_mittelwert_in_franken : 1402, 628, 1752, 1202, 1754\n*/\n\n/*\nColumn name, Column discription, Example values\nrententyp, Rentenart, Zusatzrente f\u00fcr Kinder (Mutter),Zusatzrente f\u00fcr Ehepartner,Altersrente\nwohnsitzstaat_kategorie, Wohnsitz Kategorie, Ausland,Schweiz,Wohnsitzstaat - Total\nstaatsangehorigkeit_kategorie, Staatsangeh\u00f6rigkeit Kategorie, Ausland,Schweiz,Staatsangeh\u00f6rigkeit - Total\ngeschlecht, Geschlecht, Frau,Mann,Geschlecht - Total\nanzahl_renten, Anzahl Renten, None\nrentensumme_in_tausend_franken, Rentensumme in Tausend CHF, None\nrenten_mittelwert_in_franken, Renten Mittelwert in CHF, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Was waren die Gesamtausgaben f\u00fcr Renten 2022 in Franken, wie verteilten sie sich auf die Rentenarten, auf wieviele Renten jeweils und was kam dabei als durchschnittliche Rente heraus? Ordne das Ergebnis nach Anzahl der Renten.\n    ### SQL query:\n\n",
    "process_time": 5.3673225801903754,
    "num_tokens": 1236,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 125,
    "question": "Wie hoch war der Frauenanteil in prozent bei den Zusatzrenten f\u00fcr Ehepartner?",
    "query": "SELECT\n  ROUND(100 * SUM(CASE WHEN geschlecht = 'Frau'\n       THEN anzahl_renten ELSE 0 END) /\n   SUM(CASE WHEN geschlecht = 'Geschlecht - Total'\n       THEN anzahl_renten ELSE 0 END)\n  , 2) AS prozent_frauenanteil_bei_ehepartner_zusatzrenten\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE rententyp = 'Zusatzrente f\u00fcr Ehepartner'\n  AND staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total';\n",
    "db_id": "ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit",
    "generated_query": "SELECT (COUNT(*) FILTER (WHERE geschlecht = 'Frau') / COUNT(*)) * 100 AS frauenanteil_prozent\nFROM experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit\nWHERE rententyp = 'Zusatzrente f\u00fcr Ehepartner'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit (\n\tuid SERIAL NOT NULL, \n\trententyp TEXT, \n\twohnsitzstaat_kategorie TEXT, \n\tstaatsangehorigkeit_kategorie TEXT, \n\tgeschlecht TEXT, \n\tjahr INTEGER, \n\tspatialunit_uid VARCHAR, \n\tanzahl_renten NUMERIC, \n\trentensumme_in_tausend_franken NUMERIC, \n\trenten_mittelwert_in_franken NUMERIC, \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit_pkey PRIMARY KEY (uid), \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoe_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nanzahl_renten : 2239821, 408075, 541342, 65924, 2363780\nrentensumme_in_tausend_franken : 1988962, 407414, 443785, 2018810, 2321011\nrenten_mittelwert_in_franken : 1402, 628, 1752, 1202, 1754\n*/\n\n/*\nColumn name, Column discription, Example values\nrententyp, Rentenart, Zusatzrente f\u00fcr Kinder (Mutter),Zusatzrente f\u00fcr Ehepartner,Altersrente\nwohnsitzstaat_kategorie, Wohnsitz Kategorie, Ausland,Schweiz,Wohnsitzstaat - Total\nstaatsangehorigkeit_kategorie, Staatsangeh\u00f6rigkeit Kategorie, Ausland,Schweiz,Staatsangeh\u00f6rigkeit - Total\ngeschlecht, Geschlecht, Frau,Mann,Geschlecht - Total\nanzahl_renten, Anzahl Renten, None\nrentensumme_in_tausend_franken, Rentensumme in Tausend CHF, None\nrenten_mittelwert_in_franken, Renten Mittelwert in CHF, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hoch war der Frauenanteil in prozent bei den Zusatzrenten f\u00fcr Ehepartner?\n    ### SQL query:\n\n",
    "process_time": 5.335820381063968,
    "num_tokens": 1194,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 126,
    "question": "Welches waren die Themen der Volksabstimmungen in 2022?",
    "query": "SELECT DISTINCT(T.thema)\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.jahr = '2022' AND anzahl_abstimmungsvorlagen != 0;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT thema\nFROM experiment.abstimmungsvorlagen_seit_1971\nWHERE jahr = 2022;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2022, 2012, 2019, 2021\nthema : Sicherheitspolitik, Wirtschaft, Verkehr und Infrastruktur, Energie, Bildung und Forschung\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches waren die Themen der Volksabstimmungen in 2022?\n    ### SQL query:\n\n",
    "process_time": 2.603062291862443,
    "num_tokens": 922,
    "hardness": "medium",
    "lang": "de"
  },
  {
    "i": 127,
    "question": "In welchem Jahren gab es die Volksabstimmungen zum Thema Energie in der Schweiz?",
    "query": "SELECT T.jahr\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.thema LIKE '%Energie%' AND anzahl_abstimmungsvorlagen != 0\nORDER BY jahr DESC;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT DISTINCT jahr\nFROM experiment.abstimmungsvorlagen_seit_1971\nWHERE thema = 'Energie'\nAND spatialunit_uid LIKE '%.CH'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2022, 2012, 2019, 2021\nthema : Sicherheitspolitik, Wirtschaft, Verkehr und Infrastruktur, Energie, Bildung und Forschung\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In welchem Jahren gab es die Volksabstimmungen zum Thema Energie in der Schweiz?\n    ### SQL query:\n\n",
    "process_time": 11.414359982125461,
    "num_tokens": 926,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 128,
    "question": "Welches Thema hatte die wenigsten Volksabstimmungen in den Jahren 1990 bis 2000?",
    "query": "SELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE' AND anzahl_abstimmungsvorlagen != 0\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema ASC\nLIMIT 1;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT thema\nFROM experiment.abstimmungsvorlagen_seit_1971\nWHERE jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY COUNT(*) ASC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2022, 2012, 2019, 2021\nthema : Sicherheitspolitik, Wirtschaft, Verkehr und Infrastruktur, Energie, Bildung und Forschung\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches Thema hatte die wenigsten Volksabstimmungen in den Jahren 1990 bis 2000?\n    ### SQL query:\n\n",
    "process_time": 3.7589664170518517,
    "num_tokens": 928,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 129,
    "question": "Wann gab es die letzte Volksabstimmungen zum Thema Forschung?",
    "query": "SELECT MAX(jahr) as jahr_letzte_abstimmung\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND anzahl_abstimmungsvorlagen != 0 AND T.thema LIKE '%Forschung%';\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT MAX(jahr) FROM experiment.abstimmungsvorlagen_seit_1971 WHERE thema = 'Forschung';",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2022, 2012, 2019, 2021\nthema : Sicherheitspolitik, Wirtschaft, Verkehr und Infrastruktur, Energie, Bildung und Forschung\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wann gab es die letzte Volksabstimmungen zum Thema Forschung?\n    ### SQL query:\n\n",
    "process_time": 2.936676612822339,
    "num_tokens": 923,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 130,
    "question": "Wieviele Abstimmungsvorlagen gab es im Jahr 2000?",
    "query": "SELECT COUNT(*) as anzahl_abstimmungsvorlagen_im_jahr_2000\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE' AND T.jahr = 2000;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.abstimmungsvorlagen_seit_1971 \nWHERE jahr = 2000;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2022, 2012, 2019, 2021\nthema : Sicherheitspolitik, Wirtschaft, Verkehr und Infrastruktur, Energie, Bildung und Forschung\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wieviele Abstimmungsvorlagen gab es im Jahr 2000?\n    ### SQL query:\n\n",
    "process_time": 6.1960138799622655,
    "num_tokens": 922,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 131,
    "question": "Wieviele Volksabstimmungen gab es vor dem Jahr 2000 zum Thema Energie?",
    "query": "SELECT SUM(anzahl_abstimmungsvorlagen) as anzahl_abstimmungen_energie\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND anzahl_abstimmungsvorlagen != 0 AND T.thema LIKE '%Energie%'\nAND jahr < 2000;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT COUNT(*) \nFROM experiment.abstimmungsvorlagen_seit_1971 \nWHERE jahr < 2000 AND thema = 'Energie';",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2022, 2012, 2019, 2021\nthema : Sicherheitspolitik, Wirtschaft, Verkehr und Infrastruktur, Energie, Bildung und Forschung\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wieviele Volksabstimmungen gab es vor dem Jahr 2000 zum Thema Energie?\n    ### SQL query:\n\n",
    "process_time": 2.8739183261059225,
    "num_tokens": 926,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 132,
    "question": "Wie hat sich das Verh\u00e0ltnis Stellen zu Vollzeit\u00e0quivalenten bei den Schweizer \u00c4rzten \u00fcber die Jahre ver\u00e4ndert?",
    "query": "SELECT T.jahr,\n  AVG(T.anzahl_beschaeftigte) / AVG(T.anzahl_vollzeitaquivalente) AS stellenanzahl_pro_vollzeit_aequivalent\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "arztpraxen_ambulante_zentren",
    "generated_query": "SELECT jahr, SUM(anzahl_beschaeftigte) AS stellen, SUM(anzahl_vollzeitaquivalente) AS vollzeitaquivalente\nFROM experiment.arztpraxen_ambulante_zentren\nGROUP BY jahr\nORDER BY jahr ASC",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.arztpraxen_ambulante_zentren (\n\tuid SERIAL NOT NULL, \n\trechtsform TEXT, \n\tgeschlecht TEXT, \n\taltersgruppe TEXT, \n\tjahr INTEGER, \n\tanzahl_beschaeftigte NUMERIC, \n\tanzahl_vollzeitaquivalente NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT arztpraxen_ambulante_zentren_pkey PRIMARY KEY (uid), \n\tCONSTRAINT arztpraxen_ambulante_zentren_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in arztpraxen_ambulante_zentren and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_beschaeftigte : 5848.8000000000001819, 13883.2199999999993452, 2718.5700000000001637, 5259.3699999999998909, 23368.2299999999995634\nanzahl_vollzeitaquivalente : 378.73000000000001819, 413.37000000000000455, 7857.47999999999956344, 2421.55999999999994543, 366.80000000000001137\n*/\n\n/*\nColumn name, Column discription, Example values\nrechtsform, Rechtsform der Praxis, Rechtsform - Total,Einzelunternehmen,Andere Rechtsform\ngeschlecht, Geschlecht, Geschlecht - Total,Mann,Frau\naltersgruppe, Altersklasse, Altersklasse - Total,Unter 45 Jahre,45-54 Jahre\nanzahl_beschaeftigte, Anzahl Besch\u00e4ftigte, None\nanzahl_vollzeitaquivalente, Anzahl Vollzeit\u00e4quivalente, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie hat sich das Verh\u00e0ltnis Stellen zu Vollzeit\u00e0quivalenten bei den Schweizer \u00c4rzten \u00fcber die Jahre ver\u00e4ndert?\n    ### SQL query:\n\n",
    "process_time": 11.265176996123046,
    "num_tokens": 1105,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 133,
    "question": "Welche Rechtsform hatte einen Zuwachs an \u00c4rzten zwischen 2017 und 2021 und wie gross war der Zuwachs?",
    "query": "SELECT T.rechtsform,\n  (SUM(CASE WHEN jahr = 2021 THEN T.anzahl_beschaeftigte ELSE 0 END) -\n   SUM(CASE WHEN jahr = 2017 THEN T.anzahl_beschaeftigte ELSE 0 END)) as zuwachs_aerzte_2017_bis_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\n  AND LOWER(T.rechtsform) NOT LIKE '%total%'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr IN (2017, 2021)\nGROUP BY T.rechtsform;\n",
    "db_id": "arztpraxen_ambulante_zentren",
    "generated_query": "SELECT \n    a.rechtsform,\n    COUNT(*) AS zuwachs\nFROM \n    experiment.arztpraxen_ambulante_zentren AS a\nJOIN \n    experiment.spatial_unit AS s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE \n    a.jahr >= 2017 AND a.jahr <= 2021\nGROUP BY \n    a.rechtsform\nHAVING \n    COUNT(*) > 0\nORDER BY \n    zuwachs DESC;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.arztpraxen_ambulante_zentren (\n\tuid SERIAL NOT NULL, \n\trechtsform TEXT, \n\tgeschlecht TEXT, \n\taltersgruppe TEXT, \n\tjahr INTEGER, \n\tanzahl_beschaeftigte NUMERIC, \n\tanzahl_vollzeitaquivalente NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT arztpraxen_ambulante_zentren_pkey PRIMARY KEY (uid), \n\tCONSTRAINT arztpraxen_ambulante_zentren_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in arztpraxen_ambulante_zentren and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_beschaeftigte : 5848.8000000000001819, 13883.2199999999993452, 2718.5700000000001637, 5259.3699999999998909, 23368.2299999999995634\nanzahl_vollzeitaquivalente : 378.73000000000001819, 413.37000000000000455, 7857.47999999999956344, 2421.55999999999994543, 366.80000000000001137\n*/\n\n/*\nColumn name, Column discription, Example values\nrechtsform, Rechtsform der Praxis, Rechtsform - Total,Einzelunternehmen,Andere Rechtsform\ngeschlecht, Geschlecht, Geschlecht - Total,Mann,Frau\naltersgruppe, Altersklasse, Altersklasse - Total,Unter 45 Jahre,45-54 Jahre\nanzahl_beschaeftigte, Anzahl Besch\u00e4ftigte, None\nanzahl_vollzeitaquivalente, Anzahl Vollzeit\u00e4quivalente, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche Rechtsform hatte einen Zuwachs an \u00c4rzten zwischen 2017 und 2021 und wie gross war der Zuwachs?\n    ### SQL query:\n\n",
    "process_time": 8.186207249993458,
    "num_tokens": 1103,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 134,
    "question": "Welche drei Kanton hatten 2021 prozentual die meisten jungen \u00c4rzte und \u00c4rztinnen und wieviel Prozent waren es jeweils?",
    "query": "SELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.altersgruppe) LIKE '%unter%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.altersgruppe) LIKE '%total%' THEN T.anzahl_beschaeftigte ELSE 0 END), 0), 2)\n        AS prozent_junge_arzte_und_arztinnen\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_junge_arzte_und_arztinnen DESC LIMIT 3;\n",
    "db_id": "arztpraxen_ambulante_zentren",
    "generated_query": "SELECT \n    s.name AS kanton,\n    COUNT(*) * 100.0 / (SELECT COUNT(*) FROM experiment.arztpraxen_ambulante_zentren WHERE jahr = 2021) AS prozent\nFROM \n    experiment.arztpraxen_ambulante_zentren a\n    JOIN experiment.spatial_unit s ON a.spatialunit_uid = s.spatialunit_uid\nWHERE \n    a.altersgruppe = 'Unter 45 Jahre' AND a.jahr = 2021\nGROUP BY \n    s.name\nORDER BY \n    prozent DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.arztpraxen_ambulante_zentren (\n\tuid SERIAL NOT NULL, \n\trechtsform TEXT, \n\tgeschlecht TEXT, \n\taltersgruppe TEXT, \n\tjahr INTEGER, \n\tanzahl_beschaeftigte NUMERIC, \n\tanzahl_vollzeitaquivalente NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT arztpraxen_ambulante_zentren_pkey PRIMARY KEY (uid), \n\tCONSTRAINT arztpraxen_ambulante_zentren_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in arztpraxen_ambulante_zentren and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nanzahl_beschaeftigte : 5848.8000000000001819, 13883.2199999999993452, 2718.5700000000001637, 5259.3699999999998909, 23368.2299999999995634\nanzahl_vollzeitaquivalente : 378.73000000000001819, 413.37000000000000455, 7857.47999999999956344, 2421.55999999999994543, 366.80000000000001137\n*/\n\n/*\nColumn name, Column discription, Example values\nrechtsform, Rechtsform der Praxis, Rechtsform - Total,Einzelunternehmen,Andere Rechtsform\ngeschlecht, Geschlecht, Geschlecht - Total,Mann,Frau\naltersgruppe, Altersklasse, Altersklasse - Total,Unter 45 Jahre,45-54 Jahre\nanzahl_beschaeftigte, Anzahl Besch\u00e4ftigte, None\nanzahl_vollzeitaquivalente, Anzahl Vollzeit\u00e4quivalente, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche drei Kanton hatten 2021 prozentual die meisten jungen \u00c4rzte und \u00c4rztinnen und wieviel Prozent waren es jeweils?\n    ### SQL query:\n\n",
    "process_time": 9.784373225877061,
    "num_tokens": 1107,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 135,
    "question": "In welchen Kantonen stand die Partei SVP 2019 nicht zur Wahl?",
    "query": "SELECT S.name_de AS kanton_ohne_svp_2019\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.partei = 'SVP'\n  AND T.jahr = 2019\n  AND T.parteistarke_in_prozent IS NULL;\n",
    "db_id": "nationalratswahlen",
    "generated_query": "SELECT DISTINCT s.name_de\nFROM experiment.spatial_unit s\nWHERE s.canton = true\nAND s.spatialunit_uid NOT IN (\n    SELECT n.spatialunit_uid\n    FROM experiment.nationalratswahlen n\n    WHERE n.jahr = 2019\n    AND n.partei = 'SVP'\n)",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.nationalratswahlen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tpartei TEXT, \n\tanzahl_parteistimmen NUMERIC, \n\tanzahl_fiktive_wahlende NUMERIC, \n\tparteistarke_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT nationalratswahlen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT nationalratswahlen_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in nationalratswahlen and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\npartei : LPS, MCR, Lega, SD, Rep.\nanzahl_fiktive_wahlende : 29851, 6168, 14840, 7900, 377968\nparteistarke_in_prozent : 3.970000000000000195, 0.750000000000000000, 0.939999999999999947, 0.390000000000000013, 20.989999999999998437\n*/\n\n/*\nColumn name, Column discription, Example values\npartei, Partei, FDP,CVP,SP,Sep.,\u00dcbrige\nanzahl_parteistimmen, Anzahl Parteistimmen, None\nanzahl_fiktive_wahlende, Anzahl fiktive W\u00e4hlende, None\nparteistarke_in_prozent, Parteist\u00e4rke in Prozent, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    In welchen Kantonen stand die Partei SVP 2019 nicht zur Wahl?\n    ### SQL query:\n\n",
    "process_time": 5.92157282307744,
    "num_tokens": 996,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 136,
    "question": "Welche Partei war 2019 prozentual am st\u00e0rksten in der Schweiz und wie stark war sie?",
    "query": "SELECT T.partei AS staerkste_partei_2019, T.parteistarke_in_prozent\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.parteistarke_in_prozent IS NOT NULL AND T.jahr = 2019\nORDER BY T.parteistarke_in_prozent DESC LIMIT 1;\n",
    "db_id": "nationalratswahlen",
    "generated_query": "SELECT partei, parteistarke_in_prozent\nFROM experiment.nationalratswahlen\nWHERE jahr = 2019\nORDER BY parteistarke_in_prozent DESC\nLIMIT 1;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.nationalratswahlen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tpartei TEXT, \n\tanzahl_parteistimmen NUMERIC, \n\tanzahl_fiktive_wahlende NUMERIC, \n\tparteistarke_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT nationalratswahlen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT nationalratswahlen_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in nationalratswahlen and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\npartei : LPS, MCR, Lega, SD, Rep.\nanzahl_fiktive_wahlende : 29851, 6168, 14840, 7900, 377968\nparteistarke_in_prozent : 3.970000000000000195, 0.750000000000000000, 0.939999999999999947, 0.390000000000000013, 20.989999999999998437\n*/\n\n/*\nColumn name, Column discription, Example values\npartei, Partei, FDP,CVP,SP,Sep.,\u00dcbrige\nanzahl_parteistimmen, Anzahl Parteistimmen, None\nanzahl_fiktive_wahlende, Anzahl fiktive W\u00e4hlende, None\nparteistarke_in_prozent, Parteist\u00e4rke in Prozent, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welche Partei war 2019 prozentual am st\u00e0rksten in der Schweiz und wie stark war sie?\n    ### SQL query:\n\n",
    "process_time": 10.368707282934338,
    "num_tokens": 1003,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 137,
    "question": "Wann und in welchen Kantonen stand die Partei LEGA zur Wahl und welche Parteist\u00e4rke hatte sie?",
    "query": "SELECT S.name_de AS kanton, T.jahr, T.parteistarke_in_prozent AS parteienstaerke_Lega\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.partei = 'Lega'\n  AND T.parteistarke_in_prozent IS NOT NULL\nGROUP BY kanton, T.jahr, T.partei, T.parteistarke_in_prozent\nORDER BY jahr ASC;\n",
    "db_id": "nationalratswahlen",
    "generated_query": "SELECT nw.jahr, su.name_de, nw.parteistarke_in_prozent\nFROM experiment.nationalratswahlen nw\nJOIN experiment.spatial_unit su ON nw.spatialunit_uid = su.spatialunit_uid\nWHERE nw.partei = 'Lega'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.nationalratswahlen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tpartei TEXT, \n\tanzahl_parteistimmen NUMERIC, \n\tanzahl_fiktive_wahlende NUMERIC, \n\tparteistarke_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT nationalratswahlen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT nationalratswahlen_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in nationalratswahlen and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\npartei : LPS, MCR, Lega, SD, Rep.\nanzahl_fiktive_wahlende : 29851, 6168, 14840, 7900, 377968\nparteistarke_in_prozent : 3.970000000000000195, 0.750000000000000000, 0.939999999999999947, 0.390000000000000013, 20.989999999999998437\n*/\n\n/*\nColumn name, Column discription, Example values\npartei, Partei, FDP,CVP,SP,Sep.,\u00dcbrige\nanzahl_parteistimmen, Anzahl Parteistimmen, None\nanzahl_fiktive_wahlende, Anzahl fiktive W\u00e4hlende, None\nparteistarke_in_prozent, Parteist\u00e4rke in Prozent, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wann und in welchen Kantonen stand die Partei LEGA zur Wahl und welche Parteist\u00e4rke hatte sie?\n    ### SQL query:\n\n",
    "process_time": 4.7101833201013505,
    "num_tokens": 1004,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 138,
    "question": "Welches sind die verschiedenen Stromverbrauchskategorien in der Schweiz?",
    "query": "SELECT DISTINCT verbrauchskategorie, verbrauchskategorie_beschreibung\nFROM median_strompreis_per_kanton ORDER BY verbrauchskategorie;\n",
    "db_id": "median_strompreis_per_kanton",
    "generated_query": "SELECT DISTINCT verbrauchskategorie\nFROM experiment.median_strompreis_per_kanton",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.median_strompreis_per_kanton (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tverbrauchskategorie TEXT, \n\tverbrauchskategorie_grosse_kwh_pro_jahr NUMERIC, \n\tverbrauchskategorie_beschreibung TEXT, \n\tenergieprodukt TEXT, \n\tmittlerer_preis_rappen_pro_kwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT median_strompreis_per_kanton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT median_strompreis_per_kanton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in median_strompreis_per_kanton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nmittlerer_preis_rappen_pro_kwh : 18.4326149999999984, 15.8312510000000000, 16.3515380000000015, 17.4508079999999985, 15.4191599999999998\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 8_A.ADM1, 9_A.ADM1, 18_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nverbrauchskategorie, Verbrauchskategorie, C5,H4,H2\nverbrauchskategorie_beschreibung, Verbrauchskategorie Beschreibung, 4'500 kWh/Jahr: 5-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler),7'500 kWh/Jahr: 5-Zimmer-Einfamilienhaus mit Elektroherd' Elektroboiler und Tumbler\nverbrauchskategorie_grosse_kwh_pro_jahr, Verbrauchskategorie Gr\u00f6sse (kwh/jahr), 500000,4500,2500\nenergieprodukt, Energieprodukt, G\u00fcnstigstes Produkt,Standardprodukt\nmittlerer_preis_rappen_pro_kw_hr, Mittlerer Preis in Rappen pro kwh, 17.95067,18.49410,17.25452\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Welches sind die verschiedenen Stromverbrauchskategorien in der Schweiz?\n    ### SQL query:\n\n",
    "process_time": 1.927655050996691,
    "num_tokens": 1141,
    "hardness": "medium",
    "lang": "de"
  },
  {
    "i": 139,
    "question": "Wie haben sich die Standardstrompreise f\u00fcr kleine Unternehmen im Kanton Neuenburg zwischen 2017 und 2023 entwickelt?",
    "query": "SELECT T.jahr, T.energieprodukt, T.verbrauchskategorie, T.mittlerer_preis_rappen_pro_kwh\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de LIKE '%Neuenburg%'\n    AND S.canton = 'TRUE'\n    AND T.jahr >= 2017\n    AND T.jahr <= 2023\n    AND T.energieprodukt = 'Standardprodukt'\n    AND T.verbrauchskategorie_beschreibung LIKE '%Kleinbetrieb%'\nORDER BY T.jahr;\n",
    "db_id": "median_strompreis_per_kanton",
    "generated_query": "SELECT jahr, mittlerer_preis_rappen_pro_kwh\nFROM experiment.median_strompreis_per_kanton\nJOIN experiment.spatial_unit ON experiment.median_strompreis_per_kanton.spatialunit_uid = experiment.spatial_unit.spatialunit_uid\nWHERE verbrauchskategorie = 'H2'\nAND energieprodukt = 'Standardprodukt'\nAND name = 'Neuenburg'\nAND jahr BETWEEN 2017 AND 2023",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.median_strompreis_per_kanton (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tverbrauchskategorie TEXT, \n\tverbrauchskategorie_grosse_kwh_pro_jahr NUMERIC, \n\tverbrauchskategorie_beschreibung TEXT, \n\tenergieprodukt TEXT, \n\tmittlerer_preis_rappen_pro_kwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT median_strompreis_per_kanton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT median_strompreis_per_kanton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in median_strompreis_per_kanton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nmittlerer_preis_rappen_pro_kwh : 18.4326149999999984, 15.8312510000000000, 16.3515380000000015, 17.4508079999999985, 15.4191599999999998\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 8_A.ADM1, 9_A.ADM1, 18_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nverbrauchskategorie, Verbrauchskategorie, C5,H4,H2\nverbrauchskategorie_beschreibung, Verbrauchskategorie Beschreibung, 4'500 kWh/Jahr: 5-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler),7'500 kWh/Jahr: 5-Zimmer-Einfamilienhaus mit Elektroherd' Elektroboiler und Tumbler\nverbrauchskategorie_grosse_kwh_pro_jahr, Verbrauchskategorie Gr\u00f6sse (kwh/jahr), 500000,4500,2500\nenergieprodukt, Energieprodukt, G\u00fcnstigstes Produkt,Standardprodukt\nmittlerer_preis_rappen_pro_kw_hr, Mittlerer Preis in Rappen pro kwh, 17.95067,18.49410,17.25452\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie haben sich die Standardstrompreise f\u00fcr kleine Unternehmen im Kanton Neuenburg zwischen 2017 und 2023 entwickelt?\n    ### SQL query:\n\n",
    "process_time": 9.231208600103855,
    "num_tokens": 1152,
    "hardness": "extra",
    "lang": "de"
  },
  {
    "i": 140,
    "question": "Wie viel zahle ich in CHF f\u00fcr 1000 kWh bei einer 2-Zimmer-Wohnung im Kanton Bern im Jahr 2017?",
    "query": "SELECT T.verbrauchskategorie, T.verbrauchskategorie_beschreibung,\nT.energieprodukt,\nT.mittlerer_preis_rappen_pro_kwh * 1000 / 100 as preis_franken_fur_1000_kwh_bern_2017_2_zimmerwohnung\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.jahr = 2017\n    AND T.verbrauchskategorie_beschreibung LIKE '%2 - Zimmerwohnung%'\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr >= 1000;\n",
    "db_id": "median_strompreis_per_kanton",
    "generated_query": "SELECT mittlerer_preis_rappen_pro_kwh * 10 AS preis_chf\nFROM experiment.median_strompreis_per_kanton AS m\nJOIN experiment.spatial_unit AS s ON m.spatialunit_uid = s.spatialunit_uid\nWHERE verbrauchskategorie_beschreibung = '2-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler)'\nAND s.name = 'Bern'\nAND m.jahr = 2017",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.median_strompreis_per_kanton (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tverbrauchskategorie TEXT, \n\tverbrauchskategorie_grosse_kwh_pro_jahr NUMERIC, \n\tverbrauchskategorie_beschreibung TEXT, \n\tenergieprodukt TEXT, \n\tmittlerer_preis_rappen_pro_kwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT median_strompreis_per_kanton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT median_strompreis_per_kanton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in median_strompreis_per_kanton and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\nmittlerer_preis_rappen_pro_kwh : 18.4326149999999984, 15.8312510000000000, 16.3515380000000015, 17.4508079999999985, 15.4191599999999998\nspatialunit_uid : 11_A.ADM1, 19_A.ADM1, 8_A.ADM1, 9_A.ADM1, 18_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nverbrauchskategorie, Verbrauchskategorie, C5,H4,H2\nverbrauchskategorie_beschreibung, Verbrauchskategorie Beschreibung, 4'500 kWh/Jahr: 5-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler),7'500 kWh/Jahr: 5-Zimmer-Einfamilienhaus mit Elektroherd' Elektroboiler und Tumbler\nverbrauchskategorie_grosse_kwh_pro_jahr, Verbrauchskategorie Gr\u00f6sse (kwh/jahr), 500000,4500,2500\nenergieprodukt, Energieprodukt, G\u00fcnstigstes Produkt,Standardprodukt\nmittlerer_preis_rappen_pro_kw_hr, Mittlerer Preis in Rappen pro kwh, 17.95067,18.49410,17.25452\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n   \n    ### Question: \n    Wie viel zahle ich in CHF f\u00fcr 1000 kWh bei einer 2-Zimmer-Wohnung im Kanton Bern im Jahr 2017?\n    ### SQL query:\n\n",
    "process_time": 8.612173835048452,
    "num_tokens": 1157,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 141,
    "question": "Wie hoch ist der Anteil des Schweizer Budgets, der 2010 und 2020 f\u00fcr die Gesundheit ausgegeben wird?",
    "query": "SELECT jahr, SUM(prozent_der_gesamtausgaben) as prozent_der_gesamtausgaben_fur_gesundheitswesen\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE aufgabenbereich_cofog_grobgliederung = 'Gesundheitswesen'\n    AND institutioneller_sektor = 'Staat'\n    AND jahr <= 2020\n    AND jahr >= 2010\nGROUP BY jahr\nORDER BY jahr ASC;\n",
    "db_id": "staatsausgaben_nach_aufgabenbereichen_cofog",
    "generated_query": "SELECT SUM(ausgaben_in_mio_chf) AS gesundheit_ausgaben\nFROM experiment.staatsausgaben_nach_aufgabenbereichen_cofog\nWHERE aufgabenbereich_cofog_feingliederung = 'Gesundheit'\nAND jahr IN (2010, 2020)",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.staatsausgaben_nach_aufgabenbereichen_cofog (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\taufgabenbereich_cofog_feingliederung TEXT, \n\taufgabenbereich_cofog_grobgliederung TEXT, \n\tinstitutioneller_sektor TEXT, \n\tausgaben_in_mio_chf NUMERIC, \n\tprozent_der_gesamtausgaben NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofo_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in staatsausgaben_nach_aufgabenbereichen_cofog and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nausgaben_in_mio_chf : 5377, 1507, 1322, 1406, 4027\nprozent_der_gesamtausgaben : 8.09999999999999964, 3.29999999999999982, 3.60000000000000009, 6.09999999999999964, 5.50000000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\naufgabenbereich_cofog_feingliederung, Aufgabenbereich des Staates (COFOG Feingliederung), Alter,Wasserversorgung,Polizei\naufgabenbereich_cofog_grobgliederung, Aufgabenbereich des Staates (COFOG Grobgliederung), Umweltschutz,Bildungswesen,Freizeitgestaltung, Sport, Kultur und Religion\ninstitutioneller_sektor, institutioneller Sektor, Staat,Kantone,Bund,Gemeinden,\u00d6ffentliche Sozialversicherungen\nausgaben_in_mio_chf, Ausgaben in Millionen CHF, None\nprozent_der_gesamtausgaben, Prozent der Gesamtaugaben, None\n*/\n\n   \n    ### Question: \n    Wie hoch ist der Anteil des Schweizer Budgets, der 2010 und 2020 f\u00fcr die Gesundheit ausgegeben wird?\n    ### SQL query:\n\n",
    "process_time": 6.014105690876022,
    "num_tokens": 1167,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 142,
    "question": "Welches waren die 3 gr\u00f6ssten Ausgabenquellen des Bundes im Jahr 2021 und wie hoch waren diese?",
    "query": "SELECT SUM(ausgaben_in_mio_chf) as ausgaben_in_mio_chf,\n  aufgabenbereich_cofog_feingliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Bund' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_feingliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 3;\n",
    "db_id": "staatsausgaben_nach_aufgabenbereichen_cofog",
    "generated_query": "SELECT aufgabenbereich_cofog_feingliederung, ausgaben_in_mio_chf\nFROM experiment.staatsausgaben_nach_aufgabenbereichen_cofog\nWHERE institutioneller_sektor = 'Bund' AND jahr = 2021\nORDER BY ausgaben_in_mio_chf DESC\nLIMIT 3;",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.staatsausgaben_nach_aufgabenbereichen_cofog (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\taufgabenbereich_cofog_feingliederung TEXT, \n\taufgabenbereich_cofog_grobgliederung TEXT, \n\tinstitutioneller_sektor TEXT, \n\tausgaben_in_mio_chf NUMERIC, \n\tprozent_der_gesamtausgaben NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofo_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in staatsausgaben_nach_aufgabenbereichen_cofog and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nausgaben_in_mio_chf : 5377, 1507, 1322, 1406, 4027\nprozent_der_gesamtausgaben : 8.09999999999999964, 3.29999999999999982, 3.60000000000000009, 6.09999999999999964, 5.50000000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\naufgabenbereich_cofog_feingliederung, Aufgabenbereich des Staates (COFOG Feingliederung), Alter,Wasserversorgung,Polizei\naufgabenbereich_cofog_grobgliederung, Aufgabenbereich des Staates (COFOG Grobgliederung), Umweltschutz,Bildungswesen,Freizeitgestaltung, Sport, Kultur und Religion\ninstitutioneller_sektor, institutioneller Sektor, Staat,Kantone,Bund,Gemeinden,\u00d6ffentliche Sozialversicherungen\nausgaben_in_mio_chf, Ausgaben in Millionen CHF, None\nprozent_der_gesamtausgaben, Prozent der Gesamtaugaben, None\n*/\n\n   \n    ### Question: \n    Welches waren die 3 gr\u00f6ssten Ausgabenquellen des Bundes im Jahr 2021 und wie hoch waren diese?\n    ### SQL query:\n\n",
    "process_time": 11.25490245805122,
    "num_tokens": 1164,
    "hardness": "unknown",
    "lang": "de"
  },
  {
    "i": 143,
    "question": "Welcher Anteil des Schweizer Budgets wird jedes Jahr in Sicherheit investiert?",
    "query": "SELECT jahr, SUM(prozent_der_gesamtausgaben) as prozent_der_gesamtausgaben_fur_sicherheit\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE LOWER(aufgabenbereich_cofog_feingliederung) LIKE '%sicherheit%'\n    AND institutioneller_sektor = 'Staat'\nGROUP BY jahr\nORDER BY jahr ASC;\n",
    "db_id": "staatsausgaben_nach_aufgabenbereichen_cofog",
    "generated_query": "SELECT jahr, prozent_der_gesamtausgaben\nFROM experiment.staatsausgaben_nach_aufgabenbereichen_cofog\nWHERE aufgabenbereich_cofog_feingliederung = 'Sicherheit'",
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2117_A.ADM3, 923_A.ADM3, 715_A.ADM3, 5928_A.ADM3, 1209_A.ADM4\nspatialunit_current_id : 4729, 23, 250, 3806, 535\nname : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_de : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_fr : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nname_it : L\u00fcterswil-G\u00e4chliwil, Cagiallo, Ringgenberg (BE), Corsalettes, Rubigen\nspatialunit_hist_id : 15019, 14530, 14664, 15673, 14751\ncanton_hist_id : 11, 23, 24, 19, 14\ndistrict_hist_id : 10145, 10122, 10185, 10181, 10088\nvalid_from : 2020-01-01, 2006-09-01, 2001-01-01, 2013-04-14, 1948-01-01\nvalid_until : 1967-05-31, 2008-12-31, 1998-12-31, 1963-12-31, 2018-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.staatsausgaben_nach_aufgabenbereichen_cofog (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\taufgabenbereich_cofog_feingliederung TEXT, \n\taufgabenbereich_cofog_grobgliederung TEXT, \n\tinstitutioneller_sektor TEXT, \n\tausgaben_in_mio_chf NUMERIC, \n\tprozent_der_gesamtausgaben NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofo_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in staatsausgaben_nach_aufgabenbereichen_cofog and 5 examples in each column for high cardinality columns :\nuid : 171, 69, 4, 129, 147\njahr : 2011, 2012, 2019, 2018, 2006\nausgaben_in_mio_chf : 5377, 1507, 1322, 1406, 4027\nprozent_der_gesamtausgaben : 8.09999999999999964, 3.29999999999999982, 3.60000000000000009, 6.09999999999999964, 5.50000000000000000\n*/\n\n/*\nColumn name, Column discription, Example values\naufgabenbereich_cofog_feingliederung, Aufgabenbereich des Staates (COFOG Feingliederung), Alter,Wasserversorgung,Polizei\naufgabenbereich_cofog_grobgliederung, Aufgabenbereich des Staates (COFOG Grobgliederung), Umweltschutz,Bildungswesen,Freizeitgestaltung, Sport, Kultur und Religion\ninstitutioneller_sektor, institutioneller Sektor, Staat,Kantone,Bund,Gemeinden,\u00d6ffentliche Sozialversicherungen\nausgaben_in_mio_chf, Ausgaben in Millionen CHF, None\nprozent_der_gesamtausgaben, Prozent der Gesamtaugaben, None\n*/\n\n   \n    ### Question: \n    Welcher Anteil des Schweizer Budgets wird jedes Jahr in Sicherheit investiert?\n    ### SQL query:\n\n",
    "process_time": 15.594916217029095,
    "num_tokens": 1157,
    "hardness": "unknown",
    "lang": "de"
  }
]