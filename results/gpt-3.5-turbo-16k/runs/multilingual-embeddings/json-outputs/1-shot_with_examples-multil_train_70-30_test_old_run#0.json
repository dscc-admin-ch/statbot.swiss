[
  {
    "i": 0,
    "question": "Which offences had over 10,000 incidents in Switzerland in 2022. Provide the criminal codes and the number of incidents.",
    "query": "SELECT T.offence_criminal_code,\n  SUM(T.number_criminal_offences_registered) AS offences_per_year\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered > 10000\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.year, T.offence_criminal_code\nORDER BY offences_per_year DESC;\n",
    "db_id": "criminal_offences_registered_by_police",
    "generated_query": "SELECT T.offence_criminal_code, T.number_criminal_offences_registered AS number_of_incidents\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered > 10000\n  AND T.offence_criminal_code != 'Offence - total';",
    "meta_data": [
      {
        "question": "How were the crime prevention rates in Switzerland for 2022 per crime category. Also provide the number of attempted and committed crimes? Order by prevention rate.",
        "query": "SELECT T.offence_category, SUM(T.number_criminal_offences_attempted) AS number_of_attempted_crimes,\n  SUM(T.number_criminal_offences_registered) AS number_of_committed_crimes,\n  ROUND(100 * SUM(T.number_criminal_offences_attempted) / SUM(T.number_criminal_offences_registered), 2) AS prevention_rate\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered != 0\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.offence_category\nORDER BY prevention_rate DESC;\n",
        "score": 0.516984224319458
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.criminal_offences_registered_by_police (\n\tuid SERIAL NOT NULL, \n\toffence_criminal_code TEXT, \n\tyear INTEGER, \n\toffence_category TEXT, \n\tnumber_criminal_offences_registered NUMERIC, \n\tnumber_criminal_offences_unsolved NUMERIC, \n\tnumber_criminal_offences_solved NUMERIC, \n\tnumber_criminal_offences_completed NUMERIC, \n\tnumber_criminal_offences_completed_unsolved NUMERIC, \n\tnumber_criminal_offences_completed_solved NUMERIC, \n\tnumber_criminal_offences_attempted NUMERIC, \n\tnumber_criminal_offences_attempted_unsolved NUMERIC, \n\tnumber_criminal_offences_attempted_solved NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT criminal_offences_registered_by_police_pkey PRIMARY KEY (uid), \n\tCONSTRAINT criminal_offences_registered_by_police_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in criminal_offences_registered_by_police and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\noffence_criminal_code : Breach of the privacy of a sealed document (art. 179), Defamation (art. 173), Endangering life (art. 129), Administering substances capable of causing injury to children (art. 136), Sexual acts with minors against payment (art. 196)\nnumber_criminal_offences_registered : 51758, 19, 11686, 10068, 457\nnumber_criminal_offences_unsolved : 57, 89, 1119, 19, 51559\nnumber_criminal_offences_solved : 46, 21, 705, 490, 69\nnumber_criminal_offences_completed : 4892, 89, 63506, 19, 5697\nnumber_criminal_offences_completed_unsolved : 19, 1878, 46, 125, 42\nnumber_criminal_offences_completed_solved : 46, 420, 490, 85, 17\nnumber_criminal_offences_attempted : 61, 794, 89, 12, 70\nnumber_criminal_offences_attempted_unsolved : 202, 12, 54, 273, 250\nnumber_criminal_offences_attempted_solved : 12, 89, 86, 83, 266\n*/\n\n/*\nColumn name, Column discription, Example values\noffence_criminal_code, offence as defined by Swiss criminal code, Vehicle burglary (art. 139),Falsification of money (art. 241)\nnumber_criminal_offences_registered, number of criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_unsolved, number of unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_solved, number of resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed, number of completed criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_unsolved, Number of completed and unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_solved, Number of completed and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted, number of attempted criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_unsolved, number of attempted und unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_solved, number of attempted and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\noffence_category, broad Category of criminal offence, Property,Liberty\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow were the crime prevention rates in Switzerland for 2022 per crime category. Also provide the number of attempted and committed crimes? Order by prevention rate.\n### SQL query\nSELECT T.offence_category, SUM(T.number_criminal_offences_attempted) AS number_of_attempted_crimes,\n  SUM(T.number_criminal_offences_registered) AS number_of_committed_crimes,\n  ROUND(100 * SUM(T.number_criminal_offences_attempted) / SUM(T.number_criminal_offences_registered), 2) AS prevention_rate\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered != 0\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.offence_category\nORDER BY prevention_rate DESC;\n\n\n### Question\nWhich offences had over 10,000 incidents in Switzerland in 2022. Provide the criminal codes and the number of incidents.\n### SQL query\n",
    "process_time": 10.436144614825025,
    "num_tokens": 1667,
    "hardness": "unknown",
    "scores": [
      0.516984224319458
    ],
    "lang": "en"
  },
  {
    "i": 1,
    "question": "What is the most committed crime in Switzerland?",
    "query": "SELECT T.offence_criminal_code AS most_common_criminal_offence\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.offence_criminal_code != 'Offence - total'\n  AND T.number_criminal_offences_registered IS NOT NULL\nGROUP BY T.offence_criminal_code\nORDER BY SUM(T.number_criminal_offences_registered) DESC LIMIT 1;\n",
    "db_id": "criminal_offences_registered_by_police",
    "generated_query": "SELECT T.offence_criminal_code AS most_committed_crime, T.number_criminal_offences_registered\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\nGROUP BY T.offence_criminal_code, T.number_criminal_offences_registered\nORDER BY T.number_criminal_offences_registered DESC LIMIT 1;",
    "meta_data": [
      {
        "question": "What is the category of the most frequently committed crimes in Switzerland and how many such crimes were commited?",
        "query": "SELECT T.offence_category, SUM(number_criminal_offences_registered) AS number_criminal_offences\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.offence_category, S.name\nORDER BY number_criminal_offences DESC LIMIT 1;\n",
        "score": 0.22695544362068176
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.criminal_offences_registered_by_police (\n\tuid SERIAL NOT NULL, \n\toffence_criminal_code TEXT, \n\tyear INTEGER, \n\toffence_category TEXT, \n\tnumber_criminal_offences_registered NUMERIC, \n\tnumber_criminal_offences_unsolved NUMERIC, \n\tnumber_criminal_offences_solved NUMERIC, \n\tnumber_criminal_offences_completed NUMERIC, \n\tnumber_criminal_offences_completed_unsolved NUMERIC, \n\tnumber_criminal_offences_completed_solved NUMERIC, \n\tnumber_criminal_offences_attempted NUMERIC, \n\tnumber_criminal_offences_attempted_unsolved NUMERIC, \n\tnumber_criminal_offences_attempted_solved NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT criminal_offences_registered_by_police_pkey PRIMARY KEY (uid), \n\tCONSTRAINT criminal_offences_registered_by_police_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in criminal_offences_registered_by_police and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\noffence_criminal_code : Breach of the privacy of a sealed document (art. 179), Defamation (art. 173), Endangering life (art. 129), Administering substances capable of causing injury to children (art. 136), Sexual acts with minors against payment (art. 196)\nnumber_criminal_offences_registered : 51758, 19, 11686, 10068, 457\nnumber_criminal_offences_unsolved : 57, 89, 1119, 19, 51559\nnumber_criminal_offences_solved : 46, 21, 705, 490, 69\nnumber_criminal_offences_completed : 4892, 89, 63506, 19, 5697\nnumber_criminal_offences_completed_unsolved : 19, 1878, 46, 125, 42\nnumber_criminal_offences_completed_solved : 46, 420, 490, 85, 17\nnumber_criminal_offences_attempted : 61, 794, 89, 12, 70\nnumber_criminal_offences_attempted_unsolved : 202, 12, 54, 273, 250\nnumber_criminal_offences_attempted_solved : 12, 89, 86, 83, 266\n*/\n\n/*\nColumn name, Column discription, Example values\noffence_criminal_code, offence as defined by Swiss criminal code, Vehicle burglary (art. 139),Falsification of money (art. 241)\nnumber_criminal_offences_registered, number of criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_unsolved, number of unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_solved, number of resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed, number of completed criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_unsolved, Number of completed and unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_solved, Number of completed and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted, number of attempted criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_unsolved, number of attempted und unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_solved, number of attempted and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\noffence_category, broad Category of criminal offence, Property,Liberty\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn which year were there the most crimes in Switzerland? Also please provide the number of committed crimes.\n### SQL query\nSELECT T.year AS year_with_most_crimes, T.number_criminal_offences_registered\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.offence_criminal_code = 'Offence - total'\nGROUP BY T.year, T.number_criminal_offences_registered\nORDER BY T.number_criminal_offences_registered DESC LIMIT 1;\n\n\n### Question\nWhat is the most committed crime in Switzerland?\n### SQL query\n",
    "process_time": 11.187554453965276,
    "num_tokens": 1575,
    "hardness": "unknown",
    "scores": [
      0.22695544362068176
    ],
    "lang": "en"
  },
  {
    "i": 2,
    "question": "What was the clearance rate for bribery in 2021 in Switzerland",
    "query": "SELECT 100 * SUM(T.number_criminal_offences_solved) / SUM(T.number_criminal_offences_registered)\nAS clearance_rate_for_bribery\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2021\n  AND T.number_criminal_offences_registered IS NOT NULL\n  AND T.offence_category = 'Bribery';\n",
    "db_id": "criminal_offences_registered_by_police",
    "generated_query": "SELECT ROUND(100 * number_criminal_offences_completed_solved / number_criminal_offences_registered, 2) AS clearance_rate\nFROM criminal_offences_registered_by_police\nJOIN spatial_unit ON criminal_offences_registered_by_police.spatialunit_uid = spatial_unit.spatialunit_uid\nWHERE spatial_unit.name = 'Switzerland'\n  AND spatial_unit.country = TRUE\n  AND year = 2021\n  AND offence_criminal_code = 'Bribery';",
    "meta_data": [
      {
        "question": "How were the crime prevention rates in Switzerland for 2022 per crime category. Also provide the number of attempted and committed crimes? Order by prevention rate.",
        "query": "SELECT T.offence_category, SUM(T.number_criminal_offences_attempted) AS number_of_attempted_crimes,\n  SUM(T.number_criminal_offences_registered) AS number_of_committed_crimes,\n  ROUND(100 * SUM(T.number_criminal_offences_attempted) / SUM(T.number_criminal_offences_registered), 2) AS prevention_rate\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered != 0\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.offence_category\nORDER BY prevention_rate DESC;\n",
        "score": 0.6141471266746521
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.criminal_offences_registered_by_police (\n\tuid SERIAL NOT NULL, \n\toffence_criminal_code TEXT, \n\tyear INTEGER, \n\toffence_category TEXT, \n\tnumber_criminal_offences_registered NUMERIC, \n\tnumber_criminal_offences_unsolved NUMERIC, \n\tnumber_criminal_offences_solved NUMERIC, \n\tnumber_criminal_offences_completed NUMERIC, \n\tnumber_criminal_offences_completed_unsolved NUMERIC, \n\tnumber_criminal_offences_completed_solved NUMERIC, \n\tnumber_criminal_offences_attempted NUMERIC, \n\tnumber_criminal_offences_attempted_unsolved NUMERIC, \n\tnumber_criminal_offences_attempted_solved NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT criminal_offences_registered_by_police_pkey PRIMARY KEY (uid), \n\tCONSTRAINT criminal_offences_registered_by_police_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in criminal_offences_registered_by_police and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\noffence_criminal_code : Breach of the privacy of a sealed document (art. 179), Defamation (art. 173), Endangering life (art. 129), Administering substances capable of causing injury to children (art. 136), Sexual acts with minors against payment (art. 196)\nnumber_criminal_offences_registered : 51758, 19, 11686, 10068, 457\nnumber_criminal_offences_unsolved : 57, 89, 1119, 19, 51559\nnumber_criminal_offences_solved : 46, 21, 705, 490, 69\nnumber_criminal_offences_completed : 4892, 89, 63506, 19, 5697\nnumber_criminal_offences_completed_unsolved : 19, 1878, 46, 125, 42\nnumber_criminal_offences_completed_solved : 46, 420, 490, 85, 17\nnumber_criminal_offences_attempted : 61, 794, 89, 12, 70\nnumber_criminal_offences_attempted_unsolved : 202, 12, 54, 273, 250\nnumber_criminal_offences_attempted_solved : 12, 89, 86, 83, 266\n*/\n\n/*\nColumn name, Column discription, Example values\noffence_criminal_code, offence as defined by Swiss criminal code, Vehicle burglary (art. 139),Falsification of money (art. 241)\nnumber_criminal_offences_registered, number of criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_unsolved, number of unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_solved, number of resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed, number of completed criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_unsolved, Number of completed and unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_completed_solved, Number of completed and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted, number of attempted criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_unsolved, number of attempted und unsolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\nnumber_criminal_offences_attempted_solved, number of attempted and resolved criminal offences registered by Swiss police according to Swiss Criminal Code, None\noffence_category, broad Category of criminal offence, Property,Liberty\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow were the crime prevention rates in Switzerland for 2022 per crime category. Also provide the number of attempted and committed crimes? Order by prevention rate.\n### SQL query\nSELECT T.offence_category, SUM(T.number_criminal_offences_attempted) AS number_of_attempted_crimes,\n  SUM(T.number_criminal_offences_registered) AS number_of_committed_crimes,\n  ROUND(100 * SUM(T.number_criminal_offences_attempted) / SUM(T.number_criminal_offences_registered), 2) AS prevention_rate\nFROM criminal_offences_registered_by_police AS T\nJOIN spatial_unit AS S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2022\n  AND T.number_criminal_offences_registered != 0\n  AND T.offence_criminal_code != 'Offence - total'\nGROUP BY T.offence_category\nORDER BY prevention_rate DESC;\n\n\n### Question\nWhat was the clearance rate for bribery in 2021 in Switzerland\n### SQL query\n",
    "process_time": 8.853311357088387,
    "num_tokens": 1655,
    "hardness": "unknown",
    "scores": [
      0.6141471266746521
    ],
    "lang": "en"
  },
  {
    "i": 3,
    "question": "List for each year the number of forests in Kanton Uri?",
    "query": "SELECT T.year, SUM(T.number_of_plantations) AS number_of_plantations_canton_uri\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE' AND S.name_de LIKE '%Uri%'\n  AND T.type_of_owner = 'Type of owners - total'\n  AND T.wood_species = 'Species - total'\n  AND T.forest_zone != 'Switzerland'\n  AND T.number_of_plantations != 0\nGROUP BY T.year\nORDER BY T.year DESC;\n",
    "db_id": "number_of_plantations_in_swiss_forest",
    "generated_query": "SELECT\n  T.year,\n  SUM(T.number_of_plantations) as number_of_forests_in_uri\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND S.name_de = 'Uri'\n  AND T.number_of_plantations != 0 AND number_of_plantations IS NOT NULL\nGROUP BY T.year\nORDER BY T.year;",
    "meta_data": [
      {
        "question": "How many plantations in the \"Jura\" forest zone does each canton have by the latest count?",
        "query": "WITH MostRecentYear AS (\n  SELECT MAX(year) as most_recent_year\n  FROM number_of_plantations_in_swiss_forest WHERE type_of_owner = 'Type of owners - total'\n)\nSELECT\n  S.name_de as canton,\n  SUM(T.number_of_plantations) as number_of_plantations_in_jura\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nJOIN MostRecentYear AS ON T.year = MostRecentYear.most_recent_year\nWHERE S.canton = 'TRUE'\n  AND T.type_of_owner = 'Type of owners - total'\n  AND T.forest_zone = 'Jura'\n  AND T.number_of_plantations != 0 AND number_of_plantations IS NOT NULL\nGROUP BY S.name_de, MostRecentYear.most_recent_year\nORDER BY number_of_plantations_in_jura DESC;\n",
        "score": 0.6516349911689758
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.number_of_plantations_in_swiss_forest (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tforest_zone TEXT, \n\ttype_of_owner TEXT, \n\twood_species TEXT, \n\tnumber_of_plantations NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT number_of_plantations_in_swiss_forest_pkey PRIMARY KEY (uid), \n\tCONSTRAINT number_of_plantations_in_swiss_forest_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in number_of_plantations_in_swiss_forest and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nnumber_of_plantations : 34180, 5340, 127202, 43755, 563800\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\n*/\n\n/*\nColumn name, Column discription, Example values\nforest_zone, forest zone, Switzerland,Jura,Central Plain\ntype_of_owner, owner type, Type of owners - total,Public forest,Private forest\nwood_species, wood species group, Species - total,Hardwood (deciduous),Softwood (conifers)\nnumber_of_plantations, number of plantations, 14987125 ,11537284 ,3449841\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many plantations in the \"Jura\" forest zone does each canton have by the latest count?\n### SQL query\nWITH MostRecentYear AS (\n  SELECT MAX(year) as most_recent_year\n  FROM number_of_plantations_in_swiss_forest WHERE type_of_owner = 'Type of owners - total'\n)\nSELECT\n  S.name_de as canton,\n  SUM(T.number_of_plantations) as number_of_plantations_in_jura\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nJOIN MostRecentYear AS ON T.year = MostRecentYear.most_recent_year\nWHERE S.canton = 'TRUE'\n  AND T.type_of_owner = 'Type of owners - total'\n  AND T.forest_zone = 'Jura'\n  AND T.number_of_plantations != 0 AND number_of_plantations IS NOT NULL\nGROUP BY S.name_de, MostRecentYear.most_recent_year\nORDER BY number_of_plantations_in_jura DESC;\n\n\n### Question\nList for each year the number of forests in Kanton Uri?\n### SQL query\n",
    "process_time": 9.759411270963028,
    "num_tokens": 1154,
    "hardness": "unknown",
    "scores": [
      0.6516349911689758
    ],
    "lang": "en"
  },
  {
    "i": 4,
    "question": "What were proportions, in percent, of deciduous and coniferous forests in Switzerland in 2020?",
    "query": "SELECT\n  ROUND(100 * SUM(CASE WHEN LOWER(wood_species) LIKE '%deciduous%'\n       THEN number_of_plantations ELSE 0 END) /\n  SUM(CASE WHEN LOWER(wood_species) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END),\n  2) AS percentage_deciduous_forests,\n    ROUND(100 * SUM(CASE WHEN LOWER(wood_species) LIKE '%conifers%'\n       THEN number_of_plantations ELSE 0 END) /\n   SUM(CASE WHEN LOWER(wood_species) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END),\n  2) AS percentage_coniferous_forests\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year = 2020\n  AND S.name = 'Switzerland'\n  AND T.type_of_owner = 'Type of owners - total';\n",
    "db_id": "number_of_plantations_in_swiss_forest",
    "generated_query": "SELECT\n  ROUND(100 * SUM(CASE WHEN LOWER(wood_species) LIKE '%deciduous%'\n        THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(wood_species) LIKE '%total%'\n        THEN number_of_plantations ELSE 0 END), 2) AS percentage_deciduous_forests,\n  ROUND(100 * SUM(CASE WHEN LOWER(wood_species) LIKE '%conifers%'\n       THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(wood_species) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END), 2) AS percentage_coniferous_forests\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year = 2020\n  AND S.name = 'Switzerland'\n  AND T.type_of_owner = 'Type of owners - total';",
    "meta_data": [
      {
        "question": "What was the proportion of private to public forests in Switzerland in 2022?",
        "query": "SELECT\n  ROUND(100 * SUM(CASE WHEN LOWER(type_of_owner) LIKE '%private%'\n        THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(type_of_owner) LIKE '%total%'\n        THEN number_of_plantations ELSE 0 END), 2) AS percentage_private_forests,\n  ROUND(100 * SUM(CASE WHEN LOWER(type_of_owner) LIKE '%public%'\n       THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(type_of_owner) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END), 2) AS percentage_public_forests\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year = 2022\n  AND S.name = 'Switzerland'\n  AND T.wood_species = 'Species - total';\n",
        "score": 0.3296690583229065
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.number_of_plantations_in_swiss_forest (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tforest_zone TEXT, \n\ttype_of_owner TEXT, \n\twood_species TEXT, \n\tnumber_of_plantations NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT number_of_plantations_in_swiss_forest_pkey PRIMARY KEY (uid), \n\tCONSTRAINT number_of_plantations_in_swiss_forest_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in number_of_plantations_in_swiss_forest and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nnumber_of_plantations : 34180, 5340, 127202, 43755, 563800\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\n*/\n\n/*\nColumn name, Column discription, Example values\nforest_zone, forest zone, Switzerland,Jura,Central Plain\ntype_of_owner, owner type, Type of owners - total,Public forest,Private forest\nwood_species, wood species group, Species - total,Hardwood (deciduous),Softwood (conifers)\nnumber_of_plantations, number of plantations, 14987125 ,11537284 ,3449841\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat was the proportion of private to public forests in Switzerland in 2022?\n### SQL query\nSELECT\n  ROUND(100 * SUM(CASE WHEN LOWER(type_of_owner) LIKE '%private%'\n        THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(type_of_owner) LIKE '%total%'\n        THEN number_of_plantations ELSE 0 END), 2) AS percentage_private_forests,\n  ROUND(100 * SUM(CASE WHEN LOWER(type_of_owner) LIKE '%public%'\n       THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(type_of_owner) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END), 2) AS percentage_public_forests\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year = 2022\n  AND S.name = 'Switzerland'\n  AND T.wood_species = 'Species - total';\n\n\n### Question\nWhat were proportions, in percent, of deciduous and coniferous forests in Switzerland in 2020?\n### SQL query\n",
    "process_time": 18.812336058123037,
    "num_tokens": 1161,
    "hardness": "unknown",
    "scores": [
      0.3296690583229065
    ],
    "lang": "en"
  },
  {
    "i": 5,
    "question": "By 2022: Which three forest zones had the most plantations in Switzerland? Provide the forest zones together with the number of plantations.",
    "query": "SELECT T.forest_zone, SUM(T.number_of_plantations) as number_of_plantations\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.type_of_owner = 'Type of owners - total'\n  AND T.year = 2022\n  AND T.number_of_plantations != 0 AND number_of_plantations IS NOT NULL\n  AND T.forest_zone != 'Switzerland'\nGROUP BY T.forest_zone\nORDER BY number_of_plantations DESC LIMIT 3;\n",
    "db_id": "number_of_plantations_in_swiss_forest",
    "generated_query": "SELECT\n  forest_zone,\n  SUM(number_of_plantations) AS total_number_of_plantations\nFROM number_of_plantations_in_swiss_forest\nWHERE year = 2022\n  AND forest_zone != 'Switzerland'\nGROUP BY forest_zone\nORDER BY total_number_of_plantations DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "What was the proportion of private to public forests in Switzerland in 2022?",
        "query": "SELECT\n  ROUND(100 * SUM(CASE WHEN LOWER(type_of_owner) LIKE '%private%'\n        THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(type_of_owner) LIKE '%total%'\n        THEN number_of_plantations ELSE 0 END), 2) AS percentage_private_forests,\n  ROUND(100 * SUM(CASE WHEN LOWER(type_of_owner) LIKE '%public%'\n       THEN number_of_plantations ELSE 0 END) /\n    SUM(CASE WHEN LOWER(type_of_owner) LIKE '%total%'\n       THEN number_of_plantations ELSE 0 END), 2) AS percentage_public_forests\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year = 2022\n  AND S.name = 'Switzerland'\n  AND T.wood_species = 'Species - total';\n",
        "score": 0.6017159223556519
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.number_of_plantations_in_swiss_forest (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tforest_zone TEXT, \n\ttype_of_owner TEXT, \n\twood_species TEXT, \n\tnumber_of_plantations NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT number_of_plantations_in_swiss_forest_pkey PRIMARY KEY (uid), \n\tCONSTRAINT number_of_plantations_in_swiss_forest_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in number_of_plantations_in_swiss_forest and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nnumber_of_plantations : 34180, 5340, 127202, 43755, 563800\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\n*/\n\n/*\nColumn name, Column discription, Example values\nforest_zone, forest zone, Switzerland,Jura,Central Plain\ntype_of_owner, owner type, Type of owners - total,Public forest,Private forest\nwood_species, wood species group, Species - total,Hardwood (deciduous),Softwood (conifers)\nnumber_of_plantations, number of plantations, 14987125 ,11537284 ,3449841\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow much did the number of Swiss forest change from 1975 to 2022? Show the change in total and by forest type as conifers or deciduous.\n### SQL query\nSELECT\n  (SUM(CASE WHEN LOWER(wood_species) LIKE '%deciduous%' AND year = 2022\n       THEN number_of_plantations ELSE 0 END) -\n   SUM(CASE WHEN LOWER(wood_species) LIKE '%deciduous%' AND year = 1975\n       THEN number_of_plantations ELSE 0 END)) AS difference_deciduous_number_of_forests_1975_to_2022,\n  (SUM(CASE WHEN LOWER(wood_species) LIKE '%conifers%' AND year = 2022\n       THEN number_of_plantations ELSE 0 END) -\n   SUM(CASE WHEN LOWER(wood_species) LIKE '%conifers%' AND year = 1975\n       THEN number_of_plantations ELSE 0 END)) AS difference_conifers_number_of_forests_1975_to_2022,\n  (SUM(CASE WHEN LOWER(wood_species) LIKE '%total%' AND year = 2022\n       THEN number_of_plantations ELSE 0 END) -\n   SUM(CASE WHEN LOWER(wood_species) LIKE '%total%' AND year = 1975\n       THEN number_of_plantations ELSE 0 END)) AS difference_total_number_of_forests_1975_to_2022\nFROM number_of_plantations_in_swiss_forest as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.year IN (1975, 2022)\n  AND S.name = 'Switzerland'\n  AND T.forest_zone = 'Switzerland'\n  AND T.type_of_owner = 'Type of owners - total';\n\n\n### Question\nBy 2022: Which three forest zones had the most plantations in Switzerland? Provide the forest zones together with the number of plantations.\n### SQL query\n",
    "process_time": 9.328457499155775,
    "num_tokens": 1329,
    "hardness": "unknown",
    "scores": [
      0.6017159223556519
    ],
    "lang": "en"
  },
  {
    "i": 6,
    "question": "How many FTE were allocated to tourism were there in Switzerland 2019?",
    "query": "SELECT T.total_full_time_employment_of_tourism\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND S.name = 'Switzerland'\n    AND T.year = 2019;\n",
    "db_id": "tourism_economy_by_canton",
    "generated_query": "SELECT T.total_full_time_employment_of_tourism as total_full_time_employment_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.spatialunit_uid = '0_CH'\n    AND T.year = 2019;",
    "meta_data": [
      {
        "question": "How much did each canton earn from tourism in 2019?",
        "query": "SELECT S.name as canton,\nT.mio_chf_gross_value_added_of_tourism as mio_chf_gross_value_added_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY mio_chf_gross_value_added_of_tourism_2019 DESC;\n",
        "score": 0.6347940564155579
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.tourism_economy_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tmio_chf_gross_value_added_of_tourism NUMERIC, \n\tpercent_share_gross_value_added_of_tourism NUMERIC, \n\ttotal_full_time_employment_of_tourism NUMERIC, \n\tpercent_share_full_time_employment_of_tourism NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT tourism_economy_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT tourism_economy_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in tourism_economy_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nmio_chf_gross_value_added_of_tourism : 98.180000000000007, 1231.109999999999900, 83.260000000000005, 765.309999999999945, 118.040000000000006\npercent_share_gross_value_added_of_tourism : 0.90000000000000002, 2.22999999999999998, 6.49000000000000021, 3.33000000000000007, 10.10999999999999943\ntotal_full_time_employment_of_tourism : 11573.76000000000022, 2160.76000000000022, 5212.53999999999996, 816.33000000000004, 12727.17000000000007\npercent_share_full_time_employment_of_tourism : 2.2799999999999998, 2.3100000000000001, 9.1300000000000008, 2.2999999999999998, 6.0999999999999996\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\n*/\n\n/*\nColumn name, Column discription, Example values\nmio_chf_gross_value_added_of_tourism, Amount in million CHF of Gross Value that was added by tourism, None\npercent_share_gross_value_added_of_tourism, Percentage share of Gross Value that was added by tourism, None\ntotal_full_time_employment_of_tourism, Full time employment in Tourism, None\npercent_share_full_time_employment_of_tourism, Percentage share of full time employment in tourism, None\n*/\n\n\n\n### Question\nHow much did each canton earn from tourism in 2019?\n### SQL query\nSELECT S.name as canton,\nT.mio_chf_gross_value_added_of_tourism as mio_chf_gross_value_added_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY mio_chf_gross_value_added_of_tourism_2019 DESC;\n\n\n### Question\nHow many FTE were allocated to tourism were there in Switzerland 2019?\n### SQL query\n",
    "process_time": 8.606933053117245,
    "num_tokens": 1294,
    "hardness": "medium",
    "scores": [
      0.6347940564155579
    ],
    "lang": "en"
  },
  {
    "i": 7,
    "question": "Which canton has the most employees in the tourism sector in 2019?",
    "query": "SELECT S.name AS canton\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY T.total_full_time_employment_of_tourism DESC LIMIT 1;\n",
    "db_id": "tourism_economy_by_canton",
    "generated_query": "SELECT S.name as canton,\nT.total_full_time_employment_of_tourism as total_full_time_employment_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY total_full_time_employment_of_tourism_2019 DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "How much did each canton earn from tourism in 2019?",
        "query": "SELECT S.name as canton,\nT.mio_chf_gross_value_added_of_tourism as mio_chf_gross_value_added_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY mio_chf_gross_value_added_of_tourism_2019 DESC;\n",
        "score": 0.3826194107532501
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.tourism_economy_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tmio_chf_gross_value_added_of_tourism NUMERIC, \n\tpercent_share_gross_value_added_of_tourism NUMERIC, \n\ttotal_full_time_employment_of_tourism NUMERIC, \n\tpercent_share_full_time_employment_of_tourism NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT tourism_economy_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT tourism_economy_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in tourism_economy_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nmio_chf_gross_value_added_of_tourism : 98.180000000000007, 1231.109999999999900, 83.260000000000005, 765.309999999999945, 118.040000000000006\npercent_share_gross_value_added_of_tourism : 0.90000000000000002, 2.22999999999999998, 6.49000000000000021, 3.33000000000000007, 10.10999999999999943\ntotal_full_time_employment_of_tourism : 11573.76000000000022, 2160.76000000000022, 5212.53999999999996, 816.33000000000004, 12727.17000000000007\npercent_share_full_time_employment_of_tourism : 2.2799999999999998, 2.3100000000000001, 9.1300000000000008, 2.2999999999999998, 6.0999999999999996\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\n*/\n\n/*\nColumn name, Column discription, Example values\nmio_chf_gross_value_added_of_tourism, Amount in million CHF of Gross Value that was added by tourism, None\npercent_share_gross_value_added_of_tourism, Percentage share of Gross Value that was added by tourism, None\ntotal_full_time_employment_of_tourism, Full time employment in Tourism, None\npercent_share_full_time_employment_of_tourism, Percentage share of full time employment in tourism, None\n*/\n\n\n\n### Question\nHow much did each canton earn from tourism in 2019?\n### SQL query\nSELECT S.name as canton,\nT.mio_chf_gross_value_added_of_tourism as mio_chf_gross_value_added_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY mio_chf_gross_value_added_of_tourism_2019 DESC;\n\n\n### Question\nWhich canton has the most employees in the tourism sector in 2019?\n### SQL query\n",
    "process_time": 12.377521662041545,
    "num_tokens": 1294,
    "hardness": "unknown",
    "scores": [
      0.3826194107532501
    ],
    "lang": "en"
  },
  {
    "i": 8,
    "question": "What canton got the most money from tourism in 2016?",
    "query": "SELECT S.name AS canton\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2016\nORDER BY T.mio_chf_gross_value_added_of_tourism DESC LIMIT 1;\n",
    "db_id": "tourism_economy_by_canton",
    "generated_query": "SELECT\n    S.name AS canton,\n    T.mio_chf_gross_value_added_of_tourism\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2016\nORDER BY T.mio_chf_gross_value_added_of_tourism DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "How much did each canton earn from tourism in 2019?",
        "query": "SELECT S.name as canton,\nT.mio_chf_gross_value_added_of_tourism as mio_chf_gross_value_added_of_tourism_2019\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2019\nORDER BY mio_chf_gross_value_added_of_tourism_2019 DESC;\n",
        "score": 0.30269747972488403
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.tourism_economy_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tmio_chf_gross_value_added_of_tourism NUMERIC, \n\tpercent_share_gross_value_added_of_tourism NUMERIC, \n\ttotal_full_time_employment_of_tourism NUMERIC, \n\tpercent_share_full_time_employment_of_tourism NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT tourism_economy_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT tourism_economy_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in tourism_economy_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nmio_chf_gross_value_added_of_tourism : 98.180000000000007, 1231.109999999999900, 83.260000000000005, 765.309999999999945, 118.040000000000006\npercent_share_gross_value_added_of_tourism : 0.90000000000000002, 2.22999999999999998, 6.49000000000000021, 3.33000000000000007, 10.10999999999999943\ntotal_full_time_employment_of_tourism : 11573.76000000000022, 2160.76000000000022, 5212.53999999999996, 816.33000000000004, 12727.17000000000007\npercent_share_full_time_employment_of_tourism : 2.2799999999999998, 2.3100000000000001, 9.1300000000000008, 2.2999999999999998, 6.0999999999999996\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\n*/\n\n/*\nColumn name, Column discription, Example values\nmio_chf_gross_value_added_of_tourism, Amount in million CHF of Gross Value that was added by tourism, None\npercent_share_gross_value_added_of_tourism, Percentage share of Gross Value that was added by tourism, None\ntotal_full_time_employment_of_tourism, Full time employment in Tourism, None\npercent_share_full_time_employment_of_tourism, Percentage share of full time employment in tourism, None\n*/\n\n\n\n### Question\nWhat canton lost the highest share of revenue from tourism between 2016 and 2019, and what percentage did it lose?\n### SQL query\nSELECT\n    S.name AS canton,\n    SUM(CASE WHEN T.year = 2019 THEN T.percent_share_gross_value_added_of_tourism ELSE 0 END) -\n    SUM(CASE WHEN T.year = 2016 THEN T.percent_share_gross_value_added_of_tourism ELSE 0 END) AS diff_percentage_gross_value_added_of_tourism_2019_2016\nFROM tourism_economy_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year IN (2016, 2019)\nGROUP BY S.name\nORDER BY diff_percentage_gross_value_added_of_tourism_2019_2016 ASC\nLIMIT 1;\n\n\n### Question\nWhat canton got the most money from tourism in 2016?\n### SQL query\n",
    "process_time": 11.22473128605634,
    "num_tokens": 1368,
    "hardness": "unknown",
    "scores": [
      0.30269747972488403
    ],
    "lang": "en"
  },
  {
    "i": 9,
    "question": "What kind of animal farms existed in Kanton Uri in 2012? Give the number of each farm type.",
    "query": "SELECT beef_cattle_and_cows_farm, horse_and_other_equine_farm,\n  sheep_farm, goat_farm, pig_farms, poultry_farm, farms_with_other_animals\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name LIKE '%Uri%'\n    AND S.canton = 'TRUE'\n    AND T.year = 2012\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT beef_cattle_and_cows_farm, horse_and_other_equine_farm, sheep_farm, goat_farm, pig_farms, poultry_farm, farms_with_other_animals\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name LIKE '%Uri%'\n    AND S.canton = 'TRUE'\n    AND T.year = 2012\n    AND T.farmholding_system = 'Farmholding system - total';",
    "meta_data": [
      {
        "question": "What farm animals were bred in the canton of Bern in 2020?",
        "query": "SELECT livestock_beef_cattle_and_cows, livestock_sheep, livestock_goats, livestock_pigs, livestock_poultry, livestock_other_animals\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.year = 2020\n    AND T.farmholding_system = 'Farmholding system - total';\n",
        "score": 0.550308108329773
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 2007, 2003, 2022\nfarmholdings : 3492, 4941, 42754, 2760, 7819\nemployees_total : 10108, 19336, 175083, 155304, 167462\nfull_time_employees_75_percent_or_more : 7567, 11307, 121476, 4937, 7421\npart_time_employees_50_75_percent : 4003, 224, 41182, 231, 1878\npart_time_employees_2_less_than_50_percent : 3607, 2988, 3297, 57835, 54674\nemployees_men : 150635, 8524, 7506, 7901, 8630\nemployees_women : 710, 3753, 3676, 5760, 4773\nemployees_women_manager_label : 12557, 2729, 2399, 19, 21\nemployees_swiss : 144596, 9057, 9081, 1114, 11709\nemployees_foreign_nationals : 1248, 530, 13593, 1661, 17032\nfamily_employees : 10683, 103861, 13769, 853, 157683\nbeef_cattle_and_cows_farm : 2649, 33091, 2749, 36738, 2218\nhorse_and_other_equine_farm : 12674, 847, 125, 1654, 707\nsheep_farm : 61, 13555, 1422, 12948, 1503\ngoat_farm : 6795, 61, 7021, 8087, 1224\npig_farms : 9126, 16755, 198, 125, 42\npoultry_farm : 23560, 1853, 13131, 17751, 164\nfarms_with_other_animals : 57, 8926, 847, 8748, 3314\nutilised_agricultural_area_in_hectares : 161020.302100000000792, 75752.029999999998836, 66256.929999999993015, 7066.399999999999636, 74620.139999999999418\narable_land_in_hectares : 10364.478499999999257852, 266623.609999999986030161, 26172.950000000000727596, 26784.279999999998835847, 28240.809499999999388820\ngrassland_in_hectares : 98902.110000000000582, 642097.839999999967404, 578420.170099999988452, 3588.710000000000036, 103911.070000000006985\npermanent_crops_in_hectares : 1506.630000000000109139, 1399.039999999999963620, 21984.939999999998690328, 1417.619999999999890861, 1210.859999999999899956\nother_utilised_agricultural_area_in_hectares : 10717.280000000000654836, 10233.920000000000072760, 12453.010000000000218279, 2047.612699999999904321, 1345.609999999999899956\nlivestock_beef_cattle_and_cows : 1570178, 1554319, 1591233, 92497, 82139\nlivestock_horses_and_other_equines : 7606, 6429, 7506, 62095, 5994\nlivestock_sheep : 342419, 2218, 91874, 355893, 383734\nlivestock_goats : 82045, 80552, 2109, 56894, 54280\nlivestock_pigs : 37845, 38221, 1348306, 36792, 1826\nlivestock_poultry : 432001, 7670222, 11300009, 7023924, 70223\nlivestock_other_animals : 6907, 127736, 102007, 12312, 8249\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat farm animals were bred in the canton of Bern in 2020?\n### SQL query\nSELECT livestock_beef_cattle_and_cows, livestock_sheep, livestock_goats, livestock_pigs, livestock_poultry, livestock_other_animals\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.year = 2020\n    AND T.farmholding_system = 'Farmholding system - total';\n\n\n### Question\nWhat kind of animal farms existed in Kanton Uri in 2012? Give the number of each farm type.\n### SQL query\n",
    "process_time": 15.881987466942519,
    "num_tokens": 2875,
    "hardness": "hard",
    "scores": [
      0.550308108329773
    ],
    "lang": "en"
  },
  {
    "i": 10,
    "question": "How many farms were there in all of Switzerland between 2012 and 2018?",
    "query": "SELECT year, farmholdings\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n    AND S.country = 'TRUE'\n    AND year BETWEEN 2012 AND 2018\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT SUM(farmholdings) AS total_farms\nFROM employees_farmholdings_agricultural_area_livestock_per_canton\nWHERE year BETWEEN 2012 AND 2018;",
    "meta_data": [
      {
        "question": "How was the split between Swiss population and foreign nationals on Swiss farms in 2022?",
        "query": "SELECT ROUND(100 * employees_swiss / employees_total, 2) AS percentage_of_swiss_employees,\n  ROUND(100 * employees_foreign_nationals / employees_total, 2) AS percentage_foreign_nationals_employees\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2022\n    AND T.farmholding_system = 'Farmholding system - total';\n",
        "score": 0.5482684373855591
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 2007, 2003, 2022\nfarmholdings : 3492, 4941, 42754, 2760, 7819\nemployees_total : 10108, 19336, 175083, 155304, 167462\nfull_time_employees_75_percent_or_more : 7567, 11307, 121476, 4937, 7421\npart_time_employees_50_75_percent : 4003, 224, 41182, 231, 1878\npart_time_employees_2_less_than_50_percent : 3607, 2988, 3297, 57835, 54674\nemployees_men : 150635, 8524, 7506, 7901, 8630\nemployees_women : 710, 3753, 3676, 5760, 4773\nemployees_women_manager_label : 12557, 2729, 2399, 19, 21\nemployees_swiss : 144596, 9057, 9081, 1114, 11709\nemployees_foreign_nationals : 1248, 530, 13593, 1661, 17032\nfamily_employees : 10683, 103861, 13769, 853, 157683\nbeef_cattle_and_cows_farm : 2649, 33091, 2749, 36738, 2218\nhorse_and_other_equine_farm : 12674, 847, 125, 1654, 707\nsheep_farm : 61, 13555, 1422, 12948, 1503\ngoat_farm : 6795, 61, 7021, 8087, 1224\npig_farms : 9126, 16755, 198, 125, 42\npoultry_farm : 23560, 1853, 13131, 17751, 164\nfarms_with_other_animals : 57, 8926, 847, 8748, 3314\nutilised_agricultural_area_in_hectares : 161020.302100000000792, 75752.029999999998836, 66256.929999999993015, 7066.399999999999636, 74620.139999999999418\narable_land_in_hectares : 10364.478499999999257852, 266623.609999999986030161, 26172.950000000000727596, 26784.279999999998835847, 28240.809499999999388820\ngrassland_in_hectares : 98902.110000000000582, 642097.839999999967404, 578420.170099999988452, 3588.710000000000036, 103911.070000000006985\npermanent_crops_in_hectares : 1506.630000000000109139, 1399.039999999999963620, 21984.939999999998690328, 1417.619999999999890861, 1210.859999999999899956\nother_utilised_agricultural_area_in_hectares : 10717.280000000000654836, 10233.920000000000072760, 12453.010000000000218279, 2047.612699999999904321, 1345.609999999999899956\nlivestock_beef_cattle_and_cows : 1570178, 1554319, 1591233, 92497, 82139\nlivestock_horses_and_other_equines : 7606, 6429, 7506, 62095, 5994\nlivestock_sheep : 342419, 2218, 91874, 355893, 383734\nlivestock_goats : 82045, 80552, 2109, 56894, 54280\nlivestock_pigs : 37845, 38221, 1348306, 36792, 1826\nlivestock_poultry : 432001, 7670222, 11300009, 7023924, 70223\nlivestock_other_animals : 6907, 127736, 102007, 12312, 8249\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow was the split between Swiss population and foreign nationals on Swiss farms in 2022?\n### SQL query\nSELECT ROUND(100 * employees_swiss / employees_total, 2) AS percentage_of_swiss_employees,\n  ROUND(100 * employees_foreign_nationals / employees_total, 2) AS percentage_foreign_nationals_employees\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2022\n    AND T.farmholding_system = 'Farmholding system - total';\n\n\n### Question\nHow many farms were there in all of Switzerland between 2012 and 2018?\n### SQL query\n",
    "process_time": 4.743361501954496,
    "num_tokens": 2879,
    "hardness": "extra",
    "scores": [
      0.5482684373855591
    ],
    "lang": "en"
  },
  {
    "i": 11,
    "question": "How was the farmland used in organic farming in 2017? Provide land usage in percentage of the farming area.",
    "query": "SELECT ROUND(100 * T.arable_land_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_arable_land,\n  ROUND(100 * T.grassland_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_grassland,\n  ROUND(100 * T.permanent_crops_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_permanent_crops,\n  ROUND(100 * T.other_utilised_agricultural_area_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS precentage_other_usage\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2015\n    AND T.farmholding_system = 'Organic farming';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT\n   ROUND(100 * T.arable_land_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_arable_land,\n   ROUND(100 * T.grassland_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_grassland,\n   ROUND(100 * T.permanent_crops_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_permanent_crops,\n   ROUND(100 * T.other_utilised_agricultural_area_in_hectares / T.utilised_agricultural_area_in_hectares, 2) AS percentage_other_utilised_area\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year = 2017\n    AND T.farmholding_system = 'Organic farming'\n    AND S.country = 'TRUE';",
    "meta_data": [
      {
        "question": "Which 5 cantons had in 2022 the biggest precentage of their farm area used by organic farming? Order by the percentage of area used for organic farming.",
        "query": "SELECT S.name,\n   ROUND(100 * SUM(CASE WHEN T.farmholding_system = 'Organic farming'\n       THEN T.utilised_agricultural_area_in_hectares ELSE 0 END) /\n   NULLIF(SUM(CASE WHEN T.farmholding_system = 'Farmholding system - total'\n       THEN T.utilised_agricultural_area_in_hectares ELSE 0 END), 0), 2) AS percentage_of_organically_used_farmarea\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year = 2022\n    AND S.canton = 'TRUE'\n    AND T.farmholding_system IN ('Organic farming', 'Farmholding system - total')\nGROUP BY S.name\nORDER BY percentage_of_organically_used_farmarea DESC LIMIT 5;\n",
        "score": 0.5936232805252075
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 2007, 2003, 2022\nfarmholdings : 3492, 4941, 42754, 2760, 7819\nemployees_total : 10108, 19336, 175083, 155304, 167462\nfull_time_employees_75_percent_or_more : 7567, 11307, 121476, 4937, 7421\npart_time_employees_50_75_percent : 4003, 224, 41182, 231, 1878\npart_time_employees_2_less_than_50_percent : 3607, 2988, 3297, 57835, 54674\nemployees_men : 150635, 8524, 7506, 7901, 8630\nemployees_women : 710, 3753, 3676, 5760, 4773\nemployees_women_manager_label : 12557, 2729, 2399, 19, 21\nemployees_swiss : 144596, 9057, 9081, 1114, 11709\nemployees_foreign_nationals : 1248, 530, 13593, 1661, 17032\nfamily_employees : 10683, 103861, 13769, 853, 157683\nbeef_cattle_and_cows_farm : 2649, 33091, 2749, 36738, 2218\nhorse_and_other_equine_farm : 12674, 847, 125, 1654, 707\nsheep_farm : 61, 13555, 1422, 12948, 1503\ngoat_farm : 6795, 61, 7021, 8087, 1224\npig_farms : 9126, 16755, 198, 125, 42\npoultry_farm : 23560, 1853, 13131, 17751, 164\nfarms_with_other_animals : 57, 8926, 847, 8748, 3314\nutilised_agricultural_area_in_hectares : 161020.302100000000792, 75752.029999999998836, 66256.929999999993015, 7066.399999999999636, 74620.139999999999418\narable_land_in_hectares : 10364.478499999999257852, 266623.609999999986030161, 26172.950000000000727596, 26784.279999999998835847, 28240.809499999999388820\ngrassland_in_hectares : 98902.110000000000582, 642097.839999999967404, 578420.170099999988452, 3588.710000000000036, 103911.070000000006985\npermanent_crops_in_hectares : 1506.630000000000109139, 1399.039999999999963620, 21984.939999999998690328, 1417.619999999999890861, 1210.859999999999899956\nother_utilised_agricultural_area_in_hectares : 10717.280000000000654836, 10233.920000000000072760, 12453.010000000000218279, 2047.612699999999904321, 1345.609999999999899956\nlivestock_beef_cattle_and_cows : 1570178, 1554319, 1591233, 92497, 82139\nlivestock_horses_and_other_equines : 7606, 6429, 7506, 62095, 5994\nlivestock_sheep : 342419, 2218, 91874, 355893, 383734\nlivestock_goats : 82045, 80552, 2109, 56894, 54280\nlivestock_pigs : 37845, 38221, 1348306, 36792, 1826\nlivestock_poultry : 432001, 7670222, 11300009, 7023924, 70223\nlivestock_other_animals : 6907, 127736, 102007, 12312, 8249\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat was the precentage of family employees in organic and conventional farming in 2022?\n### SQL query\nSELECT\n   ROUND(100 * SUM(CASE WHEN T.farmholding_system = 'Organic farming'\n       THEN T.family_employees ELSE 0 END) /\n   SUM(CASE WHEN T.farmholding_system = 'Organic farming'\n       THEN T.employees_total ELSE 0 END), 2) AS percentage_family_employees_organic_farming,\n   ROUND(100 * SUM(CASE WHEN T.farmholding_system = 'Conventional farming'\n       THEN T.family_employees ELSE 0 END) /\n   SUM(CASE WHEN T.farmholding_system = 'Conventional farming'\n       THEN T.employees_total ELSE 0 END), 2) AS percentage_family_employees_conventional_farming\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year = 2022\n    AND S.country = 'TRUE'\n    AND T.farmholding_system IN ('Organic farming', 'Conventional farming');\n\n\n### Question\nHow was the farmland used in organic farming in 2017? Provide land usage in percentage of the farming area.\n### SQL query\n",
    "process_time": 26.251101663103327,
    "num_tokens": 2986,
    "hardness": "unknown",
    "scores": [
      0.5936232805252075
    ],
    "lang": "en"
  },
  {
    "i": 12,
    "question": "How was the split between men and women in farm employment in canton Uri in 2015?",
    "query": "SELECT ROUND(100 * employees_women / employees_total, 2) AS percentage_of_female_employees,\n  ROUND(100 * employees_men / employees_total, 2) AS percentage_of_male_employees\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2015\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT T.employees_men, T.employees_women\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Uri'\n    AND year = 2015\n    AND T.farmholding_system = 'Farmholding system - total';",
    "meta_data": [
      {
        "question": "How was the split between Swiss population and foreign nationals on Swiss farms in 2022?",
        "query": "SELECT ROUND(100 * employees_swiss / employees_total, 2) AS percentage_of_swiss_employees,\n  ROUND(100 * employees_foreign_nationals / employees_total, 2) AS percentage_foreign_nationals_employees\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND year = 2022\n    AND T.farmholding_system = 'Farmholding system - total';\n",
        "score": 0.7952029705047607
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 2007, 2003, 2022\nfarmholdings : 3492, 4941, 42754, 2760, 7819\nemployees_total : 10108, 19336, 175083, 155304, 167462\nfull_time_employees_75_percent_or_more : 7567, 11307, 121476, 4937, 7421\npart_time_employees_50_75_percent : 4003, 224, 41182, 231, 1878\npart_time_employees_2_less_than_50_percent : 3607, 2988, 3297, 57835, 54674\nemployees_men : 150635, 8524, 7506, 7901, 8630\nemployees_women : 710, 3753, 3676, 5760, 4773\nemployees_women_manager_label : 12557, 2729, 2399, 19, 21\nemployees_swiss : 144596, 9057, 9081, 1114, 11709\nemployees_foreign_nationals : 1248, 530, 13593, 1661, 17032\nfamily_employees : 10683, 103861, 13769, 853, 157683\nbeef_cattle_and_cows_farm : 2649, 33091, 2749, 36738, 2218\nhorse_and_other_equine_farm : 12674, 847, 125, 1654, 707\nsheep_farm : 61, 13555, 1422, 12948, 1503\ngoat_farm : 6795, 61, 7021, 8087, 1224\npig_farms : 9126, 16755, 198, 125, 42\npoultry_farm : 23560, 1853, 13131, 17751, 164\nfarms_with_other_animals : 57, 8926, 847, 8748, 3314\nutilised_agricultural_area_in_hectares : 161020.302100000000792, 75752.029999999998836, 66256.929999999993015, 7066.399999999999636, 74620.139999999999418\narable_land_in_hectares : 10364.478499999999257852, 266623.609999999986030161, 26172.950000000000727596, 26784.279999999998835847, 28240.809499999999388820\ngrassland_in_hectares : 98902.110000000000582, 642097.839999999967404, 578420.170099999988452, 3588.710000000000036, 103911.070000000006985\npermanent_crops_in_hectares : 1506.630000000000109139, 1399.039999999999963620, 21984.939999999998690328, 1417.619999999999890861, 1210.859999999999899956\nother_utilised_agricultural_area_in_hectares : 10717.280000000000654836, 10233.920000000000072760, 12453.010000000000218279, 2047.612699999999904321, 1345.609999999999899956\nlivestock_beef_cattle_and_cows : 1570178, 1554319, 1591233, 92497, 82139\nlivestock_horses_and_other_equines : 7606, 6429, 7506, 62095, 5994\nlivestock_sheep : 342419, 2218, 91874, 355893, 383734\nlivestock_goats : 82045, 80552, 2109, 56894, 54280\nlivestock_pigs : 37845, 38221, 1348306, 36792, 1826\nlivestock_poultry : 432001, 7670222, 11300009, 7023924, 70223\nlivestock_other_animals : 6907, 127736, 102007, 12312, 8249\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich five cantons had in 2022 the highest percentage of women farmers in mangement position? Also provide the precentage of women who had a manager position.\n### SQL query\nSELECT S.name as canton,\n  ROUND(100 * SUM(T.employees_women_manager_label) / SUM(T.employees_women), 2) AS percentage_women_managers\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND year = 2022\n    AND T.farmholding_system = 'Farmholding system - total'\nGROUP BY S.name\nORDER BY percentage_women_managers DESC\nLIMIT 5;\n\n\n### Question\nHow was the split between men and women in farm employment in canton Uri in 2015?\n### SQL query\n",
    "process_time": 9.179848277941346,
    "num_tokens": 2905,
    "hardness": "unknown",
    "scores": [
      0.7952029705047607
    ],
    "lang": "en"
  },
  {
    "i": 13,
    "question": "What was the total agricultural surface area in the canton of Geneva in 2000?",
    "query": "SELECT utilised_agricultural_area_in_hectares as utilised_agricultural_area_in_hectares_canton_geneva\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Canton Geneva'\n    AND S.canton = 'TRUE'\n    AND year = 2000\n    AND T.farmholding_system = 'Farmholding system - total';\n",
    "db_id": "employees_farmholdings_agricultural_area_livestock_per_canton",
    "generated_query": "SELECT SUM(utilised_agricultural_area_in_hectares) AS total_agricultural_surface_area\nFROM employees_farmholdings_agricultural_area_livestock_per_canton\nJOIN spatial_unit ON employees_farmholdings_agricultural_area_livestock_per_canton.spatialunit_uid = spatial_unit.spatialunit_uid\nWHERE spatial_unit.name = 'Geneva'\n    AND year = 2000;",
    "meta_data": [
      {
        "question": "What farm animals were bred in the canton of Bern in 2020?",
        "query": "SELECT livestock_beef_cattle_and_cows, livestock_sheep, livestock_goats, livestock_pigs, livestock_poultry, livestock_other_animals\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.year = 2020\n    AND T.farmholding_system = 'Farmholding system - total';\n",
        "score": 0.7364626526832581
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.employees_farmholdings_agricultural_area_livestock_per_canton (\n\tuid SERIAL NOT NULL, \n\tfarmholding_system TEXT, \n\tyear INTEGER, \n\tfarmholdings NUMERIC, \n\temployees_total NUMERIC, \n\tfull_time_employees_75_percent_or_more NUMERIC, \n\tpart_time_employees_50_75_percent NUMERIC, \n\tpart_time_employees_2_less_than_50_percent NUMERIC, \n\temployees_men NUMERIC, \n\temployees_women NUMERIC, \n\temployees_women_manager_label NUMERIC, \n\temployees_swiss NUMERIC, \n\temployees_foreign_nationals NUMERIC, \n\tfamily_employees NUMERIC, \n\tbeef_cattle_and_cows_farm NUMERIC, \n\thorse_and_other_equine_farm NUMERIC, \n\tsheep_farm NUMERIC, \n\tgoat_farm NUMERIC, \n\tpig_farms NUMERIC, \n\tpoultry_farm NUMERIC, \n\tfarms_with_other_animals NUMERIC, \n\tutilised_agricultural_area_in_hectares NUMERIC, \n\tarable_land_in_hectares NUMERIC, \n\tgrassland_in_hectares NUMERIC, \n\tpermanent_crops_in_hectares NUMERIC, \n\tother_utilised_agricultural_area_in_hectares NUMERIC, \n\tlivestock_beef_cattle_and_cows NUMERIC, \n\tlivestock_horses_and_other_equines NUMERIC, \n\tlivestock_sheep NUMERIC, \n\tlivestock_goats NUMERIC, \n\tlivestock_pigs NUMERIC, \n\tlivestock_poultry NUMERIC, \n\tlivestock_other_animals NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT employees_farmholdings_agricultural_area_livestock_per_can_pkey PRIMARY KEY (uid), \n\tCONSTRAINT employees_farmholdings_agricultural_area_l_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in employees_farmholdings_agricultural_area_livestock_per_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 2007, 2003, 2022\nfarmholdings : 3492, 4941, 42754, 2760, 7819\nemployees_total : 10108, 19336, 175083, 155304, 167462\nfull_time_employees_75_percent_or_more : 7567, 11307, 121476, 4937, 7421\npart_time_employees_50_75_percent : 4003, 224, 41182, 231, 1878\npart_time_employees_2_less_than_50_percent : 3607, 2988, 3297, 57835, 54674\nemployees_men : 150635, 8524, 7506, 7901, 8630\nemployees_women : 710, 3753, 3676, 5760, 4773\nemployees_women_manager_label : 12557, 2729, 2399, 19, 21\nemployees_swiss : 144596, 9057, 9081, 1114, 11709\nemployees_foreign_nationals : 1248, 530, 13593, 1661, 17032\nfamily_employees : 10683, 103861, 13769, 853, 157683\nbeef_cattle_and_cows_farm : 2649, 33091, 2749, 36738, 2218\nhorse_and_other_equine_farm : 12674, 847, 125, 1654, 707\nsheep_farm : 61, 13555, 1422, 12948, 1503\ngoat_farm : 6795, 61, 7021, 8087, 1224\npig_farms : 9126, 16755, 198, 125, 42\npoultry_farm : 23560, 1853, 13131, 17751, 164\nfarms_with_other_animals : 57, 8926, 847, 8748, 3314\nutilised_agricultural_area_in_hectares : 161020.302100000000792, 75752.029999999998836, 66256.929999999993015, 7066.399999999999636, 74620.139999999999418\narable_land_in_hectares : 10364.478499999999257852, 266623.609999999986030161, 26172.950000000000727596, 26784.279999999998835847, 28240.809499999999388820\ngrassland_in_hectares : 98902.110000000000582, 642097.839999999967404, 578420.170099999988452, 3588.710000000000036, 103911.070000000006985\npermanent_crops_in_hectares : 1506.630000000000109139, 1399.039999999999963620, 21984.939999999998690328, 1417.619999999999890861, 1210.859999999999899956\nother_utilised_agricultural_area_in_hectares : 10717.280000000000654836, 10233.920000000000072760, 12453.010000000000218279, 2047.612699999999904321, 1345.609999999999899956\nlivestock_beef_cattle_and_cows : 1570178, 1554319, 1591233, 92497, 82139\nlivestock_horses_and_other_equines : 7606, 6429, 7506, 62095, 5994\nlivestock_sheep : 342419, 2218, 91874, 355893, 383734\nlivestock_goats : 82045, 80552, 2109, 56894, 54280\nlivestock_pigs : 37845, 38221, 1348306, 36792, 1826\nlivestock_poultry : 432001, 7670222, 11300009, 7023924, 70223\nlivestock_other_animals : 6907, 127736, 102007, 12312, 8249\n*/\n\n/*\nColumn name, Column discription, Example values\nfarmholding_system, None, Farmholding system - total,Organic farming,Conventional farming\nfarmholdings, None, 48344,48864,49363\nemployees_total, None, 149578,150231,149521\nfull_time_employees_75_percent_or_more, None, 66349,66453,66333\npart_time_employees_50_75_percent, None, 30083,30038,29920\npart_time_employees_2_less_than_50_percent, None, 53146,53740,53268\nemployees_men, None, 94706,95486,95252\nemployees_women, None, 54872,54745,54269\nemployees_women_manager_label, None, 3472,3362,3233\nemployees_swiss, None, 131072,131955,131581\nemployees_foreign_nationals, None, 18506,18276,17940\nfamily_employees, None, 112047,113317,113847\nbeef_cattle_and_cows_farm, None, 32581,33091,33662\nhorse_and_other_equine_farm, None, 11123,11196,11227\nsheep_farm, None, 7969,7977,8016\ngoat_farm, None, 6559,6592,6355\npig_farms, None, 5467,5561,5600\npoultry_farm, None, 14876,14434,13485\nfarms_with_other_animals, None, 6138,6101,6000\nutilised_agricultural_area_in_hectares, None, 1042013.785,1042053.004,1044033.706\narable_land_in_hectares, None, 276114.0758,276496.4816,274448.9291\ngrassland_in_hectares, None, 726091.9808,725854.0912,730039.4586\npermanent_crops_in_hectares, None, 24040.2951,24285.0786,24061.4945\nother_utilised_agricultural_area_in_hectares, None, 15767.4333,15417.3522,15483.8239\nlivestock_beef_cattle_and_cows, None, 1525270,1513701,1515123\nlivestock_horses_and_other_equines, None, 80950,80096,80072\nlivestock_sheep, None, 355893,349112,343528\nlivestock_goats, None, 82313,82045,79562\nlivestock_pigs, None, 1372772,1366359,1348306\nlivestock_poultry, None, 13219724,12676402,12541044\nlivestock_other_animals, None, 126789,137616,131876\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich 5 cantons had in 2022 the biggest precentage of their farm area used by organic farming? Order by the percentage of area used for organic farming.\n### SQL query\nSELECT S.name,\n   ROUND(100 * SUM(CASE WHEN T.farmholding_system = 'Organic farming'\n       THEN T.utilised_agricultural_area_in_hectares ELSE 0 END) /\n   NULLIF(SUM(CASE WHEN T.farmholding_system = 'Farmholding system - total'\n       THEN T.utilised_agricultural_area_in_hectares ELSE 0 END), 0), 2) AS percentage_of_organically_used_farmarea\nFROM employees_farmholdings_agricultural_area_livestock_per_canton as T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year = 2022\n    AND S.canton = 'TRUE'\n    AND T.farmholding_system IN ('Organic farming', 'Farmholding system - total')\nGROUP BY S.name\nORDER BY percentage_of_organically_used_farmarea DESC LIMIT 5;\n\n\n### Question\nWhat was the total agricultural surface area in the canton of Geneva in 2000?\n### SQL query\n",
    "process_time": 11.614187276922166,
    "num_tokens": 2973,
    "hardness": "unknown",
    "scores": [
      0.7364626526832581
    ],
    "lang": "en"
  },
  {
    "i": 14,
    "question": "What was the population change due to natural factors among the residents of Canton Vaud between 2015 and 2020?",
    "query": "SELECT year, births - deaths\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Vaud%'\n    AND T.year >= 2015\n    AND T.year >= 2020\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT population_change\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Vaud'\n    AND T.year >= 2015\n    AND T.year <= 2020\n    AND T.citizenship_category = 'Citizenship (category) - total';",
    "meta_data": [
      {
        "question": "Which cantons experienced a population decline in 2017, and by how much?",
        "query": "SELECT S.name, population_change\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.population_change < 0\n    AND T.year = 2017\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
        "score": 0.6691077947616577
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 1986, 1995, 2007, 1992, 2003\ntotal_population : 1187609, 330757, 1373068, 933191, 1120815\nbirths : 9100, 12442, 9155, 11675, 2197\ndeaths : 9994, 708, 10283, 660, 61228\nimmigration : 4695, 83927, 25299, 15767, 6711\nin_migration_from_another_canton : 15386, 104808, 13555, 21618, 122438\nemigration : 28489, 18924, 69666, 79726, 5969\nout_migration_to_another_canton : 13501, 104808, 13555, 14237, 122438\nnet_migration : 224, 45529, -1426, -4739, 7231\nacquisition_of_swiss_citizenship : 11831, -7756, 8532, -36012, 14416\nstatistical_adjustment : 5084, -34, -223, -6567, -5351\npopulation_change : 50618, 11457, 50295, 38579, 50954\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich cantons experienced a population decline in 2017, and by how much?\n### SQL query\nSELECT S.name, population_change\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.population_change < 0\n    AND T.year = 2017\n    AND T.citizenship_category = 'Citizenship (category) - total';\n\n\n### Question\nWhat was the population change due to natural factors among the residents of Canton Vaud between 2015 and 2020?\n### SQL query\n",
    "process_time": 6.917496717069298,
    "num_tokens": 1515,
    "hardness": "hard",
    "scores": [
      0.6691077947616577
    ],
    "lang": "en"
  },
  {
    "i": 15,
    "question": "Which canton has the highest number of residents who have moved from other cantons in 2016?",
    "query": "SELECT S.name, T.in_migration_from_another_canton\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2016\n    AND T.citizenship_category = 'Citizenship (category) - total'\nORDER BY T.in_migration_from_another_canton DESC\nLIMIT 1;\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT S.name, T.in_migration_from_another_canton\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2016\nORDER BY T.in_migration_from_another_canton DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Which cantons experienced a population decline in 2017, and by how much?",
        "query": "SELECT S.name, population_change\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.population_change < 0\n    AND T.year = 2017\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
        "score": 0.3653758764266968
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 1986, 1995, 2007, 1992, 2003\ntotal_population : 1187609, 330757, 1373068, 933191, 1120815\nbirths : 9100, 12442, 9155, 11675, 2197\ndeaths : 9994, 708, 10283, 660, 61228\nimmigration : 4695, 83927, 25299, 15767, 6711\nin_migration_from_another_canton : 15386, 104808, 13555, 21618, 122438\nemigration : 28489, 18924, 69666, 79726, 5969\nout_migration_to_another_canton : 13501, 104808, 13555, 14237, 122438\nnet_migration : 224, 45529, -1426, -4739, 7231\nacquisition_of_swiss_citizenship : 11831, -7756, 8532, -36012, 14416\nstatistical_adjustment : 5084, -34, -223, -6567, -5351\npopulation_change : 50618, 11457, 50295, 38579, 50954\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich cantons experienced a population decline in 2017, and by how much?\n### SQL query\nSELECT S.name, population_change\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.population_change < 0\n    AND T.year = 2017\n    AND T.citizenship_category = 'Citizenship (category) - total';\n\n\n### Question\nWhich canton has the highest number of residents who have moved from other cantons in 2016?\n### SQL query\n",
    "process_time": 11.559285613941029,
    "num_tokens": 1511,
    "hardness": "extra",
    "scores": [
      0.3653758764266968
    ],
    "lang": "en"
  },
  {
    "i": 16,
    "question": "How many residents were in Switzerland in 2018?",
    "query": "SELECT total_population as total_population_of_switzerland_in_2018\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n    AND S.country = 'TRUE'\n    AND T.year = 2018\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT total_population\nFROM demographic_balance_by_canton\nWHERE year = 2018\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Which five cantons had the highest number of Swiss citizenship acquisitions in 2017 relative to their population?",
        "query": "SELECT S.name, acquisition_of_swiss_citizenship / total_population as relative_acquisition\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2017\n    AND T.citizenship_category = 'Switzerland'\nORDER BY relative_acquisition DESC\nLIMIT 5;\n",
        "score": 0.4964466691017151
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 1986, 1995, 2007, 1992, 2003\ntotal_population : 1187609, 330757, 1373068, 933191, 1120815\nbirths : 9100, 12442, 9155, 11675, 2197\ndeaths : 9994, 708, 10283, 660, 61228\nimmigration : 4695, 83927, 25299, 15767, 6711\nin_migration_from_another_canton : 15386, 104808, 13555, 21618, 122438\nemigration : 28489, 18924, 69666, 79726, 5969\nout_migration_to_another_canton : 13501, 104808, 13555, 14237, 122438\nnet_migration : 224, 45529, -1426, -4739, 7231\nacquisition_of_swiss_citizenship : 11831, -7756, 8532, -36012, 14416\nstatistical_adjustment : 5084, -34, -223, -6567, -5351\npopulation_change : 50618, 11457, 50295, 38579, 50954\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich five cantons had the highest number of Swiss citizenship acquisitions in 2017 relative to their population?\n### SQL query\nSELECT S.name, acquisition_of_swiss_citizenship / total_population as relative_acquisition\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.year = 2017\n    AND T.citizenship_category = 'Switzerland'\nORDER BY relative_acquisition DESC\nLIMIT 5;\n\n\n### Question\nHow many residents were in Switzerland in 2018?\n### SQL query\n",
    "process_time": 2.921251252060756,
    "num_tokens": 1514,
    "hardness": "unknown",
    "scores": [
      0.4964466691017151
    ],
    "lang": "en"
  },
  {
    "i": 17,
    "question": "What was the net migration of Switzerland from 2012 to 2022?",
    "query": "SELECT year, net_migration as net_migration_of_switzerland\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n    AND S.country = 'TRUE'\n    AND T.year >= 2012\n    AND T.year <= 2022\n    AND T.citizenship_category = 'Citizenship (category) - total';\n",
    "db_id": "demographic_balance_by_canton",
    "generated_query": "SELECT SUM(net_migration) as net_migration\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND S.name = 'Switzerland'\n    AND T.year >= 2012\n    AND T.year <= 2022;",
    "meta_data": [
      {
        "question": "In which year did Switzerland experience its highest birth rate?",
        "query": "SELECT T.year, T.births / T.total_population as birthrate\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND S.name = 'Switzerland'\n    AND T.citizenship_category = 'Citizenship (category) - total'\nGROUP BY T.year, T.births, T.total_population\nORDER BY birthrate DESC\nLIMIT 1;\n",
        "score": 0.7973395586013794
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.demographic_balance_by_canton (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tcitizenship_category TEXT, \n\ttotal_population NUMERIC, \n\tbirths NUMERIC, \n\tdeaths NUMERIC, \n\timmigration NUMERIC, \n\tin_migration_from_another_canton NUMERIC, \n\temigration NUMERIC, \n\tout_migration_to_another_canton NUMERIC, \n\tnet_migration NUMERIC, \n\tacquisition_of_swiss_citizenship NUMERIC, \n\tstatistical_adjustment NUMERIC, \n\tpopulation_change NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT demographic_balance_by_canton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT demographic_balance_by_canton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in demographic_balance_by_canton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 1986, 1995, 2007, 1992, 2003\ntotal_population : 1187609, 330757, 1373068, 933191, 1120815\nbirths : 9100, 12442, 9155, 11675, 2197\ndeaths : 9994, 708, 10283, 660, 61228\nimmigration : 4695, 83927, 25299, 15767, 6711\nin_migration_from_another_canton : 15386, 104808, 13555, 21618, 122438\nemigration : 28489, 18924, 69666, 79726, 5969\nout_migration_to_another_canton : 13501, 104808, 13555, 14237, 122438\nnet_migration : 224, 45529, -1426, -4739, 7231\nacquisition_of_swiss_citizenship : 11831, -7756, 8532, -36012, 14416\nstatistical_adjustment : 5084, -34, -223, -6567, -5351\npopulation_change : 50618, 11457, 50295, 38579, 50954\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_population, Total population recorded this year, 6335243,5421746,913497\nbirths, Number of live births recorded, 73747,61611,12136\ndeaths, Number of deaths recorded, 59763,56032,3731\nimmigration, Number of people becoming Swiss residents, 121420,28483,92937\nemigration, Number of Swiss residents leaving, 97743,27796,69947\nin_migration_from_another_canton, Number of people moving in from another canton, 134359,119608,14751\nout_migration_to_another_canton, Number of people moving to a different canton, 134359,119608,14751\nnet_migration, Difference between the number of arrivals and departures, 23677,687,22990\nacquisition_of_swiss_citizenship, Number of people acquiring swiss nationality, 0,14299,-14299\nstatistical_adjustment, Changes to the population size that cannot be clearly attributed to demographic movements, 0,574,-34\npopulation_change, Difference in the number of people compared to the previous year, 37661,20565,17096\ncitizenship_category, Citizenship category, Citizenship (category) - total,Foreign country,Switzerland\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn which year did Switzerland experience its highest birth rate?\n### SQL query\nSELECT T.year, T.births / T.total_population as birthrate\nFROM demographic_balance_by_canton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n    AND S.name = 'Switzerland'\n    AND T.citizenship_category = 'Citizenship (category) - total'\nGROUP BY T.year, T.births, T.total_population\nORDER BY birthrate DESC\nLIMIT 1;\n\n\n### Question\nWhat was the net migration of Switzerland from 2012 to 2022?\n### SQL query\n",
    "process_time": 9.928746916819364,
    "num_tokens": 1521,
    "hardness": "unknown",
    "scores": [
      0.7973395586013794
    ],
    "lang": "en"
  },
  {
    "i": 18,
    "question": "What greenhouse gas footprint had Switzerland in 2000 through consumption?",
    "query": "SELECT T.emissions_in_million_tons_co2_equivalent\nFROM greenhouse_gas_emissions_through_consumption as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Switzerland'\n  AND S.country = 'TRUE'\n  AND T.year = 2000;\n",
    "db_id": "greenhouse_gas_emissions_through_consumption",
    "generated_query": "SELECT emissions_in_million_tons_co2_equivalent\nFROM greenhouse_gas_emissions_through_consumption\nWHERE year = 2000;",
    "meta_data": [
      {
        "question": "What years did the greenhouse gas footprint of Switzerland decrease compared to the previous year and by how much? Order by magnitude of decrease",
        "query": "WITH EmissionsChange AS (\n    SELECT\n        T1.year AS current_year,\n        T1.emissions_in_million_tons_co2_equivalent AS emissions_current_year,\n        (T1.year - 1) AS previous_year,\n        T2.emissions_in_million_tons_co2_equivalent AS emissions_previous_year,\n        T1.emissions_in_million_tons_co2_equivalent - T2.emissions_in_million_tons_co2_equivalent\n          AS decrease_from_previous_year\n    FROM greenhouse_gas_emissions_through_consumption AS T1\n    JOIN greenhouse_gas_emissions_through_consumption AS T2 ON T1.year = T2.year + 1\n    WHERE T1.year > 2000\n)\nSELECT current_year, decrease_from_previous_year\nFROM EmissionsChange WHERE decrease_from_previous_year < 0\nORDER BY decrease_from_previous_year ASC;\n",
        "score": 0.43006354570388794
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.greenhouse_gas_emissions_through_consumption (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\temissions_in_million_tons_co2_equivalent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT greenhouse_gas_emissions_through_consumption_pkey PRIMARY KEY (uid), \n\tCONSTRAINT greenhouse_gas_emissions_through_consumpti_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in greenhouse_gas_emissions_through_consumption and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 2, 3, 21\nyear : 2019, 2016, 2007, 2003, 2002\nemissions_in_million_tons_co2_equivalent : 109.59161773546100, 119.93309459147299, 114.20850550410699, 117.90056180040800, 115.05722487661600\n*/\n\n/*\nColumn name, Column discription, Example values\nemissions_in_million_tons_co2_equivalent, Greenhouse gas emissions in million metric tons of CO2 equivalent, 117.900561800408\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat years did the greenhouse gas footprint of Switzerland decrease compared to the previous year and by how much? Order by magnitude of decrease\n### SQL query\nWITH EmissionsChange AS (\n    SELECT\n        T1.year AS current_year,\n        T1.emissions_in_million_tons_co2_equivalent AS emissions_current_year,\n        (T1.year - 1) AS previous_year,\n        T2.emissions_in_million_tons_co2_equivalent AS emissions_previous_year,\n        T1.emissions_in_million_tons_co2_equivalent - T2.emissions_in_million_tons_co2_equivalent\n          AS decrease_from_previous_year\n    FROM greenhouse_gas_emissions_through_consumption AS T1\n    JOIN greenhouse_gas_emissions_through_consumption AS T2 ON T1.year = T2.year + 1\n    WHERE T1.year > 2000\n)\nSELECT current_year, decrease_from_previous_year\nFROM EmissionsChange WHERE decrease_from_previous_year < 0\nORDER BY decrease_from_previous_year ASC;\n\n\n### Question\nWhat greenhouse gas footprint had Switzerland in 2000 through consumption?\n### SQL query\n",
    "process_time": 3.9448450580239296,
    "num_tokens": 1090,
    "hardness": "medium",
    "scores": [
      0.43006354570388794
    ],
    "lang": "en"
  },
  {
    "i": 19,
    "question": "In which years did the greenhouse footprint increase and by how much? Order by years and start from the present",
    "query": "WITH EmissionsChange AS (\n    SELECT\n        T1.year AS current_year,\n        T1.emissions_in_million_tons_co2_equivalent AS emissions_current_year,\n        (T1.year - 1) AS previous_year,\n        T2.emissions_in_million_tons_co2_equivalent AS emissions_previous_year,\n        T1.emissions_in_million_tons_co2_equivalent - T2.emissions_in_million_tons_co2_equivalent\n          AS increase_from_previous_year\n    FROM greenhouse_gas_emissions_through_consumption AS T1\n    JOIN greenhouse_gas_emissions_through_consumption AS T2 ON T1.year = T2.year + 1\n    WHERE T1.year > 2000\n)\nSELECT current_year, increase_from_previous_year\nFROM EmissionsChange WHERE increase_from_previous_year > 0\nORDER BY current_year DESC;\n",
    "db_id": "greenhouse_gas_emissions_through_consumption",
    "generated_query": "SELECT\n    year,\n    emissions_in_million_tons_co2_equivalent - LAG(emissions_in_million_tons_co2_equivalent) OVER (ORDER BY year DESC) AS emission_change\nFROM greenhouse_gas_emissions_through_consumption\nORDER BY year DESC;",
    "meta_data": [
      {
        "question": "What years did the greenhouse gas footprint of Switzerland decrease compared to the previous year and by how much? Order by magnitude of decrease",
        "query": "WITH EmissionsChange AS (\n    SELECT\n        T1.year AS current_year,\n        T1.emissions_in_million_tons_co2_equivalent AS emissions_current_year,\n        (T1.year - 1) AS previous_year,\n        T2.emissions_in_million_tons_co2_equivalent AS emissions_previous_year,\n        T1.emissions_in_million_tons_co2_equivalent - T2.emissions_in_million_tons_co2_equivalent\n          AS decrease_from_previous_year\n    FROM greenhouse_gas_emissions_through_consumption AS T1\n    JOIN greenhouse_gas_emissions_through_consumption AS T2 ON T1.year = T2.year + 1\n    WHERE T1.year > 2000\n)\nSELECT current_year, decrease_from_previous_year\nFROM EmissionsChange WHERE decrease_from_previous_year < 0\nORDER BY decrease_from_previous_year ASC;\n",
        "score": 0.4724388122558594
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.greenhouse_gas_emissions_through_consumption (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\temissions_in_million_tons_co2_equivalent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT greenhouse_gas_emissions_through_consumption_pkey PRIMARY KEY (uid), \n\tCONSTRAINT greenhouse_gas_emissions_through_consumpti_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in greenhouse_gas_emissions_through_consumption and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 2, 3, 21\nyear : 2019, 2016, 2007, 2003, 2002\nemissions_in_million_tons_co2_equivalent : 109.59161773546100, 119.93309459147299, 114.20850550410699, 117.90056180040800, 115.05722487661600\n*/\n\n/*\nColumn name, Column discription, Example values\nemissions_in_million_tons_co2_equivalent, Greenhouse gas emissions in million metric tons of CO2 equivalent, 117.900561800408\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow did the greenhouse gas footprint develop overall? Did it go up or down and by how much? Compare the first and last year in the data and show both years and the change of the footprint.\n### SQL query\nWITH FirstYearEmissions AS (\n    SELECT\n        year AS first_observation_year,\n        emissions_in_million_tons_co2_equivalent AS emissions_first_year\n    FROM greenhouse_gas_emissions_through_consumption ORDER BY year ASC\n    LIMIT 1\n),\nLastYearEmissions AS (\n    SELECT\n        year AS last_observation_year,\n        emissions_in_million_tons_co2_equivalent AS emissions_last_year\n    FROM greenhouse_gas_emissions_through_consumption ORDER BY year DESC\n    LIMIT 1\n)\nSELECT\n    first_observation_year,\n    last_observation_year,\n    emissions_last_year - emissions_first_year AS emission_change_in_observered_period\nFROM FirstYearEmissions AS CROSS JOIN LastYearEmissions;\n\n\n### Question\nIn which years did the greenhouse footprint increase and by how much? Order by years and start from the present\n### SQL query\n",
    "process_time": 7.929494080832228,
    "num_tokens": 1081,
    "hardness": "unknown",
    "scores": [
      0.4724388122558594
    ],
    "lang": "en"
  },
  {
    "i": 20,
    "question": "What types of fuel are there?",
    "query": "SELECT DISTINCT fuel_type FROM stock_vehicles;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT DISTINCT fuel_type\nFROM stock_vehicles;",
    "meta_data": [
      {
        "question": "What fuel type is most frequently used for motorcycles?",
        "query": "SELECT\n    fuel_type,\n    SUM(amount) AS total_amount\nFROM stock_vehicles WHERE vehicle_type ILIKE '%motorcycle%'\n    AND fuel_type != 'total'\nGROUP BY fuel_type\nORDER BY total_amount DESC\nLIMIT 1;\n",
        "score": 0.5103528499603271
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 4310_A.ADM3, 2123_A.ADM3, 5806_A.ADM3, 5410_A.ADM3, 153_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\namount : 57, 89, 54, 579, 66\nfuel_type : Diesel, Diesel-electric: Plug-in-hybrid, total, other, Gas (mono- and bivalent)\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n\n\n### Question\nWhat fuel type is most frequently used for motorcycles?\n### SQL query\nSELECT\n    fuel_type,\n    SUM(amount) AS total_amount\nFROM stock_vehicles WHERE vehicle_type ILIKE '%motorcycle%'\n    AND fuel_type != 'total'\nGROUP BY fuel_type\nORDER BY total_amount DESC\nLIMIT 1;\n\n\n### Question\nWhat types of fuel are there?\n### SQL query\n",
    "process_time": 1.912998593878001,
    "num_tokens": 973,
    "hardness": "easy",
    "scores": [
      0.5103528499603271
    ],
    "lang": "en"
  },
  {
    "i": 21,
    "question": "What was the proportion of electric vehicles in Geneva in 2010?",
    "query": "SELECT\n    SUM(CASE WHEN sv.fuel_type ILIKE '%electric%' THEN sv.amount ELSE 0 END) AS electric_vehicles,\n    SUM(sv.amount) AS total_vehicles,\n    (\n        SUM(CASE WHEN sv.fuel_type ILIKE '%electric%' THEN sv.amount ELSE 0 END) * 100.0 / NULLIF(SUM(sv.amount), 0)\n    ) AS proportion_electric_vehicles\nFROM spatial_unit AS su\nINNER JOIN stock_vehicles AS sv\nON su.spatialunit_uid = sv.spatialunit_uid\nWHERE su.name ILIKE '%geneva%'\n    AND sv.year = 2010;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT\n    SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) AS electric_cars,\n    SUM(amount) AS total_cars,\n    (\n        SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)\n    ) AS proportion_electric\nFROM stock_vehicles\nWHERE spatialunit_uid = '2123_A.ADM3' AND year = 2010;",
    "meta_data": [
      {
        "question": "What is the proportion of electric vehicles of each type in the most recent year, in descending order?",
        "query": "SELECT\n    vehicle_type,\n    SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) AS electric_cars,\n    SUM(amount) AS total_cars,\n    (\n        SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)\n    ) AS proportion_electric\nFROM stock_vehicles WHERE year = (\n    SELECT MAX(year)\n    FROM stock_vehicles\n    )\nGROUP BY vehicle_type\nORDER BY proportion_electric DESC;\n",
        "score": 0.4750736653804779
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 4310_A.ADM3, 2123_A.ADM3, 5806_A.ADM3, 5410_A.ADM3, 153_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\namount : 57, 89, 54, 579, 66\nfuel_type : Diesel, Diesel-electric: Plug-in-hybrid, total, other, Gas (mono- and bivalent)\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n\n\n### Question\nWhat is the proportion of electric vehicles of each type in the most recent year, in descending order?\n### SQL query\nSELECT\n    vehicle_type,\n    SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) AS electric_cars,\n    SUM(amount) AS total_cars,\n    (\n        SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)\n    ) AS proportion_electric\nFROM stock_vehicles WHERE year = (\n    SELECT MAX(year)\n    FROM stock_vehicles\n    )\nGROUP BY vehicle_type\nORDER BY proportion_electric DESC;\n\n\n### Question\nWhat was the proportion of electric vehicles in Geneva in 2010?\n### SQL query\n",
    "process_time": 13.295517822960392,
    "num_tokens": 1055,
    "hardness": "unknown",
    "scores": [
      0.4750736653804779
    ],
    "lang": "en"
  },
  {
    "i": 22,
    "question": "What was the city with the most cars in 2015?",
    "query": "SELECT\n    su.name AS city,\n    SUM(sv.amount) AS total_cars\nFROM spatial_unit AS su\nINNER JOIN stock_vehicles AS sv\nON su.spatialunit_uid = sv.spatialunit_uid\nWHERE sv.year = 2015\n    AND su.municipal = 'True'\n    AND sv.fuel_type = 'total'\nGROUP BY\n    su.name\nORDER BY total_cars DESC\nLIMIT 1;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT su.name AS city\nFROM spatial_unit AS su\nJOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\nWHERE sv.year = 2015\nORDER BY sv.amount DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "What canton has the most agricultural vehicles across all years?",
        "query": "SELECT\n    su.name AS city,\n    SUM(sv.amount) AS total_agricultural_vehicles\nFROM spatial_unit AS su\n    INNER JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\nWHERE\n    sv.vehicle_type ILIKE '%agricultural%'\n    AND su.canton = 'True'\nGROUP BY\n    su.name\nORDER BY\n    total_agricultural_vehicles DESC\nLIMIT 1;\n",
        "score": 0.6943410038948059
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 4310_A.ADM3, 2123_A.ADM3, 5806_A.ADM3, 5410_A.ADM3, 153_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\namount : 57, 89, 54, 579, 66\nfuel_type : Diesel, Diesel-electric: Plug-in-hybrid, total, other, Gas (mono- and bivalent)\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n\n\n### Question\nWhat cities do not have any electric cars registered?\n### SQL query\nSELECT su.name AS city\nFROM spatial_unit AS su\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM stock_vehicles AS sv\n    WHERE su.spatialunit_uid = sv.spatialunit_uid\n        AND sv.fuel_type = 'Electric'\n);\n\n\n### Question\nWhat was the city with the most cars in 2015?\n### SQL query\n",
    "process_time": 4.811672528972849,
    "num_tokens": 981,
    "hardness": "unknown",
    "scores": [
      0.6943410038948059
    ],
    "lang": "en"
  },
  {
    "i": 23,
    "question": "What are fuel types starting with d?",
    "query": "SELECT DISTINCT fuel_type\nFROM stock_vehicles WHERE fuel_type ILIKE 'd%';\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT\n    fuel_type\nFROM stock_vehicles\nWHERE fuel_type ILIKE 'd%'\nGROUP BY fuel_type;",
    "meta_data": [
      {
        "question": "What fuel type is most frequently used for motorcycles?",
        "query": "SELECT\n    fuel_type,\n    SUM(amount) AS total_amount\nFROM stock_vehicles WHERE vehicle_type ILIKE '%motorcycle%'\n    AND fuel_type != 'total'\nGROUP BY fuel_type\nORDER BY total_amount DESC\nLIMIT 1;\n",
        "score": 0.6807832717895508
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 4310_A.ADM3, 2123_A.ADM3, 5806_A.ADM3, 5410_A.ADM3, 153_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\namount : 57, 89, 54, 579, 66\nfuel_type : Diesel, Diesel-electric: Plug-in-hybrid, total, other, Gas (mono- and bivalent)\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n\n\n### Question\nWhat fuel type is most frequently used for motorcycles?\n### SQL query\nSELECT\n    fuel_type,\n    SUM(amount) AS total_amount\nFROM stock_vehicles WHERE vehicle_type ILIKE '%motorcycle%'\n    AND fuel_type != 'total'\nGROUP BY fuel_type\nORDER BY total_amount DESC\nLIMIT 1;\n\n\n### Question\nWhat are fuel types starting with d?\n### SQL query\n",
    "process_time": 3.350980875082314,
    "num_tokens": 974,
    "hardness": "unknown",
    "scores": [
      0.6807832717895508
    ],
    "lang": "en"
  },
  {
    "i": 24,
    "question": "What are the top 10 cities with the highest proportion of diesel cars?",
    "query": "SELECT\n    su.name AS city,\n    (SUM(CASE WHEN sv.fuel_type ILIKE '%diesel%' THEN sv.amount ELSE 0 END) * 100.0 / SUM(CASE WHEN sv.fuel_type = 'total' THEN sv.amount ELSE 0 END) ) AS proportion_diesel\nFROM spatial_unit AS su\n    INNER JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\nWHERE\n    su.name IS NOT NULL\nGROUP BY\n    su.name\nORDER BY\n    proportion_diesel DESC\nLIMIT 10;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT su.name AS city, \n       COUNT(sv.uid) AS total_vehicles, \n       SUM(CASE WHEN sv.fuel_type = 'Diesel' THEN 1 ELSE 0 END) AS diesel_vehicles,\n       (SUM(CASE WHEN sv.fuel_type = 'Diesel' THEN 1 ELSE 0 END) * 100.0) / COUNT(sv.uid) AS proportion_diesel\nFROM spatial_unit AS su\nLEFT JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\nGROUP BY su.name\nORDER BY proportion_diesel DESC\nLIMIT 10;",
    "meta_data": [
      {
        "question": "What canton has the most agricultural vehicles across all years?",
        "query": "SELECT\n    su.name AS city,\n    SUM(sv.amount) AS total_agricultural_vehicles\nFROM spatial_unit AS su\n    INNER JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\nWHERE\n    sv.vehicle_type ILIKE '%agricultural%'\n    AND su.canton = 'True'\nGROUP BY\n    su.name\nORDER BY\n    total_agricultural_vehicles DESC\nLIMIT 1;\n",
        "score": 0.6199359893798828
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 4310_A.ADM3, 2123_A.ADM3, 5806_A.ADM3, 5410_A.ADM3, 153_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\namount : 57, 89, 54, 579, 66\nfuel_type : Diesel, Diesel-electric: Plug-in-hybrid, total, other, Gas (mono- and bivalent)\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n\n\n### Question\nWhat cities do not have any electric cars registered?\n### SQL query\nSELECT su.name AS city\nFROM spatial_unit AS su\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM stock_vehicles AS sv\n    WHERE su.spatialunit_uid = sv.spatialunit_uid\n        AND sv.fuel_type = 'Electric'\n);\n\n\n### Question\nWhat are the top 10 cities with the highest proportion of diesel cars?\n### SQL query\n",
    "process_time": 10.867480035871267,
    "num_tokens": 983,
    "hardness": "unknown",
    "scores": [
      0.6199359893798828
    ],
    "lang": "en"
  },
  {
    "i": 25,
    "question": "What year saw the biggest year-on-year increase in electric cars in the city of Basel?",
    "query": "SELECT\n    year,\n    year_on_year_increase\nFROM (\n    SELECT\n        sv.year,\n        (sv.amount - lag(sv.amount) OVER (ORDER BY sv.year)) AS year_on_year_increase\n    FROM spatial_unit AS su\n        INNER JOIN stock_vehicles AS sv ON su.spatialunit_uid = sv.spatialunit_uid\n    WHERE\n        su.name = 'Basel' and su.municipal = 'True'\n        AND sv.fuel_type ILIKE '%electric%'\n) AS subquery\nWHERE\n    year_on_year_increase IS NOT NULL\nORDER BY\n    year_on_year_increase DESC\nLIMIT 1;\n",
    "db_id": "stock_vehicles",
    "generated_query": "SELECT\n    year,\n    SUM(CASE WHEN spatialunit_uid = 'BASEL' AND fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) AS electric_cars,\n    LAG(SUM(CASE WHEN spatialunit_uid = 'BASEL' AND fuel_type ILIKE '%electric%' THEN amount ELSE 0 END)) OVER (ORDER BY year) AS prev_year_electric_cars,\n    (\n        SUM(CASE WHEN spatialunit_uid = 'BASEL' AND fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) - LAG(SUM(CASE WHEN spatialunit_uid = 'BASEL' AND fuel_type ILIKE '%electric%' THEN amount ELSE 0 END)) OVER (ORDER BY year)\n    ) AS year_on_year_increase\nFROM stock_vehicles\nWHERE spatialunit_uid = 'BASEL' AND fuel_type ILIKE '%electric%'\nGROUP BY year\nORDER BY year_on_year_increase DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "What is the proportion of electric vehicles of each type in the most recent year, in descending order?",
        "query": "SELECT\n    vehicle_type,\n    SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) AS electric_cars,\n    SUM(amount) AS total_cars,\n    (\n        SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)\n    ) AS proportion_electric\nFROM stock_vehicles WHERE year = (\n    SELECT MAX(year)\n    FROM stock_vehicles\n    )\nGROUP BY vehicle_type\nORDER BY proportion_electric DESC;\n",
        "score": 0.6193839311599731
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stock_vehicles (\n\tuid BIGINT NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tvehicle_type VARCHAR(50), \n\tyear INTEGER, \n\tamount INTEGER, \n\tfuel_type VARCHAR(50), \n\tCONSTRAINT stock_vehicles_pk PRIMARY KEY (uid), \n\tCONSTRAINT stock_vehicles_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in stock_vehicles and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 4310_A.ADM3, 2123_A.ADM3, 5806_A.ADM3, 5410_A.ADM3, 153_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\namount : 57, 89, 54, 579, 66\nfuel_type : Diesel, Diesel-electric: Plug-in-hybrid, total, other, Gas (mono- and bivalent)\n*/\n\n/*\nColumn name, Column discription, Example values\nvehicle_type, Vehicle type, passenger_cars,trailers,motorcycles\namount, Amount of vehicles, 0,2,240\nfuel_type, Fuel type, Hydrogen,Electric,Diesel-electric: Normal-hybrid\n*/\n\n\n\n### Question\nWhat is the proportion of electric vehicles of each type in the most recent year, in descending order?\n### SQL query\nSELECT\n    vehicle_type,\n    SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) AS electric_cars,\n    SUM(amount) AS total_cars,\n    (\n        SUM(CASE WHEN fuel_type ILIKE '%electric%' THEN amount ELSE 0 END) * 100.0 / NULLIF(SUM(amount), 0)\n    ) AS proportion_electric\nFROM stock_vehicles WHERE year = (\n    SELECT MAX(year)\n    FROM stock_vehicles\n    )\nGROUP BY vehicle_type\nORDER BY proportion_electric DESC;\n\n\n### Question\nWhat year saw the biggest year-on-year increase in electric cars in the city of Basel?\n### SQL query\n",
    "process_time": 16.795755754923448,
    "num_tokens": 1059,
    "hardness": "unknown",
    "scores": [
      0.6193839311599731
    ],
    "lang": "en"
  },
  {
    "i": 26,
    "question": "How many favorite babynames are registered in year 2011?",
    "query": "SELECT DISTINCT COUNT(bnff.first_name)\nFROM baby_names_favorite_firstname as bnff\nWHERE bnff.year = 2011;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT COUNT(bnff.uid)\nFROM baby_names_favorite_firstname as bnff\nWHERE bnff.year = 2011;",
    "meta_data": [
      {
        "question": "How many baby names were registered?",
        "query": "SELECT DISTINCT COUNT(bnff.first_name)\nFROM baby_names_favorite_firstname as bnff;\n",
        "score": 0.31886422634124756
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1686968, 1687036, 1686969, 1686965, 1687033\nyear : 2019, 2016, 2007, 2003, 2022\namount : 6, 10, 0, 7, 11\nrank : 89, 19, 46, 21, 198\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many baby names were registered?\n### SQL query\nSELECT DISTINCT COUNT(bnff.first_name)\nFROM baby_names_favorite_firstname as bnff;\n\n\n### Question\nHow many favorite babynames are registered in year 2011?\n### SQL query\n",
    "process_time": 3.5432086680084467,
    "num_tokens": 888,
    "hardness": "easy",
    "scores": [
      0.31886422634124756
    ],
    "lang": "en"
  },
  {
    "i": 27,
    "question": "Show me all amount of baby names in all municipalities.",
    "query": "SELECT bnff.first_name, bnff.amount\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.municipal = 'TRUE';\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT SUM(amount) as total_amount\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.municipal = 'TRUE';",
    "meta_data": [
      {
        "question": "How many baby names were registered?",
        "query": "SELECT DISTINCT COUNT(bnff.first_name)\nFROM baby_names_favorite_firstname as bnff;\n",
        "score": 0.7544564604759216
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1686968, 1687036, 1686969, 1686965, 1687033\nyear : 2019, 2016, 2007, 2003, 2022\namount : 6, 10, 0, 7, 11\nrank : 89, 19, 46, 21, 198\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nPlease list all registered baby names in Canton Zug in all years. Return me the result in order of alphabets.\n### SQL query\nSELECT DISTINCT bnff.first_name\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.name ilike '%Zug%' and su.canton = 'TRUE'\nORDER BY bnff.first_name;\n\n\n### Question\nShow me all amount of baby names in all municipalities.\n### SQL query\n",
    "process_time": 5.061548092868179,
    "num_tokens": 941,
    "hardness": "medium",
    "scores": [
      0.7544564604759216
    ],
    "lang": "en"
  },
  {
    "i": 28,
    "question": "Which canton has the most borned boys called 'Oscar' in 2016?",
    "query": "SELECT su.name, bnff.amount\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2016 AND gender = 'boy' AND bnff.first_name = 'Oscar' AND su.canton = 'TRUE'\nORDER BY bnff.amount DESC LIMIT 1;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT su.name, sum(bnff.amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' AND bnff.gender = 'boy' AND bnff.first_name = 'Oscar' AND bnff.year = 2016\ngroup by su.name\nORDER BY sum(bnff.amount) DESC LIMIT 1;",
    "meta_data": [
      {
        "question": "Which canton has least borned boys registed in 2011?",
        "query": "SELECT sum(bnff.amount), su.name\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' and bnff.gender = 'boy' and bnff.year = 2011\nGROUP BY su.name\nORDER BY sum(bnff.amount) LIMIT 1;\n",
        "score": 0.42355072498321533
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1686968, 1687036, 1686969, 1686965, 1687033\nyear : 2019, 2016, 2007, 2003, 2022\namount : 6, 10, 0, 7, 11\nrank : 89, 19, 46, 21, 198\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich year has the most registered baby names for all cantons?\n### SQL query\nSELECT bnff.year, sum(bnff.amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE'\ngroup by bnff.year\nORDER BY sum(bnff.amount) DESC LIMIT 1;\n\n\n### Question\nWhich canton has the most borned boys called 'Oscar' in 2016?\n### SQL query\n",
    "process_time": 7.537324002943933,
    "num_tokens": 945,
    "hardness": "extra",
    "scores": [
      0.42355072498321533
    ],
    "lang": "en"
  },
  {
    "i": 29,
    "question": "Show me all top-1 ranked girl names for in each canton in year 2016. Return me the amount and year as well.",
    "query": "SELECT bnff.first_name, su.name, bnff.amount, bnff.year\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' and bnff.gender = 'girl' and bnff.year = 2016 and bnff.rank = 1;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT bnff.first_name, bnff.amount, bnff.year, su.name\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' and bnff.gender = 'girl' and bnff.year = 2016 and bnff.rank = 1;",
    "meta_data": [
      {
        "question": "Show me all top-1 ranked boy names for in each canton in year 2014.",
        "query": "SELECT bnff.first_name, su.name\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' and bnff.gender = 'boy' and bnff.year = 2014 and bnff.rank = 1;;\n",
        "score": 0.35930323600769043
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1686968, 1687036, 1686969, 1686965, 1687033\nyear : 2019, 2016, 2007, 2003, 2022\namount : 6, 10, 0, 7, 11\nrank : 89, 19, 46, 21, 198\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nShow me all top-1 ranked boy names for in each canton in year 2014.\n### SQL query\nSELECT bnff.first_name, su.name\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' and bnff.gender = 'boy' and bnff.year = 2014 and bnff.rank = 1;;\n\n\n### Question\nShow me all top-1 ranked girl names for in each canton in year 2016. Return me the amount and year as well.\n### SQL query\n",
    "process_time": 9.461170905968174,
    "num_tokens": 966,
    "hardness": "extra",
    "scores": [
      0.35930323600769043
    ],
    "lang": "en"
  },
  {
    "i": 30,
    "question": "How many girls new borned with name initial L from canton Zurich in 2016?",
    "query": "SELECT sum(amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2016 AND gender = 'girl' AND su.canton = ''True''\nAND su.name ilike '%zurich%' AND bnff.first_name ilike 'l%';\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT sum(amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE' AND bnff.gender = 'girl' AND bnff.first_name LIKE 'L%' AND bnff.year = 2016;",
    "meta_data": [
      {
        "question": "Which year has the least registered baby names for all cantons?",
        "query": "SELECT bnff.year, sum(bnff.amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE'\ngroup by bnff.year\nORDER BY sum(bnff.amount) LIMIT 1;\n",
        "score": 0.6275370121002197
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1686968, 1687036, 1686969, 1686965, 1687033\nyear : 2019, 2016, 2007, 2003, 2022\namount : 6, 10, 0, 7, 11\nrank : 89, 19, 46, 21, 198\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich year has the least registered baby names for all cantons?\n### SQL query\nSELECT bnff.year, sum(bnff.amount)\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.canton = 'TRUE'\ngroup by bnff.year\nORDER BY sum(bnff.amount) LIMIT 1;\n\n\n### Question\nHow many girls new borned with name initial L from canton Zurich in 2016?\n### SQL query\n",
    "process_time": 6.362879160093144,
    "num_tokens": 944,
    "hardness": "unknown",
    "scores": [
      0.6275370121002197
    ],
    "lang": "en"
  },
  {
    "i": 31,
    "question": "Show me the top one ranking girl names from year 2010 in Switzerland.",
    "query": "SELECT bnff.first_name, bnff.year\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE su.country = 'TRUE' and su.name ilike '%Switzerland%' and bnff.gender = 'girl'\nand bnff.year >= 2010 and bnff.rank = 1\nORDER BY bnff.year;\n",
    "db_id": "baby_names_favorite_firstname",
    "generated_query": "SELECT first_name, gender, amount, rank\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2010 and gender = 'girl' AND su.country = ''True'' AND su.name = 'Switzerland'\nORDER BY bnff.rank ASC LIMIT 1;",
    "meta_data": [
      {
        "question": "Show me the most popular names of girls in Switzerland in 2016.",
        "query": "SELECT first_name, gender, amount, rank\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2016 and gender = 'girl' AND su.country = ''True'' AND su.name = 'Switzerland'\nORDER BY bnff.amount DESC LIMIT 1;\n",
        "score": 0.37249791622161865
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.baby_names_favorite_firstname (\n\tuid SERIAL NOT NULL, \n\tgender TEXT, \n\tyear INTEGER, \n\tfirst_name TEXT, \n\tamount NUMERIC, \n\trank NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT baby_names_favorite_firstname_pkey PRIMARY KEY (uid), \n\tCONSTRAINT baby_names_favorite_firstname_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in baby_names_favorite_firstname and 5 examples in each column for high cardinality columns :\nuid : 1686968, 1687036, 1686969, 1686965, 1687033\nyear : 2019, 2016, 2007, 2003, 2022\namount : 6, 10, 0, 7, 11\nrank : 89, 19, 46, 21, 198\n*/\n\n/*\nColumn name, Column discription, Example values\ngender, gender, girl,boy\nfirst_name, First name, Anna,Martin\nrank, rank, 12\namount, amount, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nShow me the most popular names of girls in Switzerland in 2016.\n### SQL query\nSELECT first_name, gender, amount, rank\nFROM baby_names_favorite_firstname as bnff\nJOIN spatial_unit as su ON bnff.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2016 and gender = 'girl' AND su.country = ''True'' AND su.name = 'Switzerland'\nORDER BY bnff.amount DESC LIMIT 1;\n\n\n### Question\nShow me the top one ranking girl names from year 2010 in Switzerland.\n### SQL query\n",
    "process_time": 9.884021510137245,
    "num_tokens": 953,
    "hardness": "unknown",
    "scores": [
      0.37249791622161865
    ],
    "lang": "en"
  },
  {
    "i": 32,
    "question": "How many divorces were there in canton zurich in 2020?",
    "query": "SELECT S.name, T.year, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT S.name, T.year, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;",
    "meta_data": [
      {
        "question": "How many women divorced at age between 20 and 29 in canton zurich in 2020?",
        "query": "SELECT S.name, T.year, T.age_class_wife, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = '20-29 years'\nGROUP BY S.name, T.year, T.age_class_wife;\n",
        "score": 0.1995633989572525
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\nyear : 2019, 2016, 1986, 2007, 1995\namount : 89, 112, 356, 2, 3\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many women divorced at age between 20 and 29 in canton zurich in 2020?\n### SQL query\nSELECT S.name, T.year, T.age_class_wife, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = '20-29 years'\nGROUP BY S.name, T.year, T.age_class_wife;\n\n\n### Question\nHow many divorces were there in canton zurich in 2020?\n### SQL query\n",
    "process_time": 18.179374276893213,
    "num_tokens": 1123,
    "hardness": "unknown",
    "scores": [
      0.1995633989572525
    ],
    "lang": "en"
  },
  {
    "i": 33,
    "question": "Did any people divorce at an age of 70 or above in Switzerland in 2000?",
    "query": "SELECT S.name, T.age_class_husband, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year = 2000\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND (T.age_class_husband = '90 years or older' OR T.age_class_husband = '70-79 years')\nAND T.age_class_wife = 'Age class of wife - total'\nAND S.country\nGROUP BY S.name, T.age_class_husband;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT S.name, T.age_class_husband, T.age_class_wife, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year = 2000\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND ((T.age_class_husband = '70 years or older'\n          AND T.age_class_wife = 'Age class of wife - total')\n        OR (T.age_class_wife = '70 years or older'\n         AND T.age_class_husband = 'Age class of husband - total'))\nAND S.country\nGROUP BY S.name, T.age_class_husband, T.age_class_wife\nORDER BY total_divorces ASC;",
    "meta_data": [
      {
        "question": "Did any person divorce at an age of 90 or above in Switzerland since 2000?",
        "query": "SELECT S.name, T.age_class_husband, T.age_class_wife, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 2000\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND ((T.age_class_husband = '90 years or older'\n          AND T.age_class_wife = 'Age class of wife - total')\n        OR (T.age_class_wife = '90 years or older'\n         AND T.age_class_husband = 'Age class of husband - total'))\nAND S.country\nGROUP BY S.name, T.age_class_husband, T.age_class_wife\nORDER BY total_divorces ASC;\n",
        "score": 0.05754764750599861
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\nyear : 2019, 2016, 1986, 2007, 1995\namount : 89, 112, 356, 2, 3\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nDid any person divorce at an age of 90 or above in Switzerland since 2000?\n### SQL query\nSELECT S.name, T.age_class_husband, T.age_class_wife, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 2000\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND ((T.age_class_husband = '90 years or older'\n          AND T.age_class_wife = 'Age class of wife - total')\n        OR (T.age_class_wife = '90 years or older'\n         AND T.age_class_husband = 'Age class of husband - total'))\nAND S.country\nGROUP BY S.name, T.age_class_husband, T.age_class_wife\nORDER BY total_divorces ASC;\n\n\n### Question\nDid any people divorce at an age of 70 or above in Switzerland in 2000?\n### SQL query\n",
    "process_time": 14.670971532119438,
    "num_tokens": 1158,
    "hardness": "unknown",
    "scores": [
      0.05754764750599861
    ],
    "lang": "en"
  },
  {
    "i": 34,
    "question": "Which year between 1990 and 2000 had the least divorces in Stadt Basel?",
    "query": "SELECT S.name, T.year, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 1990\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND S.country\nGROUP BY S.name, T.year\nORDER BY T.year;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT T.year, SUM(T.amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year BETWEEN 1990 AND 2000\nAND T.duration_of_marriage != 'Duration of marriage - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND S.name ilike '%basel%'\nGROUP BY T.year\nORDER BY total_divorces ASC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "How many divorces happened in Basel in 2015 and after how many years of marriage?",
        "query": "SELECT S.name, S.spatialunit_ontology, T.year, T.duration_of_marriage, SUM(T.amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year = 2015\nAND T.duration_of_marriage != 'Duration of marriage - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND S.name ilike '%basel%'\nGROUP BY T.year, T.duration_of_marriage, S.spatialunit_ontology, S.name;\n",
        "score": 0.3947925865650177
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\nyear : 2019, 2016, 1986, 2007, 1995\namount : 89, 112, 356, 2, 3\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many divorces happened in Basel in 2015 and after how many years of marriage?\n### SQL query\nSELECT S.name, S.spatialunit_ontology, T.year, T.duration_of_marriage, SUM(T.amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year = 2015\nAND T.duration_of_marriage != 'Duration of marriage - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND S.name ilike '%basel%'\nGROUP BY T.year, T.duration_of_marriage, S.spatialunit_ontology, S.name;\n\n\n### Question\nWhich year between 1990 and 2000 had the least divorces in Stadt Basel?\n### SQL query\n",
    "process_time": 15.006773086031899,
    "num_tokens": 1128,
    "hardness": "unknown",
    "scores": [
      0.3947925865650177
    ],
    "lang": "en"
  },
  {
    "i": 35,
    "question": "How many men divorced at an age between 60 and 69 in canton zurich in 2020?",
    "query": "SELECT S.name, T.year, T.age_class_husband, sum(T.amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = '60-69 years'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year, T.age_class_husband;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT S.name, T.year, T.age_class_husband, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND T.age_class_husband = '60-69 years'\nGROUP BY S.name, T.year, T.age_class_husband;",
    "meta_data": [
      {
        "question": "How many women divorced at age between 20 and 29 in canton zurich in 2020?",
        "query": "SELECT S.name, T.year, T.age_class_wife, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = '20-29 years'\nGROUP BY S.name, T.year, T.age_class_wife;\n",
        "score": 0.2022019475698471
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\nyear : 2019, 2016, 1986, 2007, 1995\namount : 89, 112, 356, 2, 3\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many women divorced at age between 20 and 29 in canton zurich in 2020?\n### SQL query\nSELECT S.name, T.year, T.age_class_wife, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'\nAND T.year = 2020\nAND S.canton = 'True'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = '20-29 years'\nGROUP BY S.name, T.year, T.age_class_wife;\n\n\n### Question\nHow many men divorced at an age between 60 and 69 in canton zurich in 2020?\n### SQL query\n",
    "process_time": 15.091564290923998,
    "num_tokens": 1130,
    "hardness": "unknown",
    "scores": [
      0.2022019475698471
    ],
    "lang": "en"
  },
  {
    "i": 36,
    "question": "From 2000 to 2022 which year saw the most divorces in Switzerland?",
    "query": "SELECT T.year, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 2000\nAND T.year <= 2022\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_wife = 'Age class of wife - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND S.country\nGROUP BY T.year\nORDER BY total_divorces DESC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT T.year, SUM(T.amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes AS T\nINNER JOIN spatial_unit AS S\nON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.year >= 2000 AND T.year <= 2022\nAND S.country\nGROUP BY T.year\nORDER BY total_divorces DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "How many couples were divorced in Switzerland in the year 2000?",
        "query": "SELECT T.year, S.name, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = s.spatialunit_uid\nWHERE S.country\nAND T.year = '2000'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;\n",
        "score": 0.3403240442276001
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\nyear : 2019, 2016, 1986, 2007, 1995\namount : 89, 112, 356, 2, 3\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nDid any person divorce at an age of 90 or above in Switzerland since 2000?\n### SQL query\nSELECT S.name, T.age_class_husband, T.age_class_wife, SUM(T.amount) AS total_divorces\nFROM spatial_unit AS S\nINNER JOIN divorces_duration_of_marriage_age_classes AS T\nON S.spatialunit_uid = T.spatialunit_uid\nWHERE T.year >= 2000\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND ((T.age_class_husband = '90 years or older'\n          AND T.age_class_wife = 'Age class of wife - total')\n        OR (T.age_class_wife = '90 years or older'\n         AND T.age_class_husband = 'Age class of husband - total'))\nAND S.country\nGROUP BY S.name, T.age_class_husband, T.age_class_wife\nORDER BY total_divorces ASC;\n\n\n### Question\nFrom 2000 to 2022 which year saw the most divorces in Switzerland?\n### SQL query\n",
    "process_time": 8.007863973034546,
    "num_tokens": 1157,
    "hardness": "unknown",
    "scores": [
      0.3403240442276001
    ],
    "lang": "en"
  },
  {
    "i": 37,
    "question": "How many marriages in Switzerland got divorced after less then 5 years in 2000?",
    "query": "SELECT sum(amount) AS total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = s.spatialunit_uid\nWHERE S.country\nAND T.year = '2000'\nAND T.duration_of_marriage = '0-4 years'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total';\n",
    "db_id": "divorces_duration_of_marriage_age_classes",
    "generated_query": "SELECT T.year, S.name, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = s.spatialunit_uid\nWHERE S.country\nAND T.year = '2000'\nAND T.duration_of_marriage = 'Less than 5 years'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;",
    "meta_data": [
      {
        "question": "How many couples were divorced in Switzerland in the year 2000?",
        "query": "SELECT T.year, S.name, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = s.spatialunit_uid\nWHERE S.country\nAND T.year = '2000'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;\n",
        "score": 0.12081003189086914
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_age_classes (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tage_class_husband VARCHAR(50), \n\tage_class_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_age_classes_spatial_unit_spatialu FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_age_classes and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 0_CH\nyear : 2019, 2016, 1986, 2007, 1995\namount : 89, 112, 356, 2, 3\n*/\n\n/*\nColumn name, Column discription, Example values\nage_class_husband, age class of the husband, Age class of husband - total,Less than 20 years,80-89 years\nage_class_wife, age class of the wife, Age class of wife - total,Less than 20 years,80-89 years\nduration_of_marriage, duration class of marriage, Duration of marriage - total,5-9 years,20 years or more\namount, Count of divorces, 120\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many couples were divorced in Switzerland in the year 2000?\n### SQL query\nSELECT T.year, S.name, sum(T.amount) as total_divorces\nFROM divorces_duration_of_marriage_age_classes as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = s.spatialunit_uid\nWHERE S.country\nAND T.year = '2000'\nAND T.duration_of_marriage = 'Duration of marriage - total'\nAND T.age_class_husband = 'Age class of husband - total'\nAND T.age_class_wife = 'Age class of wife - total'\nGROUP BY S.name, T.year;\n\n\n### Question\nHow many marriages in Switzerland got divorced after less then 5 years in 2000?\n### SQL query\n",
    "process_time": 14.594029481057078,
    "num_tokens": 1093,
    "hardness": "unknown",
    "scores": [
      0.12081003189086914
    ],
    "lang": "en"
  },
  {
    "i": 38,
    "question": "What is the total number of divorces for Swiss couples where the duration of the marriage was 20 years or more in 1994?",
    "query": "SELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories WHERE year = 1994\n  AND duration_of_marriage = '20 years or more'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year = 1994\n  AND duration_of_marriage = '20 years or more'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';",
    "meta_data": [
      {
        "question": "How many divorces occurred in Switzerland in 1995 between Swiss couples who were married for less than 5 years?",
        "query": "SELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2001\n  AND su.spatialunit_uid = '0_CH'\n  AND duration_of_marriage = '0-4 years'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';\n",
        "score": 0.17626047134399414
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 2841_A.ADM3, 3543_A.ADM3, 246_A.ADM3, 4078_A.ADM3, 2611_A.ADM3\nyear : 2019, 2016, 1986, 1995, 2007\namount : 6, 10, 0, 12, 11\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many divorces occurred in Switzerland in 1995 between Swiss couples who were married for less than 5 years?\n### SQL query\nSELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2001\n  AND su.spatialunit_uid = '0_CH'\n  AND duration_of_marriage = '0-4 years'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';\n\n\n### Question\nWhat is the total number of divorces for Swiss couples where the duration of the marriage was 20 years or more in 1994?\n### SQL query\n",
    "process_time": 8.620839033974335,
    "num_tokens": 1120,
    "hardness": "medium",
    "scores": [
      0.17626047134399414
    ],
    "lang": "en"
  },
  {
    "i": 39,
    "question": "What are the top 5 cantons with the highest number of divorces in 1994 for Swiss couples?",
    "query": "SELECT su.name, SUM(div.amount) as total\nFROM divorces_duration_of_marriage_citizenship_categories AS div\nJOIN spatial_unit AS su on div.spatialunit_uid = su.spatialunit_uid\nWHERE div.year = 1994\n  AND div.duration_of_marriage = 'Duration of marriage - total'\n  AND div.citizenship_category_husband = 'Switzerland'\n  AND div.citizenship_category_wife = 'Switzerland'\n  AND su.name LIKE '%Canton%'\nGROUP BY su.name\nORDER BY total DESC\nLIMIT 5;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year = 1994\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces DESC\nLIMIT 5;",
    "meta_data": [
      {
        "question": "How many divorces occurred in Switzerland in 1995 between Swiss couples who were married for less than 5 years?",
        "query": "SELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2001\n  AND su.spatialunit_uid = '0_CH'\n  AND duration_of_marriage = '0-4 years'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';\n",
        "score": 0.412210077047348
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 2841_A.ADM3, 3543_A.ADM3, 246_A.ADM3, 4078_A.ADM3, 2611_A.ADM3\nyear : 2019, 2016, 1986, 1995, 2007\namount : 6, 10, 0, 12, 11\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many divorces occurred in Switzerland in 1995 between Swiss couples who were married for less than 5 years?\n### SQL query\nSELECT SUM(amount)\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year = 2001\n  AND su.spatialunit_uid = '0_CH'\n  AND duration_of_marriage = '0-4 years'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland';\n\n\n### Question\nWhat are the top 5 cantons with the highest number of divorces in 1994 for Swiss couples?\n### SQL query\n",
    "process_time": 8.943950154120103,
    "num_tokens": 1115,
    "hardness": "unknown",
    "scores": [
      0.412210077047348
    ],
    "lang": "en"
  },
  {
    "i": 40,
    "question": "In which year between 1990 and 2000 did the Canton of Zurich have the highest number of divorces between Swiss couples?",
    "query": "SELECT year, SUM(amount) as total\nFROM divorces_duration_of_marriage_citizenship_categories join spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year BETWEEN 2000 AND 2010\n  AND su.spatialunit_uid = '1_A.ADM1'\n  AND duration_of_marriage = 'Duration of marriage - total'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY year\nORDER BY total DESC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "WITH zurich AS (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories AS d\n  JOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '1_A.ADM1'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n)\nSELECT year\nFROM zurich\nORDER BY total DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "In which year between 1990 and 2000 did the canton of zurich have more divorces between Swiss couples than the canton of geneva?",
        "query": "WITH zurich AS (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories AS d\n  JOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '1_A.ADM1'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n),\ngeneva AS (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories AS d\n  JOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '25_A.ADM1'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n)\nSELECT z.year\nFROM zurich AS z\nJOIN geneva AS g ON z.year = g.year\nWHERE z.total > g.total;\n",
        "score": 0.1915350705385208
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 2841_A.ADM3, 3543_A.ADM3, 246_A.ADM3, 4078_A.ADM3, 2611_A.ADM3\nyear : 2019, 2016, 1986, 1995, 2007\namount : 6, 10, 0, 12, 11\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn which year between 1990 and 2000 did the canton of zurich have more divorces between Swiss couples than the canton of geneva?\n### SQL query\nWITH zurich AS (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories AS d\n  JOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '1_A.ADM1'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n),\ngeneva AS (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories AS d\n  JOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '25_A.ADM1'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n)\nSELECT z.year\nFROM zurich AS z\nJOIN geneva AS g ON z.year = g.year\nWHERE z.total > g.total;\n\n\n### Question\nIn which year between 1990 and 2000 did the Canton of Zurich have the highest number of divorces between Swiss couples?\n### SQL query\n",
    "process_time": 15.44701758516021,
    "num_tokens": 1294,
    "hardness": "unknown",
    "scores": [
      0.1915350705385208
    ],
    "lang": "en"
  },
  {
    "i": 41,
    "question": "In 1995, which municipality had the lowest number of divorces between Swiss couples who were married for 10-14 years?",
    "query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces ASC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces ASC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "In 1995, which municipality had the highest number of divorces between Swiss couples who were married for 10-14 years?",
        "query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces DESC\nLIMIT 1;\n",
        "score": 0.0526009239256382
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 2841_A.ADM3, 3543_A.ADM3, 246_A.ADM3, 4078_A.ADM3, 2611_A.ADM3\nyear : 2019, 2016, 1986, 1995, 2007\namount : 6, 10, 0, 12, 11\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn 1995, which municipality had the highest number of divorces between Swiss couples who were married for 10-14 years?\n### SQL query\nSELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces DESC\nLIMIT 1;\n\n\n### Question\nIn 1995, which municipality had the lowest number of divorces between Swiss couples who were married for 10-14 years?\n### SQL query\n",
    "process_time": 9.028451812220737,
    "num_tokens": 1145,
    "hardness": "unknown",
    "scores": [
      0.0526009239256382
    ],
    "lang": "en"
  },
  {
    "i": 42,
    "question": "How has the number of divorces for Swiss couples changed from 1990 to 2000?",
    "query": "SELECT year, SUM(amount) as total\nFROM divorces_duration_of_marriage_citizenship_categories WHERE year BETWEEN 1990 AND 2000\n  AND duration_of_marriage = 'Duration of marriage - total'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY year\nORDER BY year;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT year, SUM(amount) as total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\nWHERE year BETWEEN 1990 AND 2000\n  AND su.spatialunit_uid = '0_CH'\n  AND duration_of_marriage = 'Duration of marriage - total'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY year\nORDER BY year;",
    "meta_data": [
      {
        "question": "What is the average number of divorces per year between 1990 and 2000 in Switzerland among Swiss couples?",
        "query": "SELECT AVG(total) as average_divorces_per_year\nFROM (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '0_CH'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n) as subquery;\n",
        "score": 0.23043391108512878
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 2841_A.ADM3, 3543_A.ADM3, 246_A.ADM3, 4078_A.ADM3, 2611_A.ADM3\nyear : 2019, 2016, 1986, 1995, 2007\namount : 6, 10, 0, 12, 11\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat is the average number of divorces per year between 1990 and 2000 in Switzerland among Swiss couples?\n### SQL query\nSELECT AVG(total) as average_divorces_per_year\nFROM (\n  SELECT year, SUM(amount) as total\n  FROM divorces_duration_of_marriage_citizenship_categories JOIN spatial_unit su on divorces_duration_of_marriage_citizenship_categories.spatialunit_uid = su.spatialunit_uid\n  WHERE year BETWEEN 1990 AND 2000\n    AND su.spatialunit_uid = '0_CH'\n    AND duration_of_marriage = 'Duration of marriage - total'\n    AND citizenship_category_husband = 'Switzerland'\n    AND citizenship_category_wife = 'Switzerland'\n  GROUP BY year\n) as subquery;\n\n\n### Question\nHow has the number of divorces for Swiss couples changed from 1990 to 2000?\n### SQL query\n",
    "process_time": 12.494821925880387,
    "num_tokens": 1149,
    "hardness": "unknown",
    "scores": [
      0.23043391108512878
    ],
    "lang": "en"
  },
  {
    "i": 43,
    "question": "Which municipality had the highest number of divorces in 1995 between Swiss couples?",
    "query": "SELECT su.name, d.year, SUM(d.amount) as total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE d.year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND d.duration_of_marriage = 'Duration of marriage - total'\n  AND d.citizenship_category_husband = 'Switzerland'\n  AND d.citizenship_category_wife = 'Switzerland'\nGROUP BY su.name, d.year\nORDER BY total_divorces DESC\nLIMIT 1;\n",
    "db_id": "divorces_duration_of_marriage_citizenship_categories",
    "generated_query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "In 1995, which municipality had the highest number of divorces between Swiss couples who were married for 10-14 years?",
        "query": "SELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces DESC\nLIMIT 1;\n",
        "score": 0.1555119901895523
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.divorces_duration_of_marriage_citizenship_categories (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tduration_of_marriage VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_pk PRIMARY KEY (uid), \n\tCONSTRAINT divorces_duration_of_marriage_citizenship_categories_spatial_un FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in divorces_duration_of_marriage_citizenship_categories and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 2841_A.ADM3, 3543_A.ADM3, 246_A.ADM3, 4078_A.ADM3, 2611_A.ADM3\nyear : 2019, 2016, 1986, 1995, 2007\namount : 6, 10, 0, 12, 11\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\nduration_of_marriage, duration class of marriage, Duration of marriage - total,10-14 years,20 years or more\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn 1995, which municipality had the highest number of divorces between Swiss couples who were married for 10-14 years?\n### SQL query\nSELECT su.name, SUM(amount) AS total_divorces\nFROM divorces_duration_of_marriage_citizenship_categories AS d\nJOIN spatial_unit AS su ON d.spatialunit_uid = su.spatialunit_uid\nWHERE duration_of_marriage = '10-14 years'\n  AND year = 1995\n  AND su.spatialunit_uid LIKE '%_A.ADM3'\n  AND citizenship_category_husband = 'Switzerland'\n  AND citizenship_category_wife = 'Switzerland'\nGROUP BY su.name\nORDER BY total_divorces DESC\nLIMIT 1;\n\n\n### Question\nWhich municipality had the highest number of divorces in 1995 between Swiss couples?\n### SQL query\n",
    "process_time": 9.601089731790125,
    "num_tokens": 1135,
    "hardness": "unknown",
    "scores": [
      0.1555119901895523
    ],
    "lang": "en"
  },
  {
    "i": 44,
    "question": "Give me the average number of marriages at the canton level in 2001, where both the husband and wife are citizens of Swiss?",
    "query": "SELECT  AVG(T1.amount)  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2001  AND T1.citizenship_category_husband = 'Switzerland' AND  T1.citizenship_category_wife = 'Switzerland';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT AVG(amount) FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2001  AND T1.citizenship_category_husband = 'Switzerland' AND  T1.citizenship_category_wife = 'Switzerland';",
    "meta_data": [
      {
        "question": "Give me the 5 highest numbers of marriages that occurred at the canton level in 2010, where both the wife and husband were citizens of foreign countries?",
        "query": "SELECT  T2.name, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2010  AND T1.citizenship_category_husband = 'Foreign country' AND  T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
        "score": 0.352146178483963
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nGive me the 5 highest numbers of marriages that occurred at the canton level in 2010, where both the wife and husband were citizens of foreign countries?\n### SQL query\nSELECT  T2.name, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2010  AND T1.citizenship_category_husband = 'Foreign country' AND  T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n\n\n### Question\nGive me the average number of marriages at the canton level in 2001, where both the husband and wife are citizens of Swiss?\n### SQL query\n",
    "process_time": 9.645453784847632,
    "num_tokens": 1084,
    "hardness": "medium",
    "scores": [
      0.352146178483963
    ],
    "lang": "en"
  },
  {
    "i": 45,
    "question": "Give me the minimum , maximum and average number of marriages at the municipal level in 2011, where both the husband and wife are citizens of foreign countries?",
    "query": "SELECT  MIN(T1.amount),Max(T1.amount),AVG(T1.amount)  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' AND T1.year = 2011  AND T1.citizenship_category_husband = 'Foreign country' AND  T1.citizenship_category_wife = 'Foreign country';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT MIN(amount) AS minimum, MAX(amount) AS maximum, AVG(amount) AS average FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' AND T1.year = 2011  AND T1.citizenship_category_husband = 'Foreign country'  AND T1.citizenship_category_wife = 'Foreign country';",
    "meta_data": [
      {
        "question": "What is the highest number of marriages that occurred at the district level in 2012, where both the wife and husband were citizens of foreign countries?",
        "query": "SELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount,T1.citizenship_category_husband,T1.citizenship_category_wife  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.district = 'True' AND T1.year = 2012  AND T1.citizenship_category_husband = 'Foreign country'  AND T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 1;\n",
        "score": 0.30360132455825806
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat is the highest number of marriages that occurred at the district level in 2012, where both the wife and husband were citizens of foreign countries?\n### SQL query\nSELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount,T1.citizenship_category_husband,T1.citizenship_category_wife  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.district = 'True' AND T1.year = 2012  AND T1.citizenship_category_husband = 'Foreign country'  AND T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 1;\n\n\n### Question\nGive me the minimum , maximum and average number of marriages at the municipal level in 2011, where both the husband and wife are citizens of foreign countries?\n### SQL query\n",
    "process_time": 9.328555250074714,
    "num_tokens": 1114,
    "hardness": "hard",
    "scores": [
      0.30360132455825806
    ],
    "lang": "en"
  },
  {
    "i": 46,
    "question": "In 2006, what were the top 10 cantons with the highest number of marriages where the grooms were Swiss nationals?",
    "query": "SELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount   FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2012  AND T1.citizenship_category_husband = 'Switzerland' AND  T1.citizenship_category_wife = 'Citizenship of wife - total'\nORDER BY T1.amount DESC\nLIMIT 10;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT T2.name, T1.citizenship_category_husband, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2006 AND T1.citizenship_category_husband = 'Switzerland'\nORDER BY T1.amount DESC\nLIMIT 10;",
    "meta_data": [
      {
        "question": "Which five cantons have the highest number of marriages between Swiss men and foreign women on 2011?",
        "query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2011 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
        "score": 0.4029291570186615
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich five cantons have the highest number of marriages between Swiss men and foreign women on 2011?\n### SQL query\nSELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2011 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n\n\n### Question\nIn 2006, what were the top 10 cantons with the highest number of marriages where the grooms were Swiss nationals?\n### SQL query\n",
    "process_time": 7.1598201231099665,
    "num_tokens": 1089,
    "hardness": "extra",
    "scores": [
      0.4029291570186615
    ],
    "lang": "en"
  },
  {
    "i": 47,
    "question": "Which canton has the highest number of marriages between Swiss women and Swiss men on 2018?",
    "query": "SELECT  T2.name,T1.citizenship_category_wife,T1.citizenship_category_husband,T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' and T1.year = 2018 and T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Switzerland'\nORDER BY  T1.amount DESC\nLIMIT 1;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2018 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Switzerland'\nORDER BY T1.amount DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Which five cantons have the highest number of marriages between Swiss men and foreign women on 2011?",
        "query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2011 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
        "score": 0.1955074518918991
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich five cantons have the highest number of marriages between Swiss men and foreign women on 2011?\n### SQL query\nSELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2011 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n\n\n### Question\nWhich canton has the highest number of marriages between Swiss women and Swiss men on 2018?\n### SQL query\n",
    "process_time": 10.09939402085729,
    "num_tokens": 1082,
    "hardness": "extra",
    "scores": [
      0.1955074518918991
    ],
    "lang": "en"
  },
  {
    "i": 48,
    "question": "What are the top five municipalities with the highest number of marriages between Swiss men and foreign women in the year 2018?",
    "query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.municipal = 'True' AND T1.year = 2018 AND T1.citizenship_category_husband = 'Foreign country' and T1.citizenship_category_wife = 'Switzerland'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT T2.name, T2.spatialunit_ontology, T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' AND T1.year = 2018 AND T1.citizenship_category_husband = 'Switzerland' AND T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;",
    "meta_data": [
      {
        "question": "Which five cantons have the highest number of marriages between Swiss men and foreign women on 2011?",
        "query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2011 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
        "score": 0.23719067871570587
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nShow me the top-10 municipalities with the lowest numbers of marriages that the wives were Swiss citizens on 2016?\n### SQL query\nSELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount   FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True' AND T1.year = 2012  AND T1.citizenship_category_wife = 'Switzerland' AND  T1.citizenship_category_husband = 'Citizenship of husband - total'\nORDER BY T1.amount ASC\nLIMIT 10;\n\n\n### Question\nWhat are the top five municipalities with the highest number of marriages between Swiss men and foreign women in the year 2018?\n### SQL query\n",
    "process_time": 13.974448747001588,
    "num_tokens": 1089,
    "hardness": "extra",
    "scores": [
      0.23719067871570587
    ],
    "lang": "en"
  },
  {
    "i": 49,
    "question": "In 2012, how many marriages took place in the District of Affoltern, categorized by the citizenships of the wives and husbands involved?",
    "query": "SELECT T2.name,T1.citizenship_category_husband ,T1.citizenship_category_wife , T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.district = 'True' AND T1.year = 2010  AND T2.name ilike '%Affoltern%' AND T1.citizenship_category_wife != 'Citizenship of wife - total' and T1.citizenship_category_husband != 'Citizenship of husband - total';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT T1.citizenship_category_husband, T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.name = 'Affoltern' AND T2.district = 'True' AND T1.year = 2012;",
    "meta_data": [
      {
        "question": "What is the highest number of marriages that occurred at the district level in 2012, where both the wife and husband were citizens of foreign countries?",
        "query": "SELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount,T1.citizenship_category_husband,T1.citizenship_category_wife  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.district = 'True' AND T1.year = 2012  AND T1.citizenship_category_husband = 'Foreign country'  AND T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 1;\n",
        "score": 0.34836074709892273
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat is the highest number of marriages that occurred at the district level in 2012, where both the wife and husband were citizens of foreign countries?\n### SQL query\nSELECT  T2.name, T2.spatialunit_ontology,T1.year, T1.amount,T1.citizenship_category_husband,T1.citizenship_category_wife  FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.district = 'True' AND T1.year = 2012  AND T1.citizenship_category_husband = 'Foreign country'  AND T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 1;\n\n\n### Question\nIn 2012, how many marriages took place in the District of Affoltern, categorized by the citizenships of the wives and husbands involved?\n### SQL query\n",
    "process_time": 6.507331951055676,
    "num_tokens": 1112,
    "hardness": "unknown",
    "scores": [
      0.34836074709892273
    ],
    "lang": "en"
  },
  {
    "i": 50,
    "question": "How many marriages occurred in Reiden in 1999 with a wife who held Swiss citizenship?",
    "query": "SELECT  T1.citizenship_category_wife, T2.name,T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.name ilike  '%Reiden%' and T1.year = 1999 and T1.citizenship_category_wife = 'Switzerland' and T1.citizenship_category_husband = 'Citizenship of husband - total';\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT T2.name, T1.citizenship_category_wife, T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.name ilike '%Reiden%' and T1.year = 1999 and T1.citizenship_category_wife = 'Switzerland';",
    "meta_data": [
      {
        "question": "How many marriages occurred in switzerland in the year 2010?",
        "query": "SELECT  T2.name,T1.citizenship_category_wife,T1.citizenship_category_husband,T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True' and T1.year = 2010 and T1.citizenship_category_wife = 'Citizenship of wife - total' and T1.citizenship_category_husband = 'Citizenship of husband - total';\n",
        "score": 0.5255515575408936
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat is the number of marriages in Reichenbach im Kandertal in 2020 where both the wife and husband are citizens of foreign countries?\n### SQL query\nSELECT  T2.name,T1.citizenship_category_wife,T1.citizenship_category_husband,T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.name ilike '%Reichenbach im Kandertal%' and T1.year = 2020 and T1.citizenship_category_husband = 'Foreign country' and T1.citizenship_category_wife = 'Foreign country';\n\n\n### Question\nHow many marriages occurred in Reiden in 1999 with a wife who held Swiss citizenship?\n### SQL query\n",
    "process_time": 11.409877964993939,
    "num_tokens": 1088,
    "hardness": "unknown",
    "scores": [
      0.5255515575408936
    ],
    "lang": "en"
  },
  {
    "i": 51,
    "question": "In which year did the Canton of Bern have the highest number of marriages between Swiss citizens and foreigners?",
    "query": "SELECT UN.year, UN.citizenship_category_husband, UN.citizenship_category_wife, UN.amount FROM\n(SELECT T2.name, T1.year, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T2.name  ilike '%Bern%'  AND T1.citizenship_category_wife = 'Switzerland' AND T1.citizenship_category_husband = 'Foreign country'\nUNION ALL\nSELECT T2.name, T1.year, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T2.name  ilike '%Bern%'  AND T1.citizenship_category_wife = 'Foreign country' AND T1.citizenship_category_husband = 'Switzerland') AS UN\nORDER BY UN.amount DESC\nLIMIT 1;\n",
    "db_id": "marriage_citizenship",
    "generated_query": "SELECT T1.year, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.name = 'Bern' AND T1.citizenship_category_husband = 'Switzerland' AND T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Which five cantons have the highest number of marriages between Swiss men and foreign women on 2011?",
        "query": "SELECT T2.name, T1.citizenship_category_husband , T1.citizenship_category_wife, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE  T2.canton = 'True' AND T1.year = 2011 AND T1.citizenship_category_husband = 'Switzerland' and T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n",
        "score": 0.44814422726631165
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.marriage_citizenship (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tcitizenship_category_husband VARCHAR(50), \n\tcitizenship_category_wife VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT marriage_citizenship_pk PRIMARY KEY (uid), \n\tCONSTRAINT marriage_citizenship_spatial_unit_spatialunit_uid_fk FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in marriage_citizenship and 5 examples in each column for high cardinality columns :\nuid : 285741, 285824, 285852, 285767, 285692\nspatialunit_uid : 3543_A.ADM3, 2424_A.ADM3, 4259_A.ADM3, 2275_A.ADM3, 751_A.ADM3\nyear : 2019, 2016, 1986, 2007, 1995\namount : 187, 46, 2, 3, 21\n*/\n\n/*\nColumn name, Column discription, Example values\ncitizenship_category_husband, citizen category husband: either foreign or Swiss, Foreign country,Citizenship of husband - total,Switzerland\ncitizenship_category_wife, citizen category wife: either foreign or Swiss, Foreign country,Citizenship of wife - total,Switzerland\namount, number of divorces, 10\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nGive me the 5 highest numbers of marriages that occurred at the canton level in 2010, where both the wife and husband were citizens of foreign countries?\n### SQL query\nSELECT  T2.name, T1.amount FROM marriage_citizenship as T1\nJOIN spatial_unit AS T2 on T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2010  AND T1.citizenship_category_husband = 'Foreign country' AND  T1.citizenship_category_wife = 'Foreign country'\nORDER BY T1.amount DESC\nLIMIT 5;\n\n\n### Question\nIn which year did the Canton of Bern have the highest number of marriages between Swiss citizens and foreigners?\n### SQL query\n",
    "process_time": 6.747787161031738,
    "num_tokens": 1076,
    "hardness": "unknown",
    "scores": [
      0.44814422726631165
    ],
    "lang": "en"
  },
  {
    "i": 52,
    "question": "What was the total population count in each canton , considering both non-permanent and permanent residents on the year of 2018?",
    "query": "SELECT T1.year, T2.name, T1.population_type, T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True'  AND T1.year = 2018 AND T1.place_of_birth = 'Place of birth - total' AND T1.citizenship = 'Citizenship - total'\nORDER BY  T1.amount DESC;\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT T2.name, SUM(T1.amount) as total_population_count FROM resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.year = 2018\nGROUP BY T2.name;",
    "meta_data": [
      {
        "question": "In 2020, what was the number of individuals categorized as non-permanent residents in the Canton of Zug?",
        "query": "SELECT T1.year,T1.population_type,T1.place_of_birth,T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T2.name ilike '%Zug%' AND T1.year = 2020 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Place of birth - total' AND T1.citizenship = 'Citizenship - total';\n",
        "score": 0.47934025526046753
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 3734_A.ADM3, 5806_A.ADM3, 5908_A.ADM3, 4551_A.ADM3, 5257_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\ncitizenship : Pakistan, Comoros, Solomon Islands, Timor-Leste, Palau\namount : 0, 1, 236, 9, 20\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich municipalities had the largest population of people born in Switzerland who did not have permanent residency by 2020? show me top 5.\n### SQL query\nSELECT T1.year, T2.name, T1.population_type,T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.municipal = 'True'  AND T1.year = 2020 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total'\nORDER BY T1.amount DESC\nLIMIT 5;\n\n\n### Question\nWhat was the total population count in each canton , considering both non-permanent and permanent residents on the year of 2018?\n### SQL query\n",
    "process_time": 8.49503995012492,
    "num_tokens": 1139,
    "hardness": "hard",
    "scores": [
      0.47934025526046753
    ],
    "lang": "en"
  },
  {
    "i": 53,
    "question": "How many people who were born in Switzerland did not possess permanent residency status by 2015? List by citizenship",
    "query": "SELECT T1.year, T1.population_type,T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship != 'Citizenship - total';\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT T1.citizenship, SUM(T1.amount) as total_amount FROM resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True' AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland'\nGROUP BY T1.citizenship;",
    "meta_data": [
      {
        "question": "How many people who were born in Switzerland  did not possess permanent residency status by 2010?",
        "query": "SELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n",
        "score": 0.18009236454963684
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 3734_A.ADM3, 5806_A.ADM3, 5908_A.ADM3, 4551_A.ADM3, 5257_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\ncitizenship : Pakistan, Comoros, Solomon Islands, Timor-Leste, Palau\namount : 0, 1, 236, 9, 20\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many people who were born in Switzerland  did not possess permanent residency status by 2010?\n### SQL query\nSELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n\n\n### Question\nHow many people who were born in Switzerland did not possess permanent residency status by 2015? List by citizenship\n### SQL query\n",
    "process_time": 8.788000480970368,
    "num_tokens": 1103,
    "hardness": "extra",
    "scores": [
      0.18009236454963684
    ],
    "lang": "en"
  },
  {
    "i": 54,
    "question": "How many individuals with Swiss permanent residency were born within the country's borders on 2006?",
    "query": "SELECT T1.year,T1.population_type,T1.place_of_birth,T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True' AND T1.year = 2019 AND T1.population_type = 'Permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT T1.year, T1.population_type, T1.place_of_birth, T1.amount FROM resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True' AND T1.year = 2006 AND T1.population_type = 'Permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';",
    "meta_data": [
      {
        "question": "How many people who were born in Switzerland  did not possess permanent residency status by 2010?",
        "query": "SELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n",
        "score": 0.21370051801204681
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 3734_A.ADM3, 5806_A.ADM3, 5908_A.ADM3, 4551_A.ADM3, 5257_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\ncitizenship : Pakistan, Comoros, Solomon Islands, Timor-Leste, Palau\namount : 0, 1, 236, 9, 20\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many people who were born in Switzerland  did not possess permanent residency status by 2010?\n### SQL query\nSELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n\n\n### Question\nHow many individuals with Swiss permanent residency were born within the country's borders on 2006?\n### SQL query\n",
    "process_time": 8.81028480315581,
    "num_tokens": 1099,
    "hardness": "extra",
    "scores": [
      0.21370051801204681
    ],
    "lang": "en"
  },
  {
    "i": 55,
    "question": "How many individuals in each canton of Switzerland were born abroad and hold Swiss citizenship?",
    "query": "SELECT T2.name, T1.place_of_birth, T1.citizenship, Sum(T1.amount) from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True'   AND T1.place_of_birth = 'Abroad' AND T1.citizenship ilike '%Switzerland%'\nGROUP BY T2.name, T1.place_of_birth, T1.citizenship;\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT T2.name, T1.amount FROM resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.canton = 'True' AND T1.place_of_birth = 'Abroad' AND T1.citizenship = 'Switzerland';",
    "meta_data": [
      {
        "question": "How many people who were born in Switzerland  did not possess permanent residency status by 2010?",
        "query": "SELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n",
        "score": 0.28229856491088867
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 3734_A.ADM3, 5806_A.ADM3, 5908_A.ADM3, 4551_A.ADM3, 5257_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\ncitizenship : Pakistan, Comoros, Solomon Islands, Timor-Leste, Palau\namount : 0, 1, 236, 9, 20\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many people who were born in Switzerland  did not possess permanent residency status by 2010?\n### SQL query\nSELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n\n\n### Question\nHow many individuals in each canton of Switzerland were born abroad and hold Swiss citizenship?\n### SQL query\n",
    "process_time": 6.0356460539624095,
    "num_tokens": 1097,
    "hardness": "unknown",
    "scores": [
      0.28229856491088867
    ],
    "lang": "en"
  },
  {
    "i": 56,
    "question": "How many of Swiss residenc were born within the country and had Iranian Citizenship on 2018?",
    "query": "SELECT T1.year, T1.population_type, T1.place_of_birth, T1.citizenship, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2018 AND T1.place_of_birth = 'Switzerland' AND T1.citizenship ilike '%iran%';\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT T1.year, T1.population_type, T1.place_of_birth, T1.citizenship, T1.amount FROM resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True' AND T1.year = 2018 AND T1.population_type = 'Permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Iran';",
    "meta_data": [
      {
        "question": "How many people who were born in Switzerland  did not possess permanent residency status by 2010?",
        "query": "SELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n",
        "score": 0.3430824279785156
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 3734_A.ADM3, 5806_A.ADM3, 5908_A.ADM3, 4551_A.ADM3, 5257_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\ncitizenship : Pakistan, Comoros, Solomon Islands, Timor-Leste, Palau\namount : 0, 1, 236, 9, 20\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many people who were born in Switzerland  did not possess permanent residency status by 2010?\n### SQL query\nSELECT T1.year, T1.population_type,T1.place_of_birth, T1.amount from resident_population_birthplace_citizenship_type AS T1\nJOIN spatial_unit AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nWHERE T2.country = 'True'  AND T1.year = 2015 AND T1.population_type = 'Non permanent resident population' AND T1.place_of_birth = 'Switzerland' AND T1.citizenship = 'Citizenship - total';\n\n\n### Question\nHow many of Swiss residenc were born within the country and had Iranian Citizenship on 2018?\n### SQL query\n",
    "process_time": 12.359229864086956,
    "num_tokens": 1100,
    "hardness": "unknown",
    "scores": [
      0.3430824279785156
    ],
    "lang": "en"
  },
  {
    "i": 57,
    "question": "How many vehicles do we have in canton zurich in 2020?",
    "query": "SELECT S.name, sum(T.amount) as amount from stock_vehicles as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Zurich%'  and T.year = 2020 and S.canton = 'True'\nGROUP BY S.name;\n",
    "db_id": "resident_population_birthplace_citizenship_type",
    "generated_query": "SELECT S.name, S.spatialunit_ontology, sum(T.amount) as amount from stock_vehicles as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Z_rich%'  and T.year = 2020 and S.canton = 'True' and T.fuel_type != 'total'\nGROUP BY S.name, S.spatialunit_ontology;",
    "meta_data": [
      {
        "question": "How many vehicles do we have in zurich in 2020?",
        "query": "SELECT S.name, S.spatialunit_ontology, sum(T.amount) as amount from stock_vehicles as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Z_rich%'  and T.year = 2020 and (S.canton = 'True' or S.municipal = 'True' or S.district = 'True')\nGROUP BY S.name, S.spatialunit_ontology;\n",
        "score": 0.2108708620071411
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.resident_population_birthplace_citizenship_type (\n\tuid BIGSERIAL NOT NULL, \n\tspatialunit_uid VARCHAR(100), \n\tyear INTEGER, \n\tpopulation_type VARCHAR(50), \n\tplace_of_birth VARCHAR(50), \n\tcitizenship VARCHAR(50), \n\tamount INTEGER, \n\tCONSTRAINT resident_population_birthplace_citizenship_type_pk PRIMARY KEY (uid), \n\tCONSTRAINT resident_population_birthplace_citizenship_type_spatial_unit_sp FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in resident_population_birthplace_citizenship_type and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nspatialunit_uid : 3734_A.ADM3, 5806_A.ADM3, 5908_A.ADM3, 4551_A.ADM3, 5257_A.ADM3\nyear : 2020, 2010, 2019, 2016, 2017\ncitizenship : Pakistan, Comoros, Solomon Islands, Timor-Leste, Palau\namount : 0, 1, 236, 9, 20\n*/\n\n/*\nColumn name, Column discription, Example values\npopulation_type, population type, Non permanent resident population,Permanent resident population\nplace_of_birth, Place of birth: Switzerland or abroad, Abroad,Switzerland,Place of birth - total\ncitizenship, citizenship, Sweden,S\u00e3o Tom\u00e9 and Pr\u00edncipe,Uganda\namount, number of persons, 20\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nHow many vehicles do we have in the city of zurich in 2021?\n### SQL query\nSELECT S.name, S.spatialunit_ontology, sum(T.amount) as amount from stock_vehicles as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name ilike '%Z_rich%'  and T.year = 2021 and S.municipal = 'True' and T.fuel_type != 'total'\nGROUP BY S.name, S.spatialunit_ontology;\n\n\n### Question\nHow many vehicles do we have in canton zurich in 2020?\n### SQL query\n",
    "process_time": 7.351793193956837,
    "num_tokens": 1073,
    "hardness": "unknown",
    "scores": [
      0.2108708620071411
    ],
    "lang": "en"
  },
  {
    "i": 58,
    "question": "What proportion of the Swiss budget will be spent on health in 2010 and 2020?",
    "query": "SELECT year, SUM(percentage_of_total_expenses) as precentage_of_total_expenses_for_health\nFROM government_expenditure_by_function_cofog WHERE function_cofog_broad = 'Health'\n    AND institutional_sector = 'Government'\n    AND year <= 2020\n    AND year >= 2010\nGROUP BY year\nORDER BY year ASC;\n",
    "db_id": "government_expenditure_by_function_cofog",
    "generated_query": "SELECT T.year, SUM(T.percentage_of_total_expenses) as proportion_for_total_expenses_for_health\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Government'\n    AND T.year IN (2010, 2020)\n    AND T.function_cofog_broad = 'Health'\nGROUP BY T.year;",
    "meta_data": [
      {
        "question": "What percentage of the government budget was spent on education in year 2021?",
        "query": "SELECT SUM(T.percentage_of_total_expenses) as percentage_for_total_expenses_for_education\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Government'\n    AND T.year = 2021\n    AND T.function_cofog_broad = 'Education'\nGROUP BY T.function_cofog_broad;\n",
        "score": 0.7289518117904663
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.government_expenditure_by_function_cofog (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tfunction_cofog_narrow TEXT, \n\tfunction_cofog_broad TEXT, \n\tinstitutional_sector TEXT, \n\texpenses_in_million_chf NUMERIC, \n\tpercentage_of_total_expenses NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT government_expenditure_by_function_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT government_expenditure_by_function_cofog_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in government_expenditure_by_function_cofog and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 1995, 2007, 2003\nexpenses_in_million_chf : 2207, 2629, 1321, 5589, 1441\npercentage_of_total_expenses : 0.90000000000000002, 1.00000000000000000, 2.79999999999999982, 2.60000000000000009, 3.10000000000000009\n*/\n\n/*\nColumn name, Column discription, Example values\nfunction_cofog_narrow, Narrow function of govenrment by COFOG (Classification of the functions of government) of the United Nations, Foreign economic aid,General services,Executive and legislative organs, financial and fiscal affairs, external affairs\nfunction_cofog_broad, Broad function of govenrment by COFOG (Classification of the functions of government) of the United Nations, General public services,Defence,Public order and safety\ninstitutional_sector, Institutional Sector, Government,   Confederation,Canton,Commune,Social security funds\nexpenses_in_million_chf, Expenses in million CHF, 2167,2341,2599\npercentage_of_total_expenses, percentage of total expenses, 1.1,1.2,2.6\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat percentage of the government budget was spent on education in year 2021?\n### SQL query\nSELECT SUM(T.percentage_of_total_expenses) as percentage_for_total_expenses_for_education\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Government'\n    AND T.year = 2021\n    AND T.function_cofog_broad = 'Education'\nGROUP BY T.function_cofog_broad;\n\n\n### Question\nWhat proportion of the Swiss budget will be spent on health in 2010 and 2020?\n### SQL query\n",
    "process_time": 7.299154480919242,
    "num_tokens": 1171,
    "hardness": "unknown",
    "scores": [
      0.7289518117904663
    ],
    "lang": "en"
  },
  {
    "i": 59,
    "question": "What were the 3 largest sectors for spending of the confederation in year 2021 and how much were they?",
    "query": "SELECT SUM(T.expenses_in_million_chf) as expenses_in_mio_chf,\n  T.function_cofog_narrow as section_with_the_highest_expenses_2020\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Confederation' AND year = 2020\nGROUP BY T.function_cofog_narrow, T.year, T.institutional_sector\nORDER BY SUM(expenses_in_million_chf) DESC LIMIT 3;\n",
    "db_id": "government_expenditure_by_function_cofog",
    "generated_query": "SELECT T.function_cofog_broad as sector, SUM(T.expenses_in_million_chf) as total_expenses\nFROM government_expenditure_by_function_cofog as T\nWHERE T.institutional_sector = 'Confederation' AND year = 2021\nGROUP BY T.function_cofog_broad, T.year\nORDER BY total_expenses DESC LIMIT 3;",
    "meta_data": [
      {
        "question": "Which division had the highest government spending in 2020?",
        "query": "SELECT T.function_cofog_broad as sector_with_highest_expenses_2020\nFROM government_expenditure_by_function_cofog as T\nWHERE T.institutional_sector = 'Government' AND year = 2020\nGROUP BY T.function_cofog_broad, T.year\nORDER BY SUM(T.expenses_in_million_chf) DESC LIMIT 1;\n",
        "score": 0.4500867426395416
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.government_expenditure_by_function_cofog (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tfunction_cofog_narrow TEXT, \n\tfunction_cofog_broad TEXT, \n\tinstitutional_sector TEXT, \n\texpenses_in_million_chf NUMERIC, \n\tpercentage_of_total_expenses NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT government_expenditure_by_function_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT government_expenditure_by_function_cofog_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in government_expenditure_by_function_cofog and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 1995, 2007, 2003\nexpenses_in_million_chf : 2207, 2629, 1321, 5589, 1441\npercentage_of_total_expenses : 0.90000000000000002, 1.00000000000000000, 2.79999999999999982, 2.60000000000000009, 3.10000000000000009\n*/\n\n/*\nColumn name, Column discription, Example values\nfunction_cofog_narrow, Narrow function of govenrment by COFOG (Classification of the functions of government) of the United Nations, Foreign economic aid,General services,Executive and legislative organs, financial and fiscal affairs, external affairs\nfunction_cofog_broad, Broad function of govenrment by COFOG (Classification of the functions of government) of the United Nations, General public services,Defence,Public order and safety\ninstitutional_sector, Institutional Sector, Government,   Confederation,Canton,Commune,Social security funds\nexpenses_in_million_chf, Expenses in million CHF, 2167,2341,2599\npercentage_of_total_expenses, percentage of total expenses, 1.1,1.2,2.6\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhich division had the highest government spending in 2020?\n### SQL query\nSELECT T.function_cofog_broad as sector_with_highest_expenses_2020\nFROM government_expenditure_by_function_cofog as T\nWHERE T.institutional_sector = 'Government' AND year = 2020\nGROUP BY T.function_cofog_broad, T.year\nORDER BY SUM(T.expenses_in_million_chf) DESC LIMIT 1;\n\n\n### Question\nWhat were the 3 largest sectors for spending of the confederation in year 2021 and how much were they?\n### SQL query\n",
    "process_time": 7.901533186901361,
    "num_tokens": 1178,
    "hardness": "unknown",
    "scores": [
      0.4500867426395416
    ],
    "lang": "en"
  },
  {
    "i": 60,
    "question": "What proportion of the Swiss budget is invested in public safety each year?",
    "query": "SELECT year, SUM(T.percentage_of_total_expenses) as percentage_of_total_expenses_for_safety\nFROM government_expenditure_by_function_cofog AS T\nWHERE LOWER(function_cofog_broad) LIKE '%public%safety%'\n    AND institutional_sector = 'Government'\nGROUP BY year\nORDER BY year ASC;\n",
    "db_id": "government_expenditure_by_function_cofog",
    "generated_query": "SELECT T.year, SUM(T.percentage_of_total_expenses) as proportion_of_budget_invested_in_public_safety\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Government'\n    AND T.function_cofog_broad = 'Public order and safety'\nGROUP BY T.year;",
    "meta_data": [
      {
        "question": "What percentage of the government budget was spent on education in year 2021?",
        "query": "SELECT SUM(T.percentage_of_total_expenses) as percentage_for_total_expenses_for_education\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Government'\n    AND T.year = 2021\n    AND T.function_cofog_broad = 'Education'\nGROUP BY T.function_cofog_broad;\n",
        "score": 0.7593998908996582
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.government_expenditure_by_function_cofog (\n\tuid SERIAL NOT NULL, \n\tyear INTEGER, \n\tfunction_cofog_narrow TEXT, \n\tfunction_cofog_broad TEXT, \n\tinstitutional_sector TEXT, \n\texpenses_in_million_chf NUMERIC, \n\tpercentage_of_total_expenses NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT government_expenditure_by_function_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT government_expenditure_by_function_cofog_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in government_expenditure_by_function_cofog and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nyear : 2019, 2016, 1995, 2007, 2003\nexpenses_in_million_chf : 2207, 2629, 1321, 5589, 1441\npercentage_of_total_expenses : 0.90000000000000002, 1.00000000000000000, 2.79999999999999982, 2.60000000000000009, 3.10000000000000009\n*/\n\n/*\nColumn name, Column discription, Example values\nfunction_cofog_narrow, Narrow function of govenrment by COFOG (Classification of the functions of government) of the United Nations, Foreign economic aid,General services,Executive and legislative organs, financial and fiscal affairs, external affairs\nfunction_cofog_broad, Broad function of govenrment by COFOG (Classification of the functions of government) of the United Nations, General public services,Defence,Public order and safety\ninstitutional_sector, Institutional Sector, Government,   Confederation,Canton,Commune,Social security funds\nexpenses_in_million_chf, Expenses in million CHF, 2167,2341,2599\npercentage_of_total_expenses, percentage of total expenses, 1.1,1.2,2.6\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWhat percentage of the government budget was spent on education in year 2021?\n### SQL query\nSELECT SUM(T.percentage_of_total_expenses) as percentage_for_total_expenses_for_education\nFROM government_expenditure_by_function_cofog as T\nWHERE institutional_sector = 'Government'\n    AND T.year = 2021\n    AND T.function_cofog_broad = 'Education'\nGROUP BY T.function_cofog_broad;\n\n\n### Question\nWhat proportion of the Swiss budget is invested in public safety each year?\n### SQL query\n",
    "process_time": 6.051517533138394,
    "num_tokens": 1165,
    "hardness": "unknown",
    "scores": [
      0.7593998908996582
    ],
    "lang": "en"
  },
  {
    "i": 61,
    "question": "Welches drei medizinischen Ger\u00e4te hatten den meisten Zuwachs zwischen 2013 und 2021 in der Schweiz und wieviele Neuanschaffungen gab es jeweils?",
    "query": "SELECT T.genutzte_infrastruktur,\n    SUM(CASE WHEN T.jahr = 2021 THEN T.anzahl_gerate ELSE - T.anzahl_gerate END) AS zuwachs_an_geraeten\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country\n    AND T.jahr IN (2013, 2021)\nGROUP BY T.genutzte_infrastruktur\nORDER BY zuwachs_an_geraeten DESC\nLIMIT 3;\n",
    "db_id": "medizinisch_technische_infrastruktur",
    "generated_query": "SELECT T.genutzte_infrastruktur, (T.anzahl_gerate - T2.anzahl_gerate) as zuwachs\nFROM medizinisch_technische_infrastruktur as T\nJOIN medizinisch_technische_infrastruktur as T2 on T.genutzte_infrastruktur = T2.genutzte_infrastruktur\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2021\n  AND T2.jahr = 2013\nORDER BY zuwachs DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Welche medizinischen Ger\u00e4te z\u00e4hlen in der Schweiz zur medizinischen Infrastruktur und wieviele gab es davon jeweils 2020? Sortiere nach Ger\u00e4teanzahl.",
        "query": "SELECT SUM(T.anzahl_gerate) as gerate_anzahl_2020, T.genutzte_infrastruktur\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2020\nGROUP BY T.genutzte_infrastruktur\nORDER BY gerate_anzahl_2020 DESC;\n",
        "score": 0.25447916984558105
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.medizinisch_technische_infrastruktur (\n\tuid SERIAL NOT NULL, \n\tgenutzte_infrastruktur TEXT, \n\tjahr INTEGER, \n\tanzahl_gerate NUMERIC, \n\tanzahl_untersuchungen_total NUMERIC, \n\tanzahl_ambulante_untersuchungen NUMERIC, \n\tanzahl_stationare_untersuchungen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT medizinisch_technische_infrastruktur_pkey PRIMARY KEY (uid), \n\tCONSTRAINT medizinisch_technische_infrastruktur_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in medizinisch_technische_infrastruktur and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_gerate : 12, 137, 146, 128, 19\nanzahl_untersuchungen_total : 1178655, 59151, 1796, 119395, 130066\nanzahl_ambulante_untersuchungen : 1570, 10846, 55384, 62746, 425375\nanzahl_stationare_untersuchungen : 12857, 5512, 61, 89, 4664\nspatialunit_uid : 22_A.ADM1, 0_CH, 26_A.ADM1, 19_A.ADM1, 1_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\ngenutzte_infrastruktur, genutzte Infrastruktur, Gamma Camera (inklusive Szintigraphie und SPECT-Scanner),Linearbeschleuniger (Radiotherapie),MRI\nanzahl_gerate, Anzahl der Ger\u00e4te, None\nanzahl_untersuchungen_total, Anzahl aller Untersuchungen, None\nanzahl_ambulante_untersuchungen, Anzahl der ambulanten Untersuchungen, None\nanzahl_stationare_untersuchungen, Anzahl der station\u00e4ren Untersuchungen, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche medizinischen Ger\u00e4te z\u00e4hlen in der Schweiz zur medizinischen Infrastruktur und wieviele gab es davon jeweils 2020? Sortiere nach Ger\u00e4teanzahl.\n### SQL query\nSELECT SUM(T.anzahl_gerate) as gerate_anzahl_2020, T.genutzte_infrastruktur\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2020\nGROUP BY T.genutzte_infrastruktur\nORDER BY gerate_anzahl_2020 DESC;\n\n\n### Question\nWelches drei medizinischen Ger\u00e4te hatten den meisten Zuwachs zwischen 2013 und 2021 in der Schweiz und wieviele Neuanschaffungen gab es jeweils?\n### SQL query\n",
    "process_time": 16.893585212063044,
    "num_tokens": 1279,
    "hardness": "unknown",
    "scores": [
      0.25447916984558105
    ],
    "lang": "de"
  },
  {
    "i": 62,
    "question": "Welches war das medizinische Ger\u00e4t 2021 in der Schweiz mit den meisten Untersuchungen und wieviele Untersuchungen gab es damit?",
    "query": "SELECT T.genutzte_infrastruktur as meistgenutztes_geraet_2021,\n  SUM(anzahl_untersuchungen_total) as anzahl_untersuchungen\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND jahr = '2021'\nGROUP BY T.genutzte_infrastruktur\nORDER BY anzahl_untersuchungen DESC LIMIT 1;\n",
    "db_id": "medizinisch_technische_infrastruktur",
    "generated_query": "SELECT T.genutzte_infrastruktur, T.anzahl_untersuchungen_total\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2021\nORDER BY T.anzahl_untersuchungen_total DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Welche medizinischen Ger\u00e4te z\u00e4hlen in der Schweiz zur medizinischen Infrastruktur und wieviele gab es davon jeweils 2020? Sortiere nach Ger\u00e4teanzahl.",
        "query": "SELECT SUM(T.anzahl_gerate) as gerate_anzahl_2020, T.genutzte_infrastruktur\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2020\nGROUP BY T.genutzte_infrastruktur\nORDER BY gerate_anzahl_2020 DESC;\n",
        "score": 0.29051417112350464
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.medizinisch_technische_infrastruktur (\n\tuid SERIAL NOT NULL, \n\tgenutzte_infrastruktur TEXT, \n\tjahr INTEGER, \n\tanzahl_gerate NUMERIC, \n\tanzahl_untersuchungen_total NUMERIC, \n\tanzahl_ambulante_untersuchungen NUMERIC, \n\tanzahl_stationare_untersuchungen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT medizinisch_technische_infrastruktur_pkey PRIMARY KEY (uid), \n\tCONSTRAINT medizinisch_technische_infrastruktur_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in medizinisch_technische_infrastruktur and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_gerate : 12, 137, 146, 128, 19\nanzahl_untersuchungen_total : 1178655, 59151, 1796, 119395, 130066\nanzahl_ambulante_untersuchungen : 1570, 10846, 55384, 62746, 425375\nanzahl_stationare_untersuchungen : 12857, 5512, 61, 89, 4664\nspatialunit_uid : 22_A.ADM1, 0_CH, 26_A.ADM1, 19_A.ADM1, 1_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\ngenutzte_infrastruktur, genutzte Infrastruktur, Gamma Camera (inklusive Szintigraphie und SPECT-Scanner),Linearbeschleuniger (Radiotherapie),MRI\nanzahl_gerate, Anzahl der Ger\u00e4te, None\nanzahl_untersuchungen_total, Anzahl aller Untersuchungen, None\nanzahl_ambulante_untersuchungen, Anzahl der ambulanten Untersuchungen, None\nanzahl_stationare_untersuchungen, Anzahl der station\u00e4ren Untersuchungen, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche medizinischen Ger\u00e4te z\u00e4hlen in der Schweiz zur medizinischen Infrastruktur und wieviele gab es davon jeweils 2020? Sortiere nach Ger\u00e4teanzahl.\n### SQL query\nSELECT SUM(T.anzahl_gerate) as gerate_anzahl_2020, T.genutzte_infrastruktur\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2020\nGROUP BY T.genutzte_infrastruktur\nORDER BY gerate_anzahl_2020 DESC;\n\n\n### Question\nWelches war das medizinische Ger\u00e4t 2021 in der Schweiz mit den meisten Untersuchungen und wieviele Untersuchungen gab es damit?\n### SQL query\n",
    "process_time": 10.595679212128744,
    "num_tokens": 1270,
    "hardness": "unknown",
    "scores": [
      0.29051417112350464
    ],
    "lang": "de"
  },
  {
    "i": 63,
    "question": "Welche f\u00fcnf Kantone hatte 2021 die gr\u00f6sste medizinische Infrastruktur mit den meisten Ger\u00e4ten und wieviele Ger\u00e4te waren es?",
    "query": "SELECT S.name_de as kanton_mit_groesster_medizinischer_infrastruktur, SUM(T.anzahl_gerate) as anzahl_geraete\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY anzahl_geraete DESC LIMIT 5;\n",
    "db_id": "medizinisch_technische_infrastruktur",
    "generated_query": "SELECT S.name_de as kanton_mit_meisten_geraeten,\n  SUM(T.anzahl_gerate) as anzahl_geraete\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY anzahl_geraete DESC LIMIT 5;",
    "meta_data": [
      {
        "question": "Welche medizinischen Ger\u00e4te z\u00e4hlen in der Schweiz zur medizinischen Infrastruktur und wieviele gab es davon jeweils 2020? Sortiere nach Ger\u00e4teanzahl.",
        "query": "SELECT SUM(T.anzahl_gerate) as gerate_anzahl_2020, T.genutzte_infrastruktur\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND T.jahr = 2020\nGROUP BY T.genutzte_infrastruktur\nORDER BY gerate_anzahl_2020 DESC;\n",
        "score": 0.3503221571445465
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.medizinisch_technische_infrastruktur (\n\tuid SERIAL NOT NULL, \n\tgenutzte_infrastruktur TEXT, \n\tjahr INTEGER, \n\tanzahl_gerate NUMERIC, \n\tanzahl_untersuchungen_total NUMERIC, \n\tanzahl_ambulante_untersuchungen NUMERIC, \n\tanzahl_stationare_untersuchungen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT medizinisch_technische_infrastruktur_pkey PRIMARY KEY (uid), \n\tCONSTRAINT medizinisch_technische_infrastruktur_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in medizinisch_technische_infrastruktur and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_gerate : 12, 137, 146, 128, 19\nanzahl_untersuchungen_total : 1178655, 59151, 1796, 119395, 130066\nanzahl_ambulante_untersuchungen : 1570, 10846, 55384, 62746, 425375\nanzahl_stationare_untersuchungen : 12857, 5512, 61, 89, 4664\nspatialunit_uid : 22_A.ADM1, 0_CH, 26_A.ADM1, 19_A.ADM1, 1_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\ngenutzte_infrastruktur, genutzte Infrastruktur, Gamma Camera (inklusive Szintigraphie und SPECT-Scanner),Linearbeschleuniger (Radiotherapie),MRI\nanzahl_gerate, Anzahl der Ger\u00e4te, None\nanzahl_untersuchungen_total, Anzahl aller Untersuchungen, None\nanzahl_ambulante_untersuchungen, Anzahl der ambulanten Untersuchungen, None\nanzahl_stationare_untersuchungen, Anzahl der station\u00e4ren Untersuchungen, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche f\u00fcnf Kantone machte 2021 den besten Nutzen von seiner CT Scanner mit den meisten Untersuchungen pro CT Scanner und wieviele Untersuchungen gab es pro Ger\u00e4t und auf wieviele Ger\u00e4te verteilten sie sich?\n### SQL query\nSELECT S.name_de as kanton_mit_meisten_untersuchungen_pro_geraet,\n  ROUND(SUM(T.anzahl_untersuchungen_total) / SUM(T.anzahl_gerate), 0) as untersuchungen_pro_geraet,\n  SUM(T.anzahl_gerate) as anzahl_geraete\nFROM medizinisch_technische_infrastruktur as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.jahr = 2021\n  AND T.genutzte_infrastruktur LIKE 'CT%'\n  AND T.anzahl_gerate != 0\nGROUP BY S.name_de\nORDER BY untersuchungen_pro_geraet DESC LIMIT 5;\n\n\n### Question\nWelche f\u00fcnf Kantone hatte 2021 die gr\u00f6sste medizinische Infrastruktur mit den meisten Ger\u00e4ten und wieviele Ger\u00e4te waren es?\n### SQL query\n",
    "process_time": 12.23921492183581,
    "num_tokens": 1357,
    "hardness": "unknown",
    "scores": [
      0.3503221571445465
    ],
    "lang": "de"
  },
  {
    "i": 64,
    "question": "Welcher Vorlage in welchem Jahr hatte die meisten Nein Stimmen und bei welcher Wahlbeteiligung und wievielen Ja Stimmen in Prozent?",
    "query": "SELECT T.vorlage, T.jahr, T.anzahl_nein_stimmen AS hoechste_anzahl_nein_stimmen, T.beteiligung_in_prozent, T.ja_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\nORDER BY hoechste_anzahl_nein_stimmen DESC LIMIT 1;\n",
    "db_id": "volksabstimmung_nach_kanton_seit_1861",
    "generated_query": "SELECT T.vorlage AS vorlage_mit_meisten_nein_stimmen, T.jahr,\n  MAX(T.anzahl_nein_stimmen) AS anzahl_nein_stimmen, T.beteiligung_in_prozent, T.ja_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE' AND S.name_de = 'Schweiz'\nGROUP BY T.vorlage, T.jahr, T.beteiligung_in_prozent, T.ja_in_prozent\nORDER BY anzahl_nein_stimmen DESC LIMIT 1;",
    "meta_data": [
      {
        "question": "Welche Volksabstimmung und in welchem Jahr hatte die wenigsten g\u00fcltigen Stimmenzettel? Wieviele waren es? Und wie hoch war die Wahlbeteiligung?",
        "query": "SELECT T.vorlage AS vorlage_mit_wenigsten_gueltigen_stimmenzetteln, T.jahr,\n  MIN(T.anzahl_gueltige_stimmzettel) AS anzahl_gueltige_stimmzettel, T.beteiligung_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE' AND S.name_de = 'Schweiz'\nGROUP BY T.vorlage, T.jahr, T.beteiligung_in_prozent\nORDER BY anzahl_gueltige_stimmzettel ASC LIMIT 1;\n",
        "score": 0.09679127484560013
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.volksabstimmung_nach_kanton_seit_1861 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tvorlage TEXT, \n\tanzahl_stimmberechtigte NUMERIC, \n\tanzahl_abgegebene_stimmen NUMERIC, \n\tbeteiligung_in_prozent NUMERIC, \n\tanzahl_gueltige_stimmzettel NUMERIC, \n\tanzahl_ja_stimmen NUMERIC, \n\tanzahl_nein_stimmen NUMERIC, \n\tja_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_pkey PRIMARY KEY (uid), \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in volksabstimmung_nach_kanton_seit_1861 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 2007, 2003, 2022\nvorlage : Volksinitiative \u00abEnergie- statt Mehrwertsteuer\u00bb, Volksinitiative \u00abP\u00e4dophile sollen nicht mehr mit Kindern arbeiten d\u00fcrfen\u00bb, Volksinitiative \u00abf\u00fcr mehr Verkehrssicherheit durch Tempo 30 innerorts mit Ausnahmen (Strassen f\u00fcr alle)\u00bb, Bundesgesetz \u00fcber die Armee und die Milit\u00e4rverwaltung (Ausbildungszusammenarbeit), Bundesbeschluss \u00fcber die Genehmigung und die Umsetzung des Notenaustauschs zwischen der Schweiz und der EU betreffend die \u00dcbernahme der Richtlinie (EU) 2017/853 zur \u00c4nderung der EU-Waffenrichtlinie (Weiterentwicklung des Schengen-Besitzstands)\nanzahl_stimmberechtigte : 5420789, 4698399, 5429641, 5174961, 5083921\nanzahl_abgegebene_stimmen : 2030846, 2291470, 1972596, 2494848, 2490785\nbeteiligung_in_prozent : 47.1700000000000017, 34.5200000000000031, 53.8200000000000003, 37.8500000000000014, 45.7500000000000000\nanzahl_gueltige_stimmzettel : 2908406, 2865054, 2363416, 2554665, 1705557\nanzahl_ja_stimmen : 1541928, 1062703, 1144845, 1319276, 175405\nanzahl_nein_stimmen : 504167, 1528114, 1798132, 1634191, 1159794\nja_in_prozent : 27.26999999999999957, 34.00999999999999801, 37.20000000000000284, 54.60999999999999943, 35.11999999999999744\n*/\n\n/*\nColumn name, Column discription, Example values\nvorlage, Titel der Abstimmungsvorlage, Bundesgesetz \u00fcber die Errichtung der schweizerischen Bundesbank,Bundesbeschluss betreffend Revision von Art. 103 der Bundesverfassung und Aufnahme eines Artikels 114bis in die Bundesverfassung,Volksinitiative \u00abf\u00fcr die vermehrte Mitbestimmung der Bundesversammlung und des Schweizervolkes im Nationalstrassenbau\u00bb\nanzahl_stimmberechtigte, Anzahl Stimmberechtigte, None\nanzahl_abgegebene_stimmen, Anzahl abgegebene Stimmenen, None\nbeteiligung_in_prozent, Wahlbeteiligung in Prozent, None\nanzahl_gueltige_stimmzettel, Anzahl g\u00fcltige Stimmenzettel, None\nanzahl_ja_stimmen, Anzahl ja Stimmen, None\nanzahl_nein_stimmen, Anzahl nein Stimmen, None\nja_in_prozent, ja Stimmen in Prozent der Gesamtstimmen, None\n*/\n\n\n\n### Question\nWelche Volksabstimmung und in welchem Jahr hatte die wenigsten g\u00fcltigen Stimmenzettel? Wieviele waren es? Und wie hoch war die Wahlbeteiligung?\n### SQL query\nSELECT T.vorlage AS vorlage_mit_wenigsten_gueltigen_stimmenzetteln, T.jahr,\n  MIN(T.anzahl_gueltige_stimmzettel) AS anzahl_gueltige_stimmzettel, T.beteiligung_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE' AND S.name_de = 'Schweiz'\nGROUP BY T.vorlage, T.jahr, T.beteiligung_in_prozent\nORDER BY anzahl_gueltige_stimmzettel ASC LIMIT 1;\n\n\n### Question\nWelcher Vorlage in welchem Jahr hatte die meisten Nein Stimmen und bei welcher Wahlbeteiligung und wievielen Ja Stimmen in Prozent?\n### SQL query\n",
    "process_time": 14.74997129291296,
    "num_tokens": 1801,
    "hardness": "unknown",
    "scores": [
      0.09679127484560013
    ],
    "lang": "de"
  },
  {
    "i": 65,
    "question": "Welches waren die drei Volksabstimmung mit der h\u00f6chsten Beteiligung, wann fanden sie statt und wie hoch war die Beteiligung in Prozent?",
    "query": "SELECT T.jahr, MAX(T.beteiligung_in_prozent) AS hoechste_beteiligung_in_prozent, T.vorlage\nFROM volksabstimmung_nach_kanton_seit_1861 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.beteiligung_in_prozent IS NOT NULL\nGROUP BY T.jahr, T.vorlage\nORDER BY hoechste_beteiligung_in_prozent DESC\nLIMIT 3;\n",
    "db_id": "volksabstimmung_nach_kanton_seit_1861",
    "generated_query": "SELECT T.vorlage, T.jahr, T.beteiligung_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE' AND S.name_de = 'Schweiz'\nORDER BY T.beteiligung_in_prozent DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Welche Vorlage in welchem Jahr und welchem Kanton bekam jemals die h\u00f6chste Annahme in Prozent und wie hoch war diese Annahme bei welcher Wahlbeteiligung?",
        "query": "SELECT T.vorlage, T.jahr, S.name_de AS kanton, T.ja_in_prozent as hoechste_annahme, T.beteiligung_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.ja_in_prozent IS NOT NULL\nORDER BY hoechste_annahme DESC LIMIT 1;\n",
        "score": 0.4150695502758026
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.volksabstimmung_nach_kanton_seit_1861 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tvorlage TEXT, \n\tanzahl_stimmberechtigte NUMERIC, \n\tanzahl_abgegebene_stimmen NUMERIC, \n\tbeteiligung_in_prozent NUMERIC, \n\tanzahl_gueltige_stimmzettel NUMERIC, \n\tanzahl_ja_stimmen NUMERIC, \n\tanzahl_nein_stimmen NUMERIC, \n\tja_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_pkey PRIMARY KEY (uid), \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in volksabstimmung_nach_kanton_seit_1861 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 2007, 2003, 2022\nvorlage : Volksinitiative \u00abEnergie- statt Mehrwertsteuer\u00bb, Volksinitiative \u00abP\u00e4dophile sollen nicht mehr mit Kindern arbeiten d\u00fcrfen\u00bb, Volksinitiative \u00abf\u00fcr mehr Verkehrssicherheit durch Tempo 30 innerorts mit Ausnahmen (Strassen f\u00fcr alle)\u00bb, Bundesgesetz \u00fcber die Armee und die Milit\u00e4rverwaltung (Ausbildungszusammenarbeit), Bundesbeschluss \u00fcber die Genehmigung und die Umsetzung des Notenaustauschs zwischen der Schweiz und der EU betreffend die \u00dcbernahme der Richtlinie (EU) 2017/853 zur \u00c4nderung der EU-Waffenrichtlinie (Weiterentwicklung des Schengen-Besitzstands)\nanzahl_stimmberechtigte : 5420789, 4698399, 5429641, 5174961, 5083921\nanzahl_abgegebene_stimmen : 2030846, 2291470, 1972596, 2494848, 2490785\nbeteiligung_in_prozent : 47.1700000000000017, 34.5200000000000031, 53.8200000000000003, 37.8500000000000014, 45.7500000000000000\nanzahl_gueltige_stimmzettel : 2908406, 2865054, 2363416, 2554665, 1705557\nanzahl_ja_stimmen : 1541928, 1062703, 1144845, 1319276, 175405\nanzahl_nein_stimmen : 504167, 1528114, 1798132, 1634191, 1159794\nja_in_prozent : 27.26999999999999957, 34.00999999999999801, 37.20000000000000284, 54.60999999999999943, 35.11999999999999744\n*/\n\n/*\nColumn name, Column discription, Example values\nvorlage, Titel der Abstimmungsvorlage, Bundesgesetz \u00fcber die Errichtung der schweizerischen Bundesbank,Bundesbeschluss betreffend Revision von Art. 103 der Bundesverfassung und Aufnahme eines Artikels 114bis in die Bundesverfassung,Volksinitiative \u00abf\u00fcr die vermehrte Mitbestimmung der Bundesversammlung und des Schweizervolkes im Nationalstrassenbau\u00bb\nanzahl_stimmberechtigte, Anzahl Stimmberechtigte, None\nanzahl_abgegebene_stimmen, Anzahl abgegebene Stimmenen, None\nbeteiligung_in_prozent, Wahlbeteiligung in Prozent, None\nanzahl_gueltige_stimmzettel, Anzahl g\u00fcltige Stimmenzettel, None\nanzahl_ja_stimmen, Anzahl ja Stimmen, None\nanzahl_nein_stimmen, Anzahl nein Stimmen, None\nja_in_prozent, ja Stimmen in Prozent der Gesamtstimmen, None\n*/\n\n\n\n### Question\nWelche Volksabstimmung und in welchem Jahr hatte die wenigsten g\u00fcltigen Stimmenzettel? Wieviele waren es? Und wie hoch war die Wahlbeteiligung?\n### SQL query\nSELECT T.vorlage AS vorlage_mit_wenigsten_gueltigen_stimmenzetteln, T.jahr,\n  MIN(T.anzahl_gueltige_stimmzettel) AS anzahl_gueltige_stimmzettel, T.beteiligung_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE' AND S.name_de = 'Schweiz'\nGROUP BY T.vorlage, T.jahr, T.beteiligung_in_prozent\nORDER BY anzahl_gueltige_stimmzettel ASC LIMIT 1;\n\n\n### Question\nWelches waren die drei Volksabstimmung mit der h\u00f6chsten Beteiligung, wann fanden sie statt und wie hoch war die Beteiligung in Prozent?\n### SQL query\n",
    "process_time": 8.811208735918626,
    "num_tokens": 1805,
    "hardness": "unknown",
    "scores": [
      0.4150695502758026
    ],
    "lang": "de"
  },
  {
    "i": 66,
    "question": "Welches ist aktuellest Vorlage die schweizweit angenommen wurde, aber bei der in der Mehrheit der Kanton dagegen gestimmt wurde? Zeige auch wieviel Prozent Ja Stimmen sie Schweiz weit bekam.",
    "query": "SELECT T.vorlage,\n  MAX(CASE WHEN T.ja_in_prozent > 50 AND S.country = 'TRUE' THEN T.ja_in_prozent ELSE NULL END) AS angenommen_gesamt,\n  COUNT(CASE WHEN T.ja_in_prozent > 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END) AS angenommen_in,\n  COUNT(CASE WHEN T.ja_in_prozent <= 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END) AS abgelehnt_in\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nGROUP BY T.vorlage, T.jahr\nHAVING MAX(CASE WHEN T.ja_in_prozent > 50 AND S.country = 'TRUE' THEN T.ja_in_prozent ELSE NULL END) IS NOT NULL\n   AND COUNT(CASE WHEN T.ja_in_prozent <= 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END) > COUNT(CASE WHEN T.ja_in_prozent > 50 AND S.canton = 'TRUE' THEN 1 ELSE NULL END)\nORDER BY T.jahr DESC LIMIT 1;\n",
    "db_id": "volksabstimmung_nach_kanton_seit_1861",
    "generated_query": "SELECT T.vorlage AS aktuellest_vorlage, T.ja_in_prozent AS ja_stimmen_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.ja_in_prozent > 50\nAND (SELECT COUNT(*) FROM volksabstimmung_nach_kanton_seit_1861 WHERE vorlage = T.vorlage AND ja_in_prozent <= 50) > (SELECT COUNT(*) FROM volksabstimmung_nach_kanton_seit_1861 WHERE vorlage = T.vorlage AND ja_in_prozent > 50)\nGROUP BY T.vorlage, T.ja_in_prozent\nORDER BY T.jahr DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Welche Vorlage in welchem Jahr und welchem Kanton bekam jemals die h\u00f6chste Annahme in Prozent und wie hoch war diese Annahme bei welcher Wahlbeteiligung?",
        "query": "SELECT T.vorlage, T.jahr, S.name_de AS kanton, T.ja_in_prozent as hoechste_annahme, T.beteiligung_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.ja_in_prozent IS NOT NULL\nORDER BY hoechste_annahme DESC LIMIT 1;\n",
        "score": 0.538536787033081
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.volksabstimmung_nach_kanton_seit_1861 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tvorlage TEXT, \n\tanzahl_stimmberechtigte NUMERIC, \n\tanzahl_abgegebene_stimmen NUMERIC, \n\tbeteiligung_in_prozent NUMERIC, \n\tanzahl_gueltige_stimmzettel NUMERIC, \n\tanzahl_ja_stimmen NUMERIC, \n\tanzahl_nein_stimmen NUMERIC, \n\tja_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_pkey PRIMARY KEY (uid), \n\tCONSTRAINT volksabstimmung_nach_kanton_seit_1861_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in volksabstimmung_nach_kanton_seit_1861 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 2007, 2003, 2022\nvorlage : Volksinitiative \u00abEnergie- statt Mehrwertsteuer\u00bb, Volksinitiative \u00abP\u00e4dophile sollen nicht mehr mit Kindern arbeiten d\u00fcrfen\u00bb, Volksinitiative \u00abf\u00fcr mehr Verkehrssicherheit durch Tempo 30 innerorts mit Ausnahmen (Strassen f\u00fcr alle)\u00bb, Bundesgesetz \u00fcber die Armee und die Milit\u00e4rverwaltung (Ausbildungszusammenarbeit), Bundesbeschluss \u00fcber die Genehmigung und die Umsetzung des Notenaustauschs zwischen der Schweiz und der EU betreffend die \u00dcbernahme der Richtlinie (EU) 2017/853 zur \u00c4nderung der EU-Waffenrichtlinie (Weiterentwicklung des Schengen-Besitzstands)\nanzahl_stimmberechtigte : 5420789, 4698399, 5429641, 5174961, 5083921\nanzahl_abgegebene_stimmen : 2030846, 2291470, 1972596, 2494848, 2490785\nbeteiligung_in_prozent : 47.1700000000000017, 34.5200000000000031, 53.8200000000000003, 37.8500000000000014, 45.7500000000000000\nanzahl_gueltige_stimmzettel : 2908406, 2865054, 2363416, 2554665, 1705557\nanzahl_ja_stimmen : 1541928, 1062703, 1144845, 1319276, 175405\nanzahl_nein_stimmen : 504167, 1528114, 1798132, 1634191, 1159794\nja_in_prozent : 27.26999999999999957, 34.00999999999999801, 37.20000000000000284, 54.60999999999999943, 35.11999999999999744\n*/\n\n/*\nColumn name, Column discription, Example values\nvorlage, Titel der Abstimmungsvorlage, Bundesgesetz \u00fcber die Errichtung der schweizerischen Bundesbank,Bundesbeschluss betreffend Revision von Art. 103 der Bundesverfassung und Aufnahme eines Artikels 114bis in die Bundesverfassung,Volksinitiative \u00abf\u00fcr die vermehrte Mitbestimmung der Bundesversammlung und des Schweizervolkes im Nationalstrassenbau\u00bb\nanzahl_stimmberechtigte, Anzahl Stimmberechtigte, None\nanzahl_abgegebene_stimmen, Anzahl abgegebene Stimmenen, None\nbeteiligung_in_prozent, Wahlbeteiligung in Prozent, None\nanzahl_gueltige_stimmzettel, Anzahl g\u00fcltige Stimmenzettel, None\nanzahl_ja_stimmen, Anzahl ja Stimmen, None\nanzahl_nein_stimmen, Anzahl nein Stimmen, None\nja_in_prozent, ja Stimmen in Prozent der Gesamtstimmen, None\n*/\n\n\n\n### Question\nWelche Kantone haben 2023 gegen das Bundesgesetz \u00fcber Klimaschutz gestimmt und wieviel Prozent Ja Stimmen gab es dort jeweils?\n### SQL query\nSELECT S.name_de as kanton_gegen_klimaschutzgesetz, T.ja_in_prozent\nFROM volksabstimmung_nach_kanton_seit_1861 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\nAND LOWER(T.vorlage) LIKE '%bundesgesetz%klimaschutz%' AND T.jahr = 2023\nAND T.ja_in_prozent <= 50\nGROUP BY S.name_de, T.vorlage, T.jahr, T.ja_in_prozent;\n\n\n### Question\nWelches ist aktuellest Vorlage die schweizweit angenommen wurde, aber bei der in der Mehrheit der Kanton dagegen gestimmt wurde? Zeige auch wieviel Prozent Ja Stimmen sie Schweiz weit bekam.\n### SQL query\n",
    "process_time": 15.423649302916601,
    "num_tokens": 1792,
    "hardness": "unknown",
    "scores": [
      0.538536787033081
    ],
    "lang": "de"
  },
  {
    "i": 67,
    "question": "Zeigen Sie mir den Gesamtstromverbrauch der Gemeinden in Basel-Landschaft im Jahr 2000 gegen\u00fcber 2020.",
    "query": "SELECT T.jahr , SUM(T.endverbrauch_elektrizitaet_mwh) as gesamt_endverbrauch_elektrizitaet_mwh_2020\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2000, 2020)\nGROUP BY T.jahr\nORDER BY gesamt_endverbrauch_elektrizitaet_mwh_2020 DESC;\n",
    "db_id": "basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr",
    "generated_query": "SELECT T.jahr, SUM(T.endverbrauch_elektrizitaet_mwh) as gesamt_endverbrauch_elektrizitaet_mwh\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND (T.jahr = 2000 OR T.jahr = 2020)\nGROUP BY T.jahr\nORDER BY T.jahr DESC;",
    "meta_data": [
      {
        "question": "Wie hoch war der durchschnittliche j\u00e4hrliche Stromverbrauch der Gemeinden im Kanton Basel-Landschaft in den Jahren 2000 bis 2020?",
        "query": "SELECT T.jahr , AVG(T.endverbrauch_elektrizitaet_mwh) as mittlerer_endverbrauch_elektrizitaet_mwh\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2000\n    AND T.jahr <= 2020\nGROUP BY T.jahr\nORDER BY T.jahr DESC;\n",
        "score": 0.3784956932067871
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tendverbrauch_elektrizitaet_mwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und__pkey1 PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_na_spatialunit_uid_fkey1 FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nendverbrauch_elektrizitaet_mwh : 12707.00000000000000, 22128.00000000000000, 5606.00000000000000, 2631.00000000000000, 5412.00000000000000\nspatialunit_uid : 2841_A.ADM3, 2806_A.ADM3, 2809_A.ADM3, 2774_A.ADM3, 2847_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nendverbrauch_elektrizitaet_mwh, Endverbrauch Elektrizitaet Mwh, 536937258529674\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war der durchschnittliche j\u00e4hrliche Stromverbrauch der Gemeinden im Kanton Basel-Landschaft in den Jahren 2000 bis 2020?\n### SQL query\nSELECT T.jahr , AVG(T.endverbrauch_elektrizitaet_mwh) as mittlerer_endverbrauch_elektrizitaet_mwh\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2000\n    AND T.jahr <= 2020\nGROUP BY T.jahr\nORDER BY T.jahr DESC;\n\n\n### Question\nZeigen Sie mir den Gesamtstromverbrauch der Gemeinden in Basel-Landschaft im Jahr 2000 gegen\u00fcber 2020.\n### SQL query\n",
    "process_time": 16.1850257050246,
    "num_tokens": 1151,
    "hardness": "unknown",
    "scores": [
      0.3784956932067871
    ],
    "lang": "de"
  },
  {
    "i": 68,
    "question": "Welche der Gemeinden Bottmingen und Birsfelden in Basel-Landschaft hatte 2018 den h\u00f6chsten Stromverbrauch?",
    "query": "SELECT S.name AS gemeinde, T.endverbrauch_elektrizitaet_mwh as endverbrauch_elektrizitaet_mwh_2018\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2018\n    AND S.name IN ('Blauen', 'Blauen (BL)', 'Birsfelden', 'Birsfelden (BL)')\nORDER BY T.endverbrauch_elektrizitaet_mwh DESC;\n",
    "db_id": "basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr",
    "generated_query": "SELECT S.name AS gemeinde, T.endverbrauch_elektrizitaet_mwh\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND (S.name = 'Bottmingen' OR S.name = 'Birsfelden')\n    AND T.jahr = 2018\nORDER BY endverbrauch_elektrizitaet_mwh DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Welche Gemeinde in Basel-Landschaft hatte 1995 den h\u00f6chsten Stromverbrauch?",
        "query": "SELECT S.name AS gemeinde, T.endverbrauch_elektrizitaet_mwh\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 1995\nORDER BY endverbrauch_elektrizitaet_mwh DESC\nLIMIT 1;\n",
        "score": 0.2659112513065338
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tendverbrauch_elektrizitaet_mwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und__pkey1 PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_endverbrauch_von_ektrizitat_na_spatialunit_uid_fkey1 FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nendverbrauch_elektrizitaet_mwh : 12707.00000000000000, 22128.00000000000000, 5606.00000000000000, 2631.00000000000000, 5412.00000000000000\nspatialunit_uid : 2841_A.ADM3, 2806_A.ADM3, 2809_A.ADM3, 2774_A.ADM3, 2847_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nendverbrauch_elektrizitaet_mwh, Endverbrauch Elektrizitaet Mwh, 536937258529674\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche drei Gemeinden in Basel-Landschaft hatten im Jahr 2012 den geringsten Stromverbrauch?\n### SQL query\nSELECT S.name AS gemeinde, T.endverbrauch_elektrizitaet_mwh\nFROM basel_land_endverbrauch_von_ektrizitat_nach_gemeinde_und_jahr as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2012\nORDER BY endverbrauch_elektrizitaet_mwh ASC\nLIMIT 3;\n\n\n### Question\nWelche der Gemeinden Bottmingen und Birsfelden in Basel-Landschaft hatte 2018 den h\u00f6chsten Stromverbrauch?\n### SQL query\n",
    "process_time": 11.983520788839087,
    "num_tokens": 1122,
    "hardness": "unknown",
    "scores": [
      0.2659112513065338
    ],
    "lang": "de"
  },
  {
    "i": 69,
    "question": "Wie viele Reformierte gab es im Kanton Basel-Landschaft in 2022?",
    "query": "SELECT SUM(T.anzahl_evangelisch_reformiert)\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2022;\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT SUM(anzahl_evangelisch_reformiert) AS total_reformierte_basel_land_2022\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde\nWHERE jahr = 2022;",
    "meta_data": [
      {
        "question": "Wie hat sich die Anzahl der Reformierten in Allschwil, im Kanton Basel-Landschaft, zwischen 2010 und 2015 entwickelt?",
        "query": "SELECT T.jahr, SUM(T.anzahl_evangelisch_reformiert) as number_reformed_evangelics\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Allschwil', 'Allschwil (BL)')\n    AND T.jahr >= 2010\n    AND T.jahr <= 2015\nGROUP BY T.jahr;\n",
        "score": 0.39234137535095215
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_evangelisch_reformiert : 57, 6500, 19, 46, 21\nanzahl_romisch_katholisch : 57, 224, 2586, 244, 19\nanzahl_christkatholisch : 12, 250, 46, 50, 2\nanzahl_unbekannt_konfession : 57, 61, 875, 1455, 46\ngesamt_anzahl_personen : 89, 1184, 19, 642, 21\nspatialunit_uid : 2841_A.ADM3, 2774_A.ADM3, 2847_A.ADM3, 2850_A.ADM3, 2887_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelcher Anteil der Bev\u00f6lkerung von Basel-Landschaft geh\u00f6rte 2021 einer bekannten Religion an?\n### SQL query\nSELECT 1 - (\n    SUM(CAST(T.anzahl_unbekannt_konfession AS FLOAT)) / SUM(T.gesamt_anzahl_personen)\n) AS proportion_known_religion_basel_land_2021\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\nGROUP BY T.jahr;\n\n\n### Question\nWie viele Reformierte gab es im Kanton Basel-Landschaft in 2022?\n### SQL query\n",
    "process_time": 6.618272077059373,
    "num_tokens": 1305,
    "hardness": "medium",
    "scores": [
      0.39234137535095215
    ],
    "lang": "de"
  },
  {
    "i": 70,
    "question": "Zwischen den Gemeinden Arlesheim und Birsfelden im Kanton Basel-Landschaft, welche hatte 2003 einen h\u00f6heren Anteil an Protestanten?",
    "query": "SELECT S.name AS gemeinde, CAST(SUM(T.anzahl_evangelisch_reformiert) AS FLOAT) / SUM(T.gesamt_anzahl_personen) as proportion_protestants_2003\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Ettingen', 'Ettingen (BL)', 'Birsfelden', 'Birsfelden (BL)')\n    AND T.jahr = 2003\nGROUP BY S.name\nORDER BY proportion_protestants_2003 DESC;\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT \n    CASE WHEN T1.anzahl_evangelisch_reformiert_arlesheim > T2.anzahl_evangelisch_reformiert_birsfelden THEN 'Arlesheim' ELSE 'Birsfelden' END AS municipality_with_higher_protestant_percentage_2003\nFROM (\n    SELECT \n        AVG(T.anzahl_evangelisch_reformiert) as anzahl_evangelisch_reformiert_arlesheim\n    FROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.name = 'Arlesheim'\n        AND T.jahr = 2003\n        AND T.nationalitat = 'Schweiz'\n    GROUP BY S.name\n) AS T1\nJOIN (\n    SELECT \n        AVG(T.anzahl_evangelisch_reformiert) as anzahl_evangelisch_reformiert_birsfelden\n    FROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.name = 'Birsfelden'\n        AND T.jahr = 2003\n        AND T.nationalitat = 'Schweiz'\n    GROUP BY S.name\n) AS T2 ON 1=1;",
    "meta_data": [
      {
        "question": "Wie hoch war der Anteil der Gemeinden im Kanton Basel-Landschaft, in denen es 2018 mehr Katholiken als Protestanten unter der Schweizer Bev\u00f6lkerung gab?",
        "query": "SELECT SUM(\n    CASE WHEN (T1.anzahl_romisch_katholisch + T1.anzahl_christkatholisch) > T1.anzahl_evangelisch_reformiert THEN 1 ELSE 0 END\n) / CAST(COUNT(T1.anzahl_evangelisch_reformiert) AS FLOAT) AS proprtion_municipalities_more_catholics_than_reformed_2018\nFROM (\n    SELECT\n        S.name as municipality,\n        AVG(T.anzahl_christkatholisch) as anzahl_christkatholisch,\n        AVG(T.anzahl_romisch_katholisch) as anzahl_romisch_katholisch,\n        AVG(T.anzahl_evangelisch_reformiert) as anzahl_evangelisch_reformiert\n    FROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr = 2018\n        AND T.nationalitat = 'Schweiz'\n    GROUP BY S.name\n) AS T1;\n",
        "score": 0.43448835611343384
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_evangelisch_reformiert : 57, 6500, 19, 46, 21\nanzahl_romisch_katholisch : 57, 224, 2586, 244, 19\nanzahl_christkatholisch : 12, 250, 46, 50, 2\nanzahl_unbekannt_konfession : 57, 61, 875, 1455, 46\ngesamt_anzahl_personen : 89, 1184, 19, 642, 21\nspatialunit_uid : 2841_A.ADM3, 2774_A.ADM3, 2847_A.ADM3, 2850_A.ADM3, 2887_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war der Anteil der Gemeinden im Kanton Basel-Landschaft, in denen es 2018 mehr Katholiken als Protestanten unter der Schweizer Bev\u00f6lkerung gab?\n### SQL query\nSELECT SUM(\n    CASE WHEN (T1.anzahl_romisch_katholisch + T1.anzahl_christkatholisch) > T1.anzahl_evangelisch_reformiert THEN 1 ELSE 0 END\n) / CAST(COUNT(T1.anzahl_evangelisch_reformiert) AS FLOAT) AS proprtion_municipalities_more_catholics_than_reformed_2018\nFROM (\n    SELECT\n        S.name as municipality,\n        AVG(T.anzahl_christkatholisch) as anzahl_christkatholisch,\n        AVG(T.anzahl_romisch_katholisch) as anzahl_romisch_katholisch,\n        AVG(T.anzahl_evangelisch_reformiert) as anzahl_evangelisch_reformiert\n    FROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr = 2018\n        AND T.nationalitat = 'Schweiz'\n    GROUP BY S.name\n) AS T1;\n\n\n### Question\nZwischen den Gemeinden Arlesheim und Birsfelden im Kanton Basel-Landschaft, welche hatte 2003 einen h\u00f6heren Anteil an Protestanten?\n### SQL query\n",
    "process_time": 35.74607896315865,
    "num_tokens": 1474,
    "hardness": "unknown",
    "scores": [
      0.43448835611343384
    ],
    "lang": "de"
  },
  {
    "i": 71,
    "question": "Wie hoch war der Anteil der r\u00f6misch-katholischen Personen an der ausl\u00e4ndischen Bev\u00f6lkerung des Kantons Basel-Landschaft im Jahr 2021?",
    "query": "SELECT SUM(CAST(T.anzahl_romisch_katholisch AS FLOAT)) / SUM(T.gesamt_anzahl_personen) AS proportion_foreign_romisch_katholisch_basel_land_2021\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\n    AND T.nationalitat = 'Ausland';\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT SUM(T.anzahl_romisch_katholisch) / CAST(SUM(T.gesamt_anzahl_personen) AS FLOAT) AS proportion_foreign_population_catholic_2021\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2021\n    AND T.nationalitat = 'Ausland';",
    "meta_data": [
      {
        "question": "Wie hoch war der Anteil der Gemeinden im Kanton Basel-Landschaft, in denen es 2018 mehr Katholiken als Protestanten unter der Schweizer Bev\u00f6lkerung gab?",
        "query": "SELECT SUM(\n    CASE WHEN (T1.anzahl_romisch_katholisch + T1.anzahl_christkatholisch) > T1.anzahl_evangelisch_reformiert THEN 1 ELSE 0 END\n) / CAST(COUNT(T1.anzahl_evangelisch_reformiert) AS FLOAT) AS proprtion_municipalities_more_catholics_than_reformed_2018\nFROM (\n    SELECT\n        S.name as municipality,\n        AVG(T.anzahl_christkatholisch) as anzahl_christkatholisch,\n        AVG(T.anzahl_romisch_katholisch) as anzahl_romisch_katholisch,\n        AVG(T.anzahl_evangelisch_reformiert) as anzahl_evangelisch_reformiert\n    FROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr = 2018\n        AND T.nationalitat = 'Schweiz'\n    GROUP BY S.name\n) AS T1;\n",
        "score": 0.30227145552635193
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_evangelisch_reformiert : 57, 6500, 19, 46, 21\nanzahl_romisch_katholisch : 57, 224, 2586, 244, 19\nanzahl_christkatholisch : 12, 250, 46, 50, 2\nanzahl_unbekannt_konfession : 57, 61, 875, 1455, 46\ngesamt_anzahl_personen : 89, 1184, 19, 642, 21\nspatialunit_uid : 2841_A.ADM3, 2774_A.ADM3, 2847_A.ADM3, 2850_A.ADM3, 2887_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war der Anteil der Gemeinden im Kanton Basel-Landschaft, in denen es 2018 mehr Katholiken als Protestanten unter der Schweizer Bev\u00f6lkerung gab?\n### SQL query\nSELECT SUM(\n    CASE WHEN (T1.anzahl_romisch_katholisch + T1.anzahl_christkatholisch) > T1.anzahl_evangelisch_reformiert THEN 1 ELSE 0 END\n) / CAST(COUNT(T1.anzahl_evangelisch_reformiert) AS FLOAT) AS proprtion_municipalities_more_catholics_than_reformed_2018\nFROM (\n    SELECT\n        S.name as municipality,\n        AVG(T.anzahl_christkatholisch) as anzahl_christkatholisch,\n        AVG(T.anzahl_romisch_katholisch) as anzahl_romisch_katholisch,\n        AVG(T.anzahl_evangelisch_reformiert) as anzahl_evangelisch_reformiert\n    FROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr = 2018\n        AND T.nationalitat = 'Schweiz'\n    GROUP BY S.name\n) AS T1;\n\n\n### Question\nWie hoch war der Anteil der r\u00f6misch-katholischen Personen an der ausl\u00e4ndischen Bev\u00f6lkerung des Kantons Basel-Landschaft im Jahr 2021?\n### SQL query\n",
    "process_time": 9.84538527787663,
    "num_tokens": 1476,
    "hardness": "unknown",
    "scores": [
      0.30227145552635193
    ],
    "lang": "de"
  },
  {
    "i": 72,
    "question": "Welches waren im Jahr 2022 die 3 Gemeinden mit dem h\u00f6chsten Ausl\u00e4nderanteil im Kanton Basel-Landschaft?",
    "query": "SELECT S.name AS gemeinde, SUM(CASE WHEN T.nationalitat = 'Ausland' THEN T.gesamt_anzahl_personen ELSE 0 END) / CAST(SUM(T.gesamt_anzahl_personen) AS FLOAT) AS proportion_foreign_residents\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2022\nGROUP BY S.name\nORDER BY proportion_foreign_residents DESC\nLIMIT 3;\n",
    "db_id": "basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde",
    "generated_query": "SELECT S.name_de AS gemeinde_name, T.nationalitat, T.gesamt_anzahl_personen, T.anzahl_unbekannt_konfession, \n    (T.gesamt_anzahl_personen - T.anzahl_unbekannt_konfession) / T.gesamt_anzahl_personen AS auslanderanteil\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2022\n    AND T.nationalitat = 'Ausland'\nORDER BY auslanderanteil DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Welche 5 Gemeinden hatten 2008 den h\u00f6chsten Anteil an Reformierten im Kanton Basel-Landschaft?",
        "query": "SELECT S.name, CAST(SUM(T.anzahl_evangelisch_reformiert) AS FLOAT) / SUM(T.gesamt_anzahl_personen) as proportion_protestants_2008\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2008\nGROUP BY S.name\nORDER BY proportion_protestants_2008 DESC\nLIMIT 5;\n",
        "score": 0.45760709047317505
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnationalitat TEXT, \n\tanzahl_evangelisch_reformiert NUMERIC, \n\tanzahl_romisch_katholisch NUMERIC, \n\tanzahl_christkatholisch NUMERIC, \n\tanzahl_unbekannt_konfession NUMERIC, \n\tgesamt_anzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_konfession_gemein_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_bevolkerung_nach_nationalitat_k_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_evangelisch_reformiert : 57, 6500, 19, 46, 21\nanzahl_romisch_katholisch : 57, 224, 2586, 244, 19\nanzahl_christkatholisch : 12, 250, 46, 50, 2\nanzahl_unbekannt_konfession : 57, 61, 875, 1455, 46\ngesamt_anzahl_personen : 89, 1184, 19, 642, 21\nspatialunit_uid : 2841_A.ADM3, 2774_A.ADM3, 2847_A.ADM3, 2850_A.ADM3, 2887_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nnationalitat, Nationalit\u00e4t, Schweiz,Ausland\ngesamt_anzahl_personen, Gesamtanzahl Personen, None\n\u200banzahl_evangelisch_reformiert, Anzahl Evangelisch-Reformierten, None\n\u200banzahl_romisch_katholisch, Anzahl der R\u00f6misch-Katholischen, None\nanzahl_christkatholisch, Anzahl der Christkatholischen, None\nanzahl_unbekannt_konfession, Anzahl der Personen mit unbekannter Konfession, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelcher Anteil der Bev\u00f6lkerung von Basel-Landschaft geh\u00f6rte 2021 einer bekannten Religion an?\n### SQL query\nSELECT 1 - (\n    SUM(CAST(T.anzahl_unbekannt_konfession AS FLOAT)) / SUM(T.gesamt_anzahl_personen)\n) AS proportion_known_religion_basel_land_2021\nFROM basel_land_bevolkerung_nach_nationalitat_konfession_gemeinde as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\nGROUP BY T.jahr;\n\n\n### Question\nWelches waren im Jahr 2022 die 3 Gemeinden mit dem h\u00f6chsten Ausl\u00e4nderanteil im Kanton Basel-Landschaft?\n### SQL query\n",
    "process_time": 13.199332711985335,
    "num_tokens": 1318,
    "hardness": "unknown",
    "scores": [
      0.45760709047317505
    ],
    "lang": "de"
  },
  {
    "i": 73,
    "question": "In welchem Jahr wurde die meiste Wohnfl\u00e4che im Kanton Basel-Landschaft gekauft?",
    "query": "SELECT T.jahr\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nGROUP BY T.jahr\nORDER BY SUM(T.flache_in_m2) DESC\nLIMIT 1;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT\n    T.jahr AS kaufjahr,\n    SUM(T.flache_in_m2) AS gesamtflache_in_m2\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\nGROUP BY T.jahr\nORDER BY gesamtflache_in_m2 DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Wie viele Wohnbaul\u00e4nder wurden 2018 in Basel-Landschaft gekauft?",
        "query": "SELECT SUM(T.falle) AS anzahl_wohnbaulander_basel_landschaft_2018\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2018;\n",
        "score": 0.3379858434200287
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 1984, 1983, 1979, 1994, 1986\nfalle : 12, 19, 39, 21, 3\nflache_in_m2 : 11500, 9100, 14100, 14400, 21500\nquadratmeterpreis_chf : 224, 530, 301, 304, 1209\nspatialunit_uid : 2811_A.ADM3, 2814_A.ADM3, 2812_A.ADM3, 2810_A.ADM3, 2806_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn welcher Gemeinde des Kantons Basel-Landschaft ist der Preis f\u00fcr Wohnbauland zwischen 2010 und 2020 am st\u00e4rksten gestiegen, und um wie viel ist er gestiegen?\n### SQL query\nSELECT\n    S.name AS gemeinde,\n    (\n        SUM(CASE WHEN T.jahr = 2020 THEN T.quadratmeterpreis_chf ELSE 0 END) -\n        SUM(CASE WHEN T.jahr = 2010 THEN T.quadratmeterpreis_chf ELSE 0 END)\n    ) AS preisanderung_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2010, 2020)\nGROUP BY S.name\nORDER BY preisanderung_chf DESC\nLIMIT 1;\n\n\n### Question\nIn welchem Jahr wurde die meiste Wohnfl\u00e4che im Kanton Basel-Landschaft gekauft?\n### SQL query\n",
    "process_time": 8.310339091112837,
    "num_tokens": 1252,
    "hardness": "hard",
    "scores": [
      0.3379858434200287
    ],
    "lang": "de"
  },
  {
    "i": 74,
    "question": "Zeigen Sie mir den Preis f\u00fcr Wohnbauland in Basel-Landschaft, dessen Name mit A beginnt, im Jahr 2012.",
    "query": "SELECT S.name, T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2008\n    AND S.name LIKE 'A%'\nLIMIT 10;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT S.name, T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2012\n    AND S.name LIKE 'A%';",
    "meta_data": [
      {
        "question": "Welche Gemeinden in Basel-Landschaft hatten zwischen 2015 und 2019 einen R\u00fcckgang der Wohnbaulandpreise? Zeigen Sie auch die Preis\u00e4nderungen an.",
        "query": "SELECT T1.name AS gemeinde, T1.preisanderung_chf\nFROM (\n    SELECT\n        S.name,\n        (\n            SUM(CASE WHEN T.jahr = 2019 THEN T.quadratmeterpreis_chf ELSE 0 END) -\n            SUM(CASE WHEN T.jahr = 2015 THEN T.quadratmeterpreis_chf ELSE 0 END)\n        ) AS preisanderung_chf\n    FROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr <= 2015\n        AND T.jahr <= 2019\n    GROUP BY S.name\n) as T1\nWHERE T1.preisanderung_chf < 0\nORDER BY T1.preisanderung_chf ASC ;\n",
        "score": 0.6632091999053955
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 1984, 1983, 1979, 1994, 1986\nfalle : 12, 19, 39, 21, 3\nflache_in_m2 : 11500, 9100, 14100, 14400, 21500\nquadratmeterpreis_chf : 224, 530, 301, 304, 1209\nspatialunit_uid : 2811_A.ADM3, 2814_A.ADM3, 2812_A.ADM3, 2810_A.ADM3, 2806_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nZeigen Sie mir den Preis f\u00fcr Wohnbauland in Muttenz, Birsfelden und Schonenbuch, in Basel-Landschaft im Jahr 1983.\n### SQL query\nSELECT S.name, T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 1983\n    AND S.name IN ('Muttenz', 'Muttens (BL)', 'Bottmingen', 'Bottmingen (BL)', 'Binningen', 'Binningen (BL)');\n\n\n### Question\nZeigen Sie mir den Preis f\u00fcr Wohnbauland in Basel-Landschaft, dessen Name mit A beginnt, im Jahr 2012.\n### SQL query\n",
    "process_time": 10.542126360815018,
    "num_tokens": 1199,
    "hardness": "extra",
    "scores": [
      0.6632091999053955
    ],
    "lang": "de"
  },
  {
    "i": 75,
    "question": "Wie viel kostete ein Quadratmeter Wohnbauland in den f\u00fcnf teuersten Gemeinden von Basel-Landschaft im Jahr 2005?",
    "query": "SELECT S.name AS gemeinde, T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2005\nORDER BY T.quadratmeterpreis_chf DESC\nLIMIT 5;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT T.quadratmeterpreis_chf\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2005\nORDER BY T.quadratmeterpreis_chf DESC\nLIMIT 5;",
    "meta_data": [
      {
        "question": "Welche Gemeinde in Basel-Landschaft hatte 2022 das teuerste Bauland?",
        "query": "SELECT S.name AS gemeinde\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2022\nORDER BY T.quadratmeterpreis_chf DESC\nLIMIT 1;\n",
        "score": 0.41208919882774353
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 1984, 1983, 1979, 1994, 1986\nfalle : 12, 19, 39, 21, 3\nflache_in_m2 : 11500, 9100, 14100, 14400, 21500\nquadratmeterpreis_chf : 224, 530, 301, 304, 1209\nspatialunit_uid : 2811_A.ADM3, 2814_A.ADM3, 2812_A.ADM3, 2810_A.ADM3, 2806_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche Gemeinde in Basel-Landschaft hatte 2022 das teuerste Bauland?\n### SQL query\nSELECT S.name AS gemeinde\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2022\nORDER BY T.quadratmeterpreis_chf DESC\nLIMIT 1;\n\n\n### Question\nWie viel kostete ein Quadratmeter Wohnbauland in den f\u00fcnf teuersten Gemeinden von Basel-Landschaft im Jahr 2005?\n### SQL query\n",
    "process_time": 8.086969103198498,
    "num_tokens": 1161,
    "hardness": "unknown",
    "scores": [
      0.41208919882774353
    ],
    "lang": "de"
  },
  {
    "i": 76,
    "question": "Wie viel Wohnbauland wurde zwischen 2010 und 2012 in Pratteln, BL, gekauft?",
    "query": "SELECT SUM(T.flache_in_m2) as gesamt_flache_in_m2\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Pratteln', 'Pratteln (BL)')\n    AND T.jahr >= 2010\n    AND T.jahr <= 2012;\n",
    "db_id": "basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr",
    "generated_query": "SELECT SUM(T.flache_in_m2) AS flache_in_m2_pratteln_bl_2010_2012\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr BETWEEN 2010 AND 2012\nAND S.name = 'Pratteln'\nAND S.canton = true;",
    "meta_data": [
      {
        "question": "Wie viele Wohnbaul\u00e4nder wurden 2018 in Basel-Landschaft gekauft?",
        "query": "SELECT SUM(T.falle) AS anzahl_wohnbaulander_basel_landschaft_2018\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2018;\n",
        "score": 0.4467480182647705
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfalle NUMERIC, \n\tflache_in_m2 NUMERIC, \n\tquadratmeterpreis_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_land_quadratmeterpreis_wohnbauland_n_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 1984, 1983, 1979, 1994, 1986\nfalle : 12, 19, 39, 21, 3\nflache_in_m2 : 11500, 9100, 14100, 14400, 21500\nquadratmeterpreis_chf : 224, 530, 301, 304, 1209\nspatialunit_uid : 2811_A.ADM3, 2814_A.ADM3, 2812_A.ADM3, 2810_A.ADM3, 2806_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nfalle, F\u00e4lle, 17329\nflache_in_m2, Fl\u00e4che in m2, 12300104004700\nquadratmeterpreis_chf, Quadratmeterpreis in CHF, 213266221\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viele Wohnbaul\u00e4nder wurden 2018 in Basel-Landschaft gekauft?\n### SQL query\nSELECT SUM(T.falle) AS anzahl_wohnbaulander_basel_landschaft_2018\nFROM basel_land_quadratmeterpreis_wohnbauland_nach_gemeinde_und_jahr AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2018;\n\n\n### Question\nWie viel Wohnbauland wurde zwischen 2010 und 2012 in Pratteln, BL, gekauft?\n### SQL query\n",
    "process_time": 12.043834530049935,
    "num_tokens": 1141,
    "hardness": "unknown",
    "scores": [
      0.4467480182647705
    ],
    "lang": "de"
  },
  {
    "i": 77,
    "question": "Wie viele landwirtschaftliche Fahrzeuge gab es im Kanton Aargau im Jahr 2010?",
    "query": "SELECT anzahl_landwirtschaftliche_motorfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr = 2010;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT T.anzahl_landwirtschaftliche_motorfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = true\n    AND S.name = 'Aargau'\n    AND T.jahr = 2010;",
    "meta_data": [
      {
        "question": "Wie viele landwirtschaftliche Fahrzeuge gab es in Rekingen im Aargau zwischen 1998 und 2000?",
        "query": "SELECT T.jahr, T.anzahl_landwirtschaftliche_motorfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Rekingen', 'Rekingen (AG)')\n    AND T.jahr >= 1998\n    AND T.jahr <= 2000\nORDER BY T.jahr ASC;\n",
        "score": 0.23391510546207428
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1986, 2007, 1995\nanzahl_personenwagen : 2178, 244, 301, 304, 642\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 70, 86, 2, 3, 6\nanzahl_nutzfahrzeuge : 57, 61, 231, 301, 46\nanzahl_arbeitsmotorfahrzeuge : 12, 2, 3, 17, 6\nanzahl_motorrader : 57, 89, 19, 164, 125\nanzahl_klein_motorrader : 751, 54, 83, 19, 46\nanzahl_motorfahrrader : 61, 297, 609, 46, 164\nanzahl_landwirtschaftliche_motorfahrzeuge : 57, 61, 12, 89, 54\nanzahl_anhaenger : 57, 61, 89, 244, 19\nanzahl_kollektivfahrzeuge : 61, 12, 54, 21, 3\nanzahl_personenwagen_pro_1000_einwohner : 540.29999999999995, 456.60000000000002, 548.00000000000000, 509.69999999999999, 502.60000000000002\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viele landwirtschaftliche Fahrzeuge gab es in Rekingen im Aargau zwischen 1998 und 2000?\n### SQL query\nSELECT T.jahr, T.anzahl_landwirtschaftliche_motorfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Rekingen', 'Rekingen (AG)')\n    AND T.jahr >= 1998\n    AND T.jahr <= 2000\nORDER BY T.jahr ASC;\n\n\n### Question\nWie viele landwirtschaftliche Fahrzeuge gab es im Kanton Aargau im Jahr 2010?\n### SQL query\n",
    "process_time": 7.9662821548990905,
    "num_tokens": 1735,
    "hardness": "medium",
    "scores": [
      0.23391510546207428
    ],
    "lang": "de"
  },
  {
    "i": 78,
    "question": "Wie hat sich der Bestand an Motorr\u00e4dern und Personenwagen im Kanton Aargau im Zeitraum zwischen 1930 und 1960 entwickelt?",
    "query": "SELECT T.jahr, anzahl_motorrader, anzahl_klein_motorrader, anzahl_motorfahrrader, anzahl_personenwagen\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr >= 1930\n    AND T.jahr <= 1960;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT T.jahr, T.anzahl_motorrader, T.anzahl_personenwagen\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr >= 1930\n    AND T.jahr <= 1960;",
    "meta_data": [
      {
        "question": "Gab es 1930 oder 1940 im Kanton Aargau mehr Personenwagen?",
        "query": "SELECT T.jahr\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr IN (1930, 1940)\nGROUP BY T.jahr\nORDER BY SUM(T.anzahl_personenwagen) DESC\nLIMIT 1;\n",
        "score": 0.37195995450019836
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1986, 2007, 1995\nanzahl_personenwagen : 2178, 244, 301, 304, 642\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 70, 86, 2, 3, 6\nanzahl_nutzfahrzeuge : 57, 61, 231, 301, 46\nanzahl_arbeitsmotorfahrzeuge : 12, 2, 3, 17, 6\nanzahl_motorrader : 57, 89, 19, 164, 125\nanzahl_klein_motorrader : 751, 54, 83, 19, 46\nanzahl_motorfahrrader : 61, 297, 609, 46, 164\nanzahl_landwirtschaftliche_motorfahrzeuge : 57, 61, 12, 89, 54\nanzahl_anhaenger : 57, 61, 89, 244, 19\nanzahl_kollektivfahrzeuge : 61, 12, 54, 21, 3\nanzahl_personenwagen_pro_1000_einwohner : 540.29999999999995, 456.60000000000002, 548.00000000000000, 509.69999999999999, 502.60000000000002\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hat sich die Zahl der Autos pro Einwohner im Aargau im Zeitraum 2010 bis 2022 entwickelt?\n### SQL query\nSELECT T.jahr, T.anzahl_personenwagen_pro_1000_einwohner\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr >= 2010\n    AND T.jahr <= 2022;\n\n\n### Question\nWie hat sich der Bestand an Motorr\u00e4dern und Personenwagen im Kanton Aargau im Zeitraum zwischen 1930 und 1960 entwickelt?\n### SQL query\n",
    "process_time": 11.421628427924588,
    "num_tokens": 1751,
    "hardness": "extra",
    "scores": [
      0.37195995450019836
    ],
    "lang": "de"
  },
  {
    "i": 79,
    "question": "Welche Gemeinde im Kanton Aargau hatte im Jahr 2020 am meisten Autos pro Einwohner?",
    "query": "SELECT S.name AS gemeinde\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.anzahl_personenwagen_pro_1000_einwohner DESC\nLIMIT 1;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT S.name, T.anzahl_personenwagen_pro_1000_einwohner\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.anzahl_personenwagen_pro_1000_einwohner DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Wie hoch ist der Anteil der Gemeinden im Kanton Aargau, in denen die Zahl der Autos pro Einwohner zwischen 2015 und 2022 zugenommen hat?",
        "query": "SELECT CAST(SUM(CASE WHEN T1.diff > 0 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.diff) AS ratio_gemeinden_mit_zunahme_autos_pro_einwohner\nFROM (\n    SELECT\n        SUM(CASE WHEN T.jahr = 2022 THEN T.anzahl_personenwagen_pro_1000_einwohner ELSE 0 END) -\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anzahl_personenwagen_pro_1000_einwohner ELSE 0 END) as diff\n    FROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr IN (2015, 2022)\n    GROUP BY S.name\n) as T1;\n",
        "score": 0.24898193776607513
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1986, 2007, 1995\nanzahl_personenwagen : 2178, 244, 301, 304, 642\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 70, 86, 2, 3, 6\nanzahl_nutzfahrzeuge : 57, 61, 231, 301, 46\nanzahl_arbeitsmotorfahrzeuge : 12, 2, 3, 17, 6\nanzahl_motorrader : 57, 89, 19, 164, 125\nanzahl_klein_motorrader : 751, 54, 83, 19, 46\nanzahl_motorfahrrader : 61, 297, 609, 46, 164\nanzahl_landwirtschaftliche_motorfahrzeuge : 57, 61, 12, 89, 54\nanzahl_anhaenger : 57, 61, 89, 244, 19\nanzahl_kollektivfahrzeuge : 61, 12, 54, 21, 3\nanzahl_personenwagen_pro_1000_einwohner : 540.29999999999995, 456.60000000000002, 548.00000000000000, 509.69999999999999, 502.60000000000002\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch ist der Anteil der Gemeinden im Kanton Aargau, in denen die Zahl der Autos pro Einwohner zwischen 2015 und 2022 zugenommen hat?\n### SQL query\nSELECT CAST(SUM(CASE WHEN T1.diff > 0 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(T1.diff) AS ratio_gemeinden_mit_zunahme_autos_pro_einwohner\nFROM (\n    SELECT\n        SUM(CASE WHEN T.jahr = 2022 THEN T.anzahl_personenwagen_pro_1000_einwohner ELSE 0 END) -\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anzahl_personenwagen_pro_1000_einwohner ELSE 0 END) as diff\n    FROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr IN (2015, 2022)\n    GROUP BY S.name\n) as T1;\n\n\n### Question\nWelche Gemeinde im Kanton Aargau hatte im Jahr 2020 am meisten Autos pro Einwohner?\n### SQL query\n",
    "process_time": 8.159037661040202,
    "num_tokens": 1852,
    "hardness": "unknown",
    "scores": [
      0.24898193776607513
    ],
    "lang": "de"
  },
  {
    "i": 80,
    "question": "Wie hoch war die Zahl der Nutzfahrzeuge 1960 und 1980 im Kanton Aargau?",
    "query": "SELECT T.jahr, anzahl_nutzfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name = 'Canton Aargau'\n    AND T.jahr IN (1960, 1980);\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT T.jahr, SUM(T.anzahl_nutzfahrzeuge) AS nutzfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr IN (1960, 1980)\nGROUP BY T.jahr;",
    "meta_data": [
      {
        "question": "Gab es 1930 oder 1940 im Kanton Aargau mehr Personenwagen?",
        "query": "SELECT T.jahr\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr IN (1930, 1940)\nGROUP BY T.jahr\nORDER BY SUM(T.anzahl_personenwagen) DESC\nLIMIT 1;\n",
        "score": 0.3025205433368683
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1986, 2007, 1995\nanzahl_personenwagen : 2178, 244, 301, 304, 642\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 70, 86, 2, 3, 6\nanzahl_nutzfahrzeuge : 57, 61, 231, 301, 46\nanzahl_arbeitsmotorfahrzeuge : 12, 2, 3, 17, 6\nanzahl_motorrader : 57, 89, 19, 164, 125\nanzahl_klein_motorrader : 751, 54, 83, 19, 46\nanzahl_motorfahrrader : 61, 297, 609, 46, 164\nanzahl_landwirtschaftliche_motorfahrzeuge : 57, 61, 12, 89, 54\nanzahl_anhaenger : 57, 61, 89, 244, 19\nanzahl_kollektivfahrzeuge : 61, 12, 54, 21, 3\nanzahl_personenwagen_pro_1000_einwohner : 540.29999999999995, 456.60000000000002, 548.00000000000000, 509.69999999999999, 502.60000000000002\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nGab es 1930 oder 1940 im Kanton Aargau mehr Personenwagen?\n### SQL query\nSELECT T.jahr\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr IN (1930, 1940)\nGROUP BY T.jahr\nORDER BY SUM(T.anzahl_personenwagen) DESC\nLIMIT 1;\n\n\n### Question\nWie hoch war die Zahl der Nutzfahrzeuge 1960 und 1980 im Kanton Aargau?\n### SQL query\n",
    "process_time": 7.5354329228866845,
    "num_tokens": 1718,
    "hardness": "unknown",
    "scores": [
      0.3025205433368683
    ],
    "lang": "de"
  },
  {
    "i": 81,
    "question": "Wie hoch war die Zahl der Nutzfahrzeuge in Abtwil, AG im Jahr 2000 ?",
    "query": "SELECT T.anzahl_nutzfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Abtwil', 'Abtwil (AG)')\n    AND T.jahr = 2000;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT T.anzahl_nutzfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Abtwil', 'Aargau (AG)')\n    AND T.jahr = 2000;",
    "meta_data": [
      {
        "question": "Wie hoch war die Zahl der Wohnwagen von 1998 bis 2001 in Aarburg, AG?",
        "query": "SELECT T.jahr, T.anzahl_anhaenger\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Aarburg', 'Aargbug (AG)')\n    AND T.jahr >= 1998\n    AND T.jahr <= 2001;\n",
        "score": 0.2764011323451996
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1986, 2007, 1995\nanzahl_personenwagen : 2178, 244, 301, 304, 642\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 70, 86, 2, 3, 6\nanzahl_nutzfahrzeuge : 57, 61, 231, 301, 46\nanzahl_arbeitsmotorfahrzeuge : 12, 2, 3, 17, 6\nanzahl_motorrader : 57, 89, 19, 164, 125\nanzahl_klein_motorrader : 751, 54, 83, 19, 46\nanzahl_motorfahrrader : 61, 297, 609, 46, 164\nanzahl_landwirtschaftliche_motorfahrzeuge : 57, 61, 12, 89, 54\nanzahl_anhaenger : 57, 61, 89, 244, 19\nanzahl_kollektivfahrzeuge : 61, 12, 54, 21, 3\nanzahl_personenwagen_pro_1000_einwohner : 540.29999999999995, 456.60000000000002, 548.00000000000000, 509.69999999999999, 502.60000000000002\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war die Zahl der Wohnwagen von 1998 bis 2001 in Aarburg, AG?\n### SQL query\nSELECT T.jahr, T.anzahl_anhaenger\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Aarburg', 'Aargbug (AG)')\n    AND T.jahr >= 1998\n    AND T.jahr <= 2001;\n\n\n### Question\nWie hoch war die Zahl der Nutzfahrzeuge in Abtwil, AG im Jahr 2000 ?\n### SQL query\n",
    "process_time": 8.419176820898429,
    "num_tokens": 1728,
    "hardness": "unknown",
    "scores": [
      0.2764011323451996
    ],
    "lang": "de"
  },
  {
    "i": 82,
    "question": "Wie viele Kollektivfahrzeuge gab es 2022 in Wettingen, AG?",
    "query": "SELECT T.anzahl_kollektivfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Wettingen', 'Wettingen (AG)')\n    AND T.jahr = 2022;\n",
    "db_id": "aargau_privatverkehr_bestand_nach_fahrzeugarten",
    "generated_query": "SELECT anzahl_kollektivfahrzeuge\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten\nWHERE jahr = 2022\n    AND spatialunit_uid = 'Wettingen, AG';",
    "meta_data": [
      {
        "question": "Wie viele Aargauer Gemeinden haben im Jahr 2020 keine Personenwagen gez\u00e4hlt?",
        "query": "SELECT COUNT(*) AS anzahl_gemeinden_ohne_personenwagen\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten WHERE jahr = 2020\n    AND anzahl_personenwagen = 0;\n",
        "score": 0.332943320274353
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_privatverkehr_bestand_nach_fahrzeugarten (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_personenwagen NUMERIC, \n\tanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars NUMERIC, \n\tanzahl_nutzfahrzeuge NUMERIC, \n\tanzahl_arbeitsmotorfahrzeuge NUMERIC, \n\tanzahl_motorrader NUMERIC, \n\tanzahl_klein_motorrader NUMERIC, \n\tanzahl_motorfahrrader NUMERIC, \n\tanzahl_landwirtschaftliche_motorfahrzeuge NUMERIC, \n\tanzahl_anhaenger NUMERIC, \n\tanzahl_kollektivfahrzeuge NUMERIC, \n\tanzahl_personenwagen_pro_1000_einwohner NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeugarten_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_privatverkehr_bestand_nach_fahrzeug_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_privatverkehr_bestand_nach_fahrzeugarten and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1986, 2007, 1995\nanzahl_personenwagen : 2178, 244, 301, 304, 642\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars : 70, 86, 2, 3, 6\nanzahl_nutzfahrzeuge : 57, 61, 231, 301, 46\nanzahl_arbeitsmotorfahrzeuge : 12, 2, 3, 17, 6\nanzahl_motorrader : 57, 89, 19, 164, 125\nanzahl_klein_motorrader : 751, 54, 83, 19, 46\nanzahl_motorfahrrader : 61, 297, 609, 46, 164\nanzahl_landwirtschaftliche_motorfahrzeuge : 57, 61, 12, 89, 54\nanzahl_anhaenger : 57, 61, 89, 244, 19\nanzahl_kollektivfahrzeuge : 61, 12, 54, 21, 3\nanzahl_personenwagen_pro_1000_einwohner : 540.29999999999995, 456.60000000000002, 548.00000000000000, 509.69999999999999, 502.60000000000002\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_personenwagen_pro_1000_einwohner, Motorisierungsgrad: Anzahl Personenwagen pro 1000 Einwonhner/-innen., 485.5,488.6,485.1\nanzahl_personenwagen, Anzahl Personenwagen, 10556,10618,10582\nanzahl_ubrige_personen_transportfahrzeuge_kleinbusse_cars, Anzahl \u00dcbrige Personen Transportfahrzeuge (Kleinbusse, cars), 73,70,76\nanzahl_nutzfahrzeuge, Anzahl Nutzfahrzeuge, 1640,1617,1642\nanzahl_arbeitsmotorfahrzeuge, Anzahl Arbeitsmotorfahrzeuge, 142,152,159\nanzahl_motorrader, Anzahl Motorr\u00e4der, 1234,1225,1157\nanzahl_klein_motorrader, Anzahl kleine Motorr\u00e4der, 25,34,30\nanzahl_motorfahrrader, Anzahl Motorfahrr\u00e4der, 517,498,469\nanzahl_landwirtschaftliche_motorfahrzeuge, Anzahl Landwirtschaftliche Motorfahrzeuge, 46,49,45\nanzahl_anhaenger, Anzahl Anh\u00e4nger, 831,820,845\nanzahl_kollektivfahrzeuge, Anzahl Kollektivfahrzeuge, 53,56,55\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viele Aargauer Gemeinden haben im Jahr 2020 keine Personenwagen gez\u00e4hlt?\n### SQL query\nSELECT COUNT(*) AS anzahl_gemeinden_ohne_personenwagen\nFROM aargau_privatverkehr_bestand_nach_fahrzeugarten WHERE jahr = 2020\n    AND anzahl_personenwagen = 0;\n\n\n### Question\nWie viele Kollektivfahrzeuge gab es 2022 in Wettingen, AG?\n### SQL query\n",
    "process_time": 4.548328037140891,
    "num_tokens": 1683,
    "hardness": "unknown",
    "scores": [
      0.332943320274353
    ],
    "lang": "de"
  },
  {
    "i": 83,
    "question": "Wie viel Fl\u00e4che wurde im Jahr 2017 im Aargau f\u00fcr den Rotweinanbau genutzt?",
    "query": "SELECT T.flache_rebland_rote_europaische_reben_ha, T.flache_rebland_kreuzung_rote_weisse_ha\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2017;\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT flache_rebland_rote_europaische_reben_ha\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2017;",
    "meta_data": [
      {
        "question": "Wie viel Prozent des Wertes des im Aargau produzierten Weines entfiel 2017 auf Rotwein?",
        "query": "SELECT 100.0 * T.erntewert_rot_1000_chf / (T.erntewert_rot_1000_chf + T.erntewert_weiss_1000_chf) AS prozent_rotwein_wert_2017\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2017;\n",
        "score": 0.3426724672317505
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\nflache_rebland_rote_europaische_reben_ha : 244, 146, 250, 164, 172\nflache_rebland_kreuzung_rote_weisse_ha : 12, 19, 21, 3, 17\nflache_rebland_weisse_reben_ha : 155, 106, 135, 85, 84\nflache_total_ha : 395, 301, 336, 307, 393\nweinernte_total_hl : 23490, 17054, 19565, 17700, 20521\nweinernte_rot_europaische_hl : 12769, 11290, 10805, 12520, 12447\nweinernte_rot_kreuzung_rot_hl : 1360, 800, 250, 185, 650\nweinernte_europaische_weiss_hl : 10238, 8519, 13790, 12480, 8050\nerntewert_rot_1000_chf : 5512, 6126, 7694, 8524, 6410\nerntewert_weiss_1000_chf : 1205, 4037, 1588, 3334, 4431\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viel Prozent des Wertes des im Aargau produzierten Weines entfiel 2017 auf Rotwein?\n### SQL query\nSELECT 100.0 * T.erntewert_rot_1000_chf / (T.erntewert_rot_1000_chf + T.erntewert_weiss_1000_chf) AS prozent_rotwein_wert_2017\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2017;\n\n\n### Question\nWie viel Fl\u00e4che wurde im Jahr 2017 im Aargau f\u00fcr den Rotweinanbau genutzt?\n### SQL query\n",
    "process_time": 7.20129438303411,
    "num_tokens": 1737,
    "hardness": "hard",
    "scores": [
      0.3426724672317505
    ],
    "lang": "de"
  },
  {
    "i": 84,
    "question": "In welchem Jahr wurde im Aargau am meisten Wein geerntet?",
    "query": "SELECT T.jahr\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\nGROUP BY T.jahr\nORDER BY SUM(T.weinernte_total_hl) DESC\nLIMIT 1;\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT T.jahr, T.weinernte_total_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\nORDER BY T.weinernte_total_hl DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Wie viel Wein wurde im Aargau 1980 und 2010 geerntet?",
        "query": "SELECT T.jahr, T.weinernte_total_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr IN (1980, 2010);\n",
        "score": 0.24710191786289215
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\nflache_rebland_rote_europaische_reben_ha : 244, 146, 250, 164, 172\nflache_rebland_kreuzung_rote_weisse_ha : 12, 19, 21, 3, 17\nflache_rebland_weisse_reben_ha : 155, 106, 135, 85, 84\nflache_total_ha : 395, 301, 336, 307, 393\nweinernte_total_hl : 23490, 17054, 19565, 17700, 20521\nweinernte_rot_europaische_hl : 12769, 11290, 10805, 12520, 12447\nweinernte_rot_kreuzung_rot_hl : 1360, 800, 250, 185, 650\nweinernte_europaische_weiss_hl : 10238, 8519, 13790, 12480, 8050\nerntewert_rot_1000_chf : 5512, 6126, 7694, 8524, 6410\nerntewert_weiss_1000_chf : 1205, 4037, 1588, 3334, 4431\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viel Wein wurde im Aargau 1980 und 2010 geerntet?\n### SQL query\nSELECT T.jahr, T.weinernte_total_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr IN (1980, 2010);\n\n\n### Question\nIn welchem Jahr wurde im Aargau am meisten Wein geerntet?\n### SQL query\n",
    "process_time": 7.265421488089487,
    "num_tokens": 1685,
    "hardness": "extra",
    "scores": [
      0.24710191786289215
    ],
    "lang": "de"
  },
  {
    "i": 85,
    "question": "Um wie viel Franken hat sich der Gesamtwert der Weinernte im Aargau zwischen 1980 und 2016 ver\u00e4ndert?",
    "query": "SELECT (\n    SUM(CASE WHEN T.jahr = 2016 THEN T.erntewert_rot_1000_chf + T.erntewert_weiss_1000_chf ELSE 0 END) -\n    SUM(CASE WHEN T.jahr = 1980 THEN T.erntewert_rot_1000_chf + T.erntewert_weiss_1000_chf ELSE 0 END)\n) * 1000.0 AS wertanderung_1980_2016_chf\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr IN (1980, 2016);\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT (T2.erntewert_rot_1000_chf + T2.erntewert_weiss_1000_chf) - (T1.erntewert_rot_1000_chf + T1.erntewert_weiss_1000_chf) AS wert_veraenderung\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T1\nJOIN aargau_obst_rebbau_rebland_wein_ernte AS T2 ON T1.spatialunit_uid = T2.spatialunit_uid\nJOIN spatial_unit AS S ON T1.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T1.jahr = 1980\n    AND T2.jahr = 2016;",
    "meta_data": [
      {
        "question": "Wie viel Wein wurde im Aargau 1980 und 2010 geerntet?",
        "query": "SELECT T.jahr, T.weinernte_total_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr IN (1980, 2010);\n",
        "score": 0.37320852279663086
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\nflache_rebland_rote_europaische_reben_ha : 244, 146, 250, 164, 172\nflache_rebland_kreuzung_rote_weisse_ha : 12, 19, 21, 3, 17\nflache_rebland_weisse_reben_ha : 155, 106, 135, 85, 84\nflache_total_ha : 395, 301, 336, 307, 393\nweinernte_total_hl : 23490, 17054, 19565, 17700, 20521\nweinernte_rot_europaische_hl : 12769, 11290, 10805, 12520, 12447\nweinernte_rot_kreuzung_rot_hl : 1360, 800, 250, 185, 650\nweinernte_europaische_weiss_hl : 10238, 8519, 13790, 12480, 8050\nerntewert_rot_1000_chf : 5512, 6126, 7694, 8524, 6410\nerntewert_weiss_1000_chf : 1205, 4037, 1588, 3334, 4431\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viel Wein wurde im Aargau 1980 und 2010 geerntet?\n### SQL query\nSELECT T.jahr, T.weinernte_total_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr IN (1980, 2010);\n\n\n### Question\nUm wie viel Franken hat sich der Gesamtwert der Weinernte im Aargau zwischen 1980 und 2016 ver\u00e4ndert?\n### SQL query\n",
    "process_time": 20.348262006882578,
    "num_tokens": 1698,
    "hardness": "unknown",
    "scores": [
      0.37320852279663086
    ],
    "lang": "de"
  },
  {
    "i": 86,
    "question": "Wie viele Quadratkilometer Rebfl\u00e4che gab es im Aargau im Jahr 2018?",
    "query": "SELECT CAST(T.flache_total_ha AS FLOAT) / 100 AS flache_total_km2\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2018;\n",
    "db_id": "aargau_obst_rebbau_rebland_wein_ernte",
    "generated_query": "SELECT T.flache_total_ha / 100 AS flache_total_km\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2018;",
    "meta_data": [
      {
        "question": "Wie viel Rot- und Weisswein wurde im Jahr 2019 im Aargau geerntet?",
        "query": "SELECT T.weinernte_rot_europaische_hl, T.weinernte_rot_kreuzung_rot_hl, T.weinernte_europaische_weiss_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2019;\n",
        "score": 0.5444445013999939
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_obst_rebbau_rebland_wein_ernte (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tflache_rebland_rote_europaische_reben_ha NUMERIC, \n\tflache_rebland_kreuzung_rote_weisse_ha NUMERIC, \n\tflache_rebland_weisse_reben_ha NUMERIC, \n\tflache_total_ha NUMERIC, \n\tweinernte_total_hl NUMERIC, \n\tweinernte_rot_europaische_hl NUMERIC, \n\tweinernte_rot_kreuzung_rot_hl NUMERIC, \n\tweinernte_europaische_weiss_hl NUMERIC, \n\terntewert_rot_1000_chf NUMERIC, \n\terntewert_weiss_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_obst_rebbau_rebland_wein_ernte_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_obst_rebbau_rebland_wein_ernte and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\nflache_rebland_rote_europaische_reben_ha : 244, 146, 250, 164, 172\nflache_rebland_kreuzung_rote_weisse_ha : 12, 19, 21, 3, 17\nflache_rebland_weisse_reben_ha : 155, 106, 135, 85, 84\nflache_total_ha : 395, 301, 336, 307, 393\nweinernte_total_hl : 23490, 17054, 19565, 17700, 20521\nweinernte_rot_europaische_hl : 12769, 11290, 10805, 12520, 12447\nweinernte_rot_kreuzung_rot_hl : 1360, 800, 250, 185, 650\nweinernte_europaische_weiss_hl : 10238, 8519, 13790, 12480, 8050\nerntewert_rot_1000_chf : 5512, 6126, 7694, 8524, 6410\nerntewert_weiss_1000_chf : 1205, 4037, 1588, 3334, 4431\n*/\n\n/*\nColumn name, Column discription, Example values\nweinernte_total_hl, Weinernte in hl: Total, 167892306117054\nweinernte_rot_europaische_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 103651386111290\nweinernte_rot_kreuzung_rot_hl, Weinernte in hl: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen, 679795435\nweinernte_europaische_weiss_hl, Weinernte in hl: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 574484055329\nflache_rebland_rote_europaische_reben_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Europ\u00e4ische Reben, 244250253\nflache_rebland_kreuzung_rote_weisse_ha, Fl\u00e4che Rebland in ha: rotes Gew\u00e4chs: Direkttr\u00e4gerkreuzungen; ab 2016: Rote und weisse Sorten zusammen, 161413\nflache_total, Fl\u00e4che Rebland in ha: Total, 119126124\nerntewert_rot_1000_chf, Erntewert in 1000 Franken: rotes Gew\u00e4chs, 574487517001\nerntewert_weiss_1000_chf, Erntewert in 1000 Franken: weisse Gew\u00e4chs, 299643832779\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viel Rot- und Weisswein wurde im Jahr 2019 im Aargau geerntet?\n### SQL query\nSELECT T.weinernte_rot_europaische_hl, T.weinernte_rot_kreuzung_rot_hl, T.weinernte_europaische_weiss_hl\nFROM aargau_obst_rebbau_rebland_wein_ernte AS T\nJOIN spatial_unit as S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2019;\n\n\n### Question\nWie viele Quadratkilometer Rebfl\u00e4che gab es im Aargau im Jahr 2018?\n### SQL query\n",
    "process_time": 7.47361827804707,
    "num_tokens": 1716,
    "hardness": "unknown",
    "scores": [
      0.5444445013999939
    ],
    "lang": "de"
  },
  {
    "i": 87,
    "question": "Wie viele Brandf\u00e4lle gab es im Jahr 2011 im Aargau?",
    "query": "SELECT T.total_anzahl_schadenfalle\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2011;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT T.total_anzahl_schadenfalle\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2011;",
    "meta_data": [
      {
        "question": "Wie viele Explosionen und Brandstiftungen wurden im Jahr 2000 im Aargau registriert?",
        "query": "SELECT T.explosion_anzahl_schadenfalle, T.vorsatzliche_brandstift_anzahl_schadenfalle\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2000;\n",
        "score": 0.2943589687347412
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\ntotal_anzahl_schadenfalle : 1248, 800, 855, 1331, 1565\ntotal_schaden_1000_chf : 15679, 12322, 17557, 29116, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 12, 143, 83, 112, 146\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 57, 2552, 112, 5078, 1203\nelektrizitaet_anzahl_schadenfalle : 254, 275, 186, 266, 304\nelektrizitaet_schaden_1000_chf : 6063, 9628, 3216, 6882, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 70, 89, 54, 83, 19\nvorsatzliche_brandstift_schaden_1000_chf : 1708, 137, 46, 1389, 2767\nfeuerungsanlagen_anzahl_schadenfalle : 89, 39, 48, 66, 62\nfeuerungsanlagen_schaden_1000_chf : 843, 484, 83, 847, 266\nexplosion_anzahl_schadenfalle : 70, 74, 54, 89, 46\nexplosion_schaden_1000_chf : 1153, 581, 202, 719, 665\nuebrige_anzahl_schadenfalle : 621, 363, 475, 985, 345\nuebrige_schaden_1000_chf : 2886, 3191, 3699, 3398, 1760\nunbekannt_anzahl_schadenfalle : 57, 61, 54, 39, 46\nunbekannt_schaden_1000_chf : 6063, 4592, 2857, 8678, 17006\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viele Explosionen und Brandstiftungen wurden im Jahr 2000 im Aargau registriert?\n### SQL query\nSELECT T.explosion_anzahl_schadenfalle, T.vorsatzliche_brandstift_anzahl_schadenfalle\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2000;\n\n\n### Question\nWie viele Brandf\u00e4lle gab es im Jahr 2011 im Aargau?\n### SQL query\n",
    "process_time": 9.953351113013923,
    "num_tokens": 2054,
    "hardness": "hard",
    "scores": [
      0.2943589687347412
    ],
    "lang": "de"
  },
  {
    "i": 88,
    "question": "In welchem Jahr wurden im Aargau die meisten Brandstiftungen gemeldet?",
    "query": "SELECT T.jahr\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\nORDER BY T.vorsatzliche_brandstift_anzahl_schadenfalle DESC\nLIMIT 1;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT T.jahr\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\nORDER BY T.vorsatzliche_brandstift_anzahl_schadenfalle DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Wie viele Brandstiftungen wurden von 1980 bis 2020 im Kanton Aargau insgesamt gemeldet?",
        "query": "SELECT SUM(T.vorsatzliche_brandstift_anzahl_schadenfalle)\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 1980\n    AND T.jahr <= 2020;",
        "score": 0.40615949034690857
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\ntotal_anzahl_schadenfalle : 1248, 800, 855, 1331, 1565\ntotal_schaden_1000_chf : 15679, 12322, 17557, 29116, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 12, 143, 83, 112, 146\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 57, 2552, 112, 5078, 1203\nelektrizitaet_anzahl_schadenfalle : 254, 275, 186, 266, 304\nelektrizitaet_schaden_1000_chf : 6063, 9628, 3216, 6882, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 70, 89, 54, 83, 19\nvorsatzliche_brandstift_schaden_1000_chf : 1708, 137, 46, 1389, 2767\nfeuerungsanlagen_anzahl_schadenfalle : 89, 39, 48, 66, 62\nfeuerungsanlagen_schaden_1000_chf : 843, 484, 83, 847, 266\nexplosion_anzahl_schadenfalle : 70, 74, 54, 89, 46\nexplosion_schaden_1000_chf : 1153, 581, 202, 719, 665\nuebrige_anzahl_schadenfalle : 621, 363, 475, 985, 345\nuebrige_schaden_1000_chf : 2886, 3191, 3699, 3398, 1760\nunbekannt_anzahl_schadenfalle : 57, 61, 54, 39, 46\nunbekannt_schaden_1000_chf : 6063, 4592, 2857, 8678, 17006\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viele Brandstiftungen wurden von 1980 bis 2020 im Kanton Aargau insgesamt gemeldet?\n### SQL query\nSELECT SUM(T.vorsatzliche_brandstift_anzahl_schadenfalle)\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 1980\n    AND T.jahr <= 2020;\n\n### Question\nIn welchem Jahr wurden im Aargau die meisten Brandstiftungen gemeldet?\n### SQL query\n",
    "process_time": 7.749706633854657,
    "num_tokens": 2060,
    "hardness": "extra",
    "scores": [
      0.40615949034690857
    ],
    "lang": "de"
  },
  {
    "i": 89,
    "question": "Welches waren die 3 h\u00e4ufigsten Ursachen f\u00fcr Brandf\u00e4lle im Aargau im Jahr 1985?",
    "query": "WITH T1 AS (\n    SELECT * FROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.canton = 'TRUE'\n        AND S.name LIKE '%Aargau%'\n        AND T.jahr = 1985\n)\nSELECT T2.source_name\nFROM (\n    SELECT T1.feuerzeug_rauchzeug_licht_anzahl_schadenfalle as source, 'feuerzeug_rauchzeug_licht_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.elektrizitaet_anzahl_schadenfalle as source, 'elektrizitaet_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.vorsatzliche_brandstift_anzahl_schadenfalle as source, 'vorsatzliche_brandstift_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.feuerungsanlagen_anzahl_schadenfalle as source, 'feuerungsanlagen_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.explosion_anzahl_schadenfalle as source, 'explosion_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.uebrige_anzahl_schadenfalle as source, 'uebrige_anzahl_schadenfalle' as source_name\n    FROM T1 AS UNION ALL\n    SELECT T1.unbekannt_anzahl_schadenfalle as source, 'unbekannt_anzahl_schadenfalle' as source_name\n    FROM T1\n) AS T2\nORDER BY T2.source DESC\nLIMIT 3;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT \n    T.uid,\n    T.jahr,\n    T.total_anzahl_schadenfalle,\n    T.total_schaden_1000_chf,\n    T.feuerzeug_rauchzeug_licht_anzahl_schadenfalle,\n    T.feuerzeug_rauchzeug_licht_schaden_1000_chf,\n    T.elektrizitaet_anzahl_schadenfalle,\n    T.elektrizitaet_schaden_1000_chf,\n    T.vorsatzliche_brandstift_anzahl_schadenfalle,\n    T.vorsatzliche_brandstift_schaden_1000_chf,\n    T.feuerungsanlagen_anzahl_schadenfalle,\n    T.feuerungsanlagen_schaden_1000_chf,\n    T.explosion_anzahl_schadenfalle,\n    T.explosion_schaden_1000_chf,\n    T.uebrige_anzahl_schadenfalle,\n    T.uebrige_schaden_1000_chf,\n    T.unbekannt_anzahl_schadenfalle,\n    T.unbekannt_schaden_1000_chf,\n    T.spatialunit_uid\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 1985\nORDER BY T.total_anzahl_schadenfalle DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Wie hoch (in prozent) ist der Anteil unbekannter Ursachen an der Zahl der Brandf\u00e4lle im Aargau im Jahr 2018?",
        "query": "SELECT T.unbekannt_anzahl_schadenfalle * 100.0 / T.total_anzahl_schadenfalle AS unbekannt_anzahl_schadenfalle_prozent\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2018;\n",
        "score": 0.5246674418449402
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\ntotal_anzahl_schadenfalle : 1248, 800, 855, 1331, 1565\ntotal_schaden_1000_chf : 15679, 12322, 17557, 29116, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 12, 143, 83, 112, 146\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 57, 2552, 112, 5078, 1203\nelektrizitaet_anzahl_schadenfalle : 254, 275, 186, 266, 304\nelektrizitaet_schaden_1000_chf : 6063, 9628, 3216, 6882, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 70, 89, 54, 83, 19\nvorsatzliche_brandstift_schaden_1000_chf : 1708, 137, 46, 1389, 2767\nfeuerungsanlagen_anzahl_schadenfalle : 89, 39, 48, 66, 62\nfeuerungsanlagen_schaden_1000_chf : 843, 484, 83, 847, 266\nexplosion_anzahl_schadenfalle : 70, 74, 54, 89, 46\nexplosion_schaden_1000_chf : 1153, 581, 202, 719, 665\nuebrige_anzahl_schadenfalle : 621, 363, 475, 985, 345\nuebrige_schaden_1000_chf : 2886, 3191, 3699, 3398, 1760\nunbekannt_anzahl_schadenfalle : 57, 61, 54, 39, 46\nunbekannt_schaden_1000_chf : 6063, 4592, 2857, 8678, 17006\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch (in prozent) ist der Anteil unbekannter Ursachen an der Zahl der Brandf\u00e4lle im Aargau im Jahr 2018?\n### SQL query\nSELECT T.unbekannt_anzahl_schadenfalle * 100.0 / T.total_anzahl_schadenfalle AS unbekannt_anzahl_schadenfalle_prozent\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr = 2018;\n\n\n### Question\nWelches waren die 3 h\u00e4ufigsten Ursachen f\u00fcr Brandf\u00e4lle im Aargau im Jahr 1985?\n### SQL query\n",
    "process_time": 40.87453826284036,
    "num_tokens": 2087,
    "hardness": "unknown",
    "scores": [
      0.5246674418449402
    ],
    "lang": "de"
  },
  {
    "i": 90,
    "question": "Wie hoch waren die j\u00e4hrlichen Kosten in CHF f\u00fcr die durch Elektrizit\u00e4t und Explosionen verursachten Brandsch\u00e4den im Kanton Aargau in den Jahren 2001 bis 2007?",
    "query": "SELECT T.jahr, T.elektrizitaet_schaden_1000_chf * 1000 AS elektrizitaet_schaden_chf\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 2001\n    AND T.jahr <= 2007\nORDER BY T.jahr DESC;\n",
    "db_id": "aargau_brandversicherung_brandschaden_anzahl_schadensummen",
    "generated_query": "SELECT T.jahr, T.elektrizitaet_schaden_1000_chf * 1000 AS elektrizitaet_schaden_chf\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 2001\n    AND T.jahr <= 2007\nORDER BY T.jahr DESC;",
    "meta_data": [
      {
        "question": "Wie hoch waren die j\u00e4hrlichen Kosten in CHF f\u00fcr die durch Elektrizit\u00e4t und Explosionen verursachten Brandsch\u00e4den im Kanton Aargau in den Jahren 2001 bis 2007?",
        "query": "SELECT T.jahr, T.elektrizitaet_schaden_1000_chf * 1000 AS elektrizitaet_schaden_chf\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 2001\n    AND T.jahr <= 2007\nORDER BY T.jahr DESC;\n",
        "score": 1.2198364063645273e-13
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.aargau_brandversicherung_brandschaden_anzahl_schadensummen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\ttotal_anzahl_schadenfalle NUMERIC, \n\ttotal_schaden_1000_chf NUMERIC, \n\tfeuerzeug_rauchzeug_licht_anzahl_schadenfalle NUMERIC, \n\tfeuerzeug_rauchzeug_licht_schaden_1000_chf NUMERIC, \n\telektrizitaet_anzahl_schadenfalle NUMERIC, \n\telektrizitaet_schaden_1000_chf NUMERIC, \n\tvorsatzliche_brandstift_anzahl_schadenfalle NUMERIC, \n\tvorsatzliche_brandstift_schaden_1000_chf NUMERIC, \n\tfeuerungsanlagen_anzahl_schadenfalle NUMERIC, \n\tfeuerungsanlagen_schaden_1000_chf NUMERIC, \n\texplosion_anzahl_schadenfalle NUMERIC, \n\texplosion_schaden_1000_chf NUMERIC, \n\tuebrige_anzahl_schadenfalle NUMERIC, \n\tuebrige_schaden_1000_chf NUMERIC, \n\tunbekannt_anzahl_schadenfalle NUMERIC, \n\tunbekannt_schaden_1000_chf NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anzahl_schadensummen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT aargau_brandversicherung_brandschaden_anza_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in aargau_brandversicherung_brandschaden_anzahl_schadensummen and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 2007, 1995\ntotal_anzahl_schadenfalle : 1248, 800, 855, 1331, 1565\ntotal_schaden_1000_chf : 15679, 12322, 17557, 29116, 7151\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle : 12, 143, 83, 112, 146\nfeuerzeug_rauchzeug_licht_schaden_1000_chf : 57, 2552, 112, 5078, 1203\nelektrizitaet_anzahl_schadenfalle : 254, 275, 186, 266, 304\nelektrizitaet_schaden_1000_chf : 6063, 9628, 3216, 6882, 3143\nvorsatzliche_brandstift_anzahl_schadenfalle : 70, 89, 54, 83, 19\nvorsatzliche_brandstift_schaden_1000_chf : 1708, 137, 46, 1389, 2767\nfeuerungsanlagen_anzahl_schadenfalle : 89, 39, 48, 66, 62\nfeuerungsanlagen_schaden_1000_chf : 843, 484, 83, 847, 266\nexplosion_anzahl_schadenfalle : 70, 74, 54, 89, 46\nexplosion_schaden_1000_chf : 1153, 581, 202, 719, 665\nuebrige_anzahl_schadenfalle : 621, 363, 475, 985, 345\nuebrige_schaden_1000_chf : 2886, 3191, 3699, 3398, 1760\nunbekannt_anzahl_schadenfalle : 57, 61, 54, 39, 46\nunbekannt_schaden_1000_chf : 6063, 4592, 2857, 8678, 17006\n*/\n\n/*\nColumn name, Column discription, Example values\ntotal_anzahl_schadenfalle, Total Anzahl Schadenfalle, 796681857\ntotal_schaden_1000_chf, Totale Schadensumme in 1000 CHF, 182472448024074\nfeuerzeug_rauchzeug_licht_anzahl_schadenfalle, None, 122123132\nfeuerzeug_rauchzeug_licht_schaden_1000_chf, None, 209525525078\nelektrizitaet_anzahl_schadenfalle, None, 234246228\nvorsatzliche_brandstift_schaden_1000_chf, None, 508360635374\nvorsatzliche_brandstift_anzahl_schadenfalle, None, 142225\nbrandstift_schaden_1000_chf, None, 2149632470\nfeuerungsanl_anzahl_schadenfalle, Feuerungsanlagen: Anzahl Schadenf\u00e4lle, 676547\nfeuerungsanl_schaden_1000_chf, Feuerungsanlagen: Totale Schadensumme in 1000 CHF, 15601231792\nexplosion_anzahl_schadenfalle, None, 262125\nexplosion_schaden_1000_chf, None, 7821180211\nuebrige_anzahl_schadenfalle, None, 269176342\nuebrige_schaden_1000_chf, None, 16449331734\nunbekannt_anzahl_schadenfalle, None, 512857\nunbekannt_schaden_1000_chf, None, 675118838678\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch waren die j\u00e4hrlichen Kosten in CHF f\u00fcr die durch Elektrizit\u00e4t und Explosionen verursachten Brandsch\u00e4den im Kanton Aargau in den Jahren 2001 bis 2007?\n### SQL query\nSELECT T.jahr, T.elektrizitaet_schaden_1000_chf * 1000 AS elektrizitaet_schaden_chf\nFROM aargau_brandversicherung_brandschaden_anzahl_schadensummen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Aargau%'\n    AND T.jahr >= 2001\n    AND T.jahr <= 2007\nORDER BY T.jahr DESC;\n\n\n### Question\nWie hoch waren die j\u00e4hrlichen Kosten in CHF f\u00fcr die durch Elektrizit\u00e4t und Explosionen verursachten Brandsch\u00e4den im Kanton Aargau in den Jahren 2001 bis 2007?\n### SQL query\n",
    "process_time": 14.827415053965524,
    "num_tokens": 2130,
    "hardness": "unknown",
    "scores": [
      1.2198364063645273e-13
    ],
    "lang": "de"
  },
  {
    "i": 91,
    "question": "Wie setzt sich die erneuerbare Energieproduktion im Kanton Thurgau seit 2018 j\u00e4hrlich zusammen?",
    "query": "SELECT\n    T.jahr,\n    SUM(biogasanlagen_abwasser_gwh),\n    SUM(biogasanlagen_industrie_gwh),\n    SUM(biogasanlagen_landwirtschaft_gwh),\n    SUM(biomasse_holz_gwh),\n    SUM(kehricht_gwh),\n    SUM(photovoltaik_gwh),\n    SUM(wasserkraft_gwh),\n    SUM(wind_gwh),\n    SUM(total_gwh)\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2018\nGROUP BY T.jahr;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT T.jahr, \n       SUM(T.wasserkraft_gwh) AS wasserkraft, \n       SUM(T.biomasse_holz_gwh) AS biomasse_holz, \n       SUM(T.biogasanlagen_landwirtschaft_gwh) AS biogas_landwirtschaft, \n       SUM(T.kehricht_gwh) AS kehricht, \n       SUM(T.biogasanlagen_industrie_gwh) AS biogas_industrie, \n       SUM(T.biogasanlagen_abwasser_gwh) AS biogas_abwasser, \n       SUM(T.photovoltaik_gwh) AS photovoltaik, \n       SUM(T.wind_gwh) AS wind, \n       SUM(T.total_gwh) AS total\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr >= 2018\nGROUP BY T.jahr\nORDER BY T.jahr;",
    "meta_data": [
      {
        "question": "Wie hoch ist die Gesamtmenge an erneuerbarer Energie aus der Kehrichtverbrennung im Kanton Thurgau im Jahr 2020?",
        "query": "SELECT S.name AS gemeinde\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\nORDER BY T.biomasse_holz_gwh DESC\nLIMIT 2;\n",
        "score": 0.3143775761127472
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\neinwohner : 3492, 3439, 1570, 4773, 3949\nwasserkraft_gwh : 1.471000000000000085, 14.455000000000000071, 0E-18, 1.782999999999999918, 13.651999999999999247\nbiogasanlagen_landwirtschaft_gwh : 0.102999999999999994, 0.119999999999999996, 2.322000000000000064, 0.163000000000000006, 0E-18\nbiogasanlagen_abwasser_gwh : 2.2810000000000001386, 1.2190000000000000835, 0.0100000000000000002, 1.2290000000000000924, 0.0170000000000000012\nphotovoltaik_gwh : 0.359999999999999987, 1.877999999999999892, 1.487999999999999989, 3.092999999999999972, 3.581999999999999851\ntotal_gwh : 0.359999999999999987, 3.855999999999999872, 1.911000000000000032, 3.581999999999999851, 1.487999999999999989\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n\n\n### Question\nWie hoch ist die Gesamtmenge an erneuerbarer Energie aus der Kehrichtverbrennung im Kanton Thurgau im Jahr 2020?\n### SQL query\nSELECT S.name AS gemeinde\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\nORDER BY T.biomasse_holz_gwh DESC\nLIMIT 2;\n\n\n### Question\nWie setzt sich die erneuerbare Energieproduktion im Kanton Thurgau seit 2018 j\u00e4hrlich zusammen?\n### SQL query\n",
    "process_time": 19.31981054111384,
    "num_tokens": 1662,
    "hardness": "extra",
    "scores": [
      0.3143775761127472
    ],
    "lang": "de"
  },
  {
    "i": 92,
    "question": "Wie viel Prozent der erneuerbaren Energie in Frauenfeld TG wurde im Jahr 2021 durch Solarenergie erzeugt?",
    "query": "SELECT\n    100 * photovoltaik_gwh/total_gwh AS photovoltaik_prozent_frauenfeld_2021\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\n    AND S.name IN ('Frauenfeld', 'Frauenfeld (TG)');\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT 100 * photovoltaik_gwh / total_gwh AS prozent_solarenergie_2021\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde\nWHERE spatialunit_uid = '1234_A.ADM3'\n    AND jahr = 2021;",
    "meta_data": [
      {
        "question": "Wie hoch ist die Gesamtmenge an erneuerbarer Energie aus der Kehrichtverbrennung im Kanton Thurgau im Jahr 2020?",
        "query": "SELECT S.name AS gemeinde\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\nORDER BY T.biomasse_holz_gwh DESC\nLIMIT 2;\n",
        "score": 0.4485643804073334
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\neinwohner : 3492, 3439, 1570, 4773, 3949\nwasserkraft_gwh : 1.471000000000000085, 14.455000000000000071, 0E-18, 1.782999999999999918, 13.651999999999999247\nbiogasanlagen_landwirtschaft_gwh : 0.102999999999999994, 0.119999999999999996, 2.322000000000000064, 0.163000000000000006, 0E-18\nbiogasanlagen_abwasser_gwh : 2.2810000000000001386, 1.2190000000000000835, 0.0100000000000000002, 1.2290000000000000924, 0.0170000000000000012\nphotovoltaik_gwh : 0.359999999999999987, 1.877999999999999892, 1.487999999999999989, 3.092999999999999972, 3.581999999999999851\ntotal_gwh : 0.359999999999999987, 3.855999999999999872, 1.911000000000000032, 3.581999999999999851, 1.487999999999999989\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n\n\n### Question\nWie hoch ist der Anteil (in Prozent) der Thurgauer Gemeinden, die im Jahr 2017 keine erneuerbare Energie produziert haben?\n### SQL query\nSELECT 100 * SUM(CASE WHEN T.total_gwh = 0 THEN 1 ELSE 0 END) / CAST(COUNT(*) AS FLOAT) AS prozent_kein_erneurerbare_energie_2017\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2017;\n\n\n### Question\nWie viel Prozent der erneuerbaren Energie in Frauenfeld TG wurde im Jahr 2021 durch Solarenergie erzeugt?\n### SQL query\n",
    "process_time": 7.472239810042083,
    "num_tokens": 1685,
    "hardness": "unknown",
    "scores": [
      0.4485643804073334
    ],
    "lang": "de"
  },
  {
    "i": 93,
    "question": "Wie viele Gemeinden im Kanton Thurgau produzierten im Jahr 2019 Energie aus Wind?",
    "query": "SELECT\n    COUNT(*) AS anzahl_gemeinden_wind_2019\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\n    AND T.wind_gwh > 0;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT COUNT(*) AS anzahl_gemeinden\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\n    AND T.wind_gwh > 0;",
    "meta_data": [
      {
        "question": "Welche Gemeinde im Kanton Thurgau produziert im Jahr 2020 im Verh\u00e4ltnis zur Einwohnerzahl am meisten erneuerbare Energie?",
        "query": "SELECT S.name AS gemeinde\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.total_gwh / T.einwohner DESC\nLIMIT 1;\n",
        "score": 0.3050447106361389
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\neinwohner : 3492, 3439, 1570, 4773, 3949\nwasserkraft_gwh : 1.471000000000000085, 14.455000000000000071, 0E-18, 1.782999999999999918, 13.651999999999999247\nbiogasanlagen_landwirtschaft_gwh : 0.102999999999999994, 0.119999999999999996, 2.322000000000000064, 0.163000000000000006, 0E-18\nbiogasanlagen_abwasser_gwh : 2.2810000000000001386, 1.2190000000000000835, 0.0100000000000000002, 1.2290000000000000924, 0.0170000000000000012\nphotovoltaik_gwh : 0.359999999999999987, 1.877999999999999892, 1.487999999999999989, 3.092999999999999972, 3.581999999999999851\ntotal_gwh : 0.359999999999999987, 3.855999999999999872, 1.911000000000000032, 3.581999999999999851, 1.487999999999999989\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n\n\n### Question\nWelche Gemeinde im Kanton Thurgau produziert im Jahr 2020 im Verh\u00e4ltnis zur Einwohnerzahl am meisten erneuerbare Energie?\n### SQL query\nSELECT S.name AS gemeinde\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.total_gwh / T.einwohner DESC\nLIMIT 1;\n\n\n### Question\nWie viele Gemeinden im Kanton Thurgau produzierten im Jahr 2019 Energie aus Wind?\n### SQL query\n",
    "process_time": 9.374574542045593,
    "num_tokens": 1662,
    "hardness": "unknown",
    "scores": [
      0.3050447106361389
    ],
    "lang": "de"
  },
  {
    "i": 94,
    "question": "Welche 3 Thurgauer Gemeinden weisen zwischen 2018 und 2021 den gr\u00f6ssten Zuwachs an erneuerbarer Energieproduktion auf? Geben Sie auch den prozentualen Anstieg an.",
    "query": "SELECT\n    S.name AS gemeinde,\n    (\n        100.0 * SUM( CASE WHEN T.jahr = 2021 THEN T.total_gwh ELSE 0 END) /\n        SUM( CASE WHEN T.jahr = 2018 THEN T.total_gwh ELSE 0 END\n    )) AS prozent_anstieg\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2018, 2021)\nGROUP BY S.name\nORDER BY prozent_anstieg DESC\nLIMIT 3;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT\n    S.name AS gemeinde,\n    T.total_gwh AS gesamt_energieproduktion_2018,\n    T1.total_gwh AS gesamt_energieproduktion_2021,\n    100.0 * (T1.total_gwh - T.total_gwh) / T.total_gwh AS prozentualer_anstieg\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T1 ON T.spatialunit_uid = T1.spatialunit_uid\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2018\n    AND T1.jahr = 2021\nORDER BY prozentualer_anstieg DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Welche 3 Thurgauer Gemeinden hatten im Jahr 2019 den h\u00f6chsten Anteil an Wasserkraft an der gesamten erneuerbaren Energieproduktion und wie hoch war dieser?",
        "query": "SELECT\n    S.name AS gemeinde,\n    100.0 * T.wasserkraft_gwh / T.total_gwh AS prozent_wasserkraft\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\nORDER BY prozent_wasserkraft DESC\nLIMIT 3;\n",
        "score": 0.28229260444641113
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\neinwohner : 3492, 3439, 1570, 4773, 3949\nwasserkraft_gwh : 1.471000000000000085, 14.455000000000000071, 0E-18, 1.782999999999999918, 13.651999999999999247\nbiogasanlagen_landwirtschaft_gwh : 0.102999999999999994, 0.119999999999999996, 2.322000000000000064, 0.163000000000000006, 0E-18\nbiogasanlagen_abwasser_gwh : 2.2810000000000001386, 1.2190000000000000835, 0.0100000000000000002, 1.2290000000000000924, 0.0170000000000000012\nphotovoltaik_gwh : 0.359999999999999987, 1.877999999999999892, 1.487999999999999989, 3.092999999999999972, 3.581999999999999851\ntotal_gwh : 0.359999999999999987, 3.855999999999999872, 1.911000000000000032, 3.581999999999999851, 1.487999999999999989\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n\n\n### Question\nWelche 3 Thurgauer Gemeinden hatten im Jahr 2019 den h\u00f6chsten Anteil an Wasserkraft an der gesamten erneuerbaren Energieproduktion und wie hoch war dieser?\n### SQL query\nSELECT\n    S.name AS gemeinde,\n    100.0 * T.wasserkraft_gwh / T.total_gwh AS prozent_wasserkraft\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\nORDER BY prozent_wasserkraft DESC\nLIMIT 3;\n\n\n### Question\nWelche 3 Thurgauer Gemeinden weisen zwischen 2018 und 2021 den gr\u00f6ssten Zuwachs an erneuerbarer Energieproduktion auf? Geben Sie auch den prozentualen Anstieg an.\n### SQL query\n",
    "process_time": 17.709691310999915,
    "num_tokens": 1720,
    "hardness": "unknown",
    "scores": [
      0.28229260444641113
    ],
    "lang": "de"
  },
  {
    "i": 95,
    "question": "Wie viel erneuerbare Energie hat der Kanton Thurgau im Zeitraum 2017-2021 insgesamt produziert?",
    "query": "SELECT SUM(T.total_gwh) AS total_gwh_2017_2021\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nWHERE T.jahr >= 2017\n    AND T.jahr <= 2021;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT SUM(total_gwh) AS gesamtmenge\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde\nWHERE jahr BETWEEN 2017 AND 2021;",
    "meta_data": [
      {
        "question": "Wie viel erneuerbare Energie wird in den 5 gr\u00f6ssten Thurgauer Gemeinden im Jahr 2021 produziert?",
        "query": "SELECT S.name AS gemeinde, T.total_gwh\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2021\nORDER BY T.einwohner DESC\nLIMIT 5;\n",
        "score": 0.2106240838766098
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\neinwohner : 3492, 3439, 1570, 4773, 3949\nwasserkraft_gwh : 1.471000000000000085, 14.455000000000000071, 0E-18, 1.782999999999999918, 13.651999999999999247\nbiogasanlagen_landwirtschaft_gwh : 0.102999999999999994, 0.119999999999999996, 2.322000000000000064, 0.163000000000000006, 0E-18\nbiogasanlagen_abwasser_gwh : 2.2810000000000001386, 1.2190000000000000835, 0.0100000000000000002, 1.2290000000000000924, 0.0170000000000000012\nphotovoltaik_gwh : 0.359999999999999987, 1.877999999999999892, 1.487999999999999989, 3.092999999999999972, 3.581999999999999851\ntotal_gwh : 0.359999999999999987, 3.855999999999999872, 1.911000000000000032, 3.581999999999999851, 1.487999999999999989\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n\n\n### Question\nWie hoch ist die Gesamtmenge an erneuerbarer Energie aus der Kehrichtverbrennung im Kanton Thurgau im Jahr 2020?\n### SQL query\nSELECT S.name AS gemeinde\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2019\nORDER BY T.biomasse_holz_gwh DESC\nLIMIT 2;\n\n\n### Question\nWie viel erneuerbare Energie hat der Kanton Thurgau im Zeitraum 2017-2021 insgesamt produziert?\n### SQL query\n",
    "process_time": 4.457551412051544,
    "num_tokens": 1666,
    "hardness": "unknown",
    "scores": [
      0.2106240838766098
    ],
    "lang": "de"
  },
  {
    "i": 96,
    "question": "Zeigen Sie mir die Produktion von Energie aus Sonne und Wind in Berg, TG im Jahr 2018.",
    "query": "SELECT T.photovoltaik_gwh, T.wind_gwh\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Berg', 'Berg (TG)')\n    AND T.jahr = 2018;\n",
    "db_id": "thurgau_erneuerbare_elektrizitatsproduktion_gemeinde",
    "generated_query": "SELECT S.name AS gemeinde, T.jahr, T.photovoltaik_gwh, T.wind_gwh\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Berg', 'Berg (TG)')\n    AND T.jahr = 2018\nORDER BY S.name, T.jahr;",
    "meta_data": [
      {
        "question": "Zeigen Sie mir die Produktion von Energie aus landwirtschaftlichem Biogas in Fischingen, Kanton Thurgau, im Jahr 2018.",
        "query": "SELECT T.biogasanlagen_landwirtschaft_gwh\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.jahr = 2018\n    AND S.name IN ('Fischingen', 'Fischingen (TG)');\n",
        "score": 0.556115448474884
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_erneuerbare_elektrizitatsproduktion_gemeinde (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\teinwohner NUMERIC, \n\twasserkraft_gwh NUMERIC, \n\tbiomasse_holz_gwh NUMERIC, \n\tbiogasanlagen_landwirtschaft_gwh NUMERIC, \n\tkehricht_gwh NUMERIC, \n\tbiogasanlagen_industrie_gwh NUMERIC, \n\tbiogasanlagen_abwasser_gwh NUMERIC, \n\tphotovoltaik_gwh NUMERIC, \n\twind_gwh NUMERIC, \n\ttotal_gwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktion_gemeinde_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_erneuerbare_elektrizitatsproduktio_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_erneuerbare_elektrizitatsproduktion_gemeinde and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\neinwohner : 3492, 3439, 1570, 4773, 3949\nwasserkraft_gwh : 1.471000000000000085, 14.455000000000000071, 0E-18, 1.782999999999999918, 13.651999999999999247\nbiogasanlagen_landwirtschaft_gwh : 0.102999999999999994, 0.119999999999999996, 2.322000000000000064, 0.163000000000000006, 0E-18\nbiogasanlagen_abwasser_gwh : 2.2810000000000001386, 1.2190000000000000835, 0.0100000000000000002, 1.2290000000000000924, 0.0170000000000000012\nphotovoltaik_gwh : 0.359999999999999987, 1.877999999999999892, 1.487999999999999989, 3.092999999999999972, 3.581999999999999851\ntotal_gwh : 0.359999999999999987, 3.855999999999999872, 1.911000000000000032, 3.581999999999999851, 1.487999999999999989\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\neinwohner, Einwohner, 2683,2318,1350\nwasserkraft_gwh, Wasserkraft, GWh, 0,1.234,6.698\nbiomasse_holz_gwh, Biomasse, Holz, GWh, 0,2.266,0.404\nbiogasanlagen_landwirtschaft_gwh, Biogasanlagen, Landwirtschaft, GWh, 0,4.826,0.308\nkehricht_gwh, Kehricht, GWh, 0,49.982734,57.317\nbiogasanlagen_industrie_gwh, Biogasanlagen, Industrie, GWh, 0,0.651573,1.819\nbiogasanlagen_abwasser_gwh, Biogasanlagen, Abwasser, GWh, 0,0.272,1.219\nphotovoltaik_gwh, Solarenergie, GWh, 3.814,1.879,4.268\nwind_gwh, Wind, GWh, 0,0.005,0.006\ntotal_gwh, Total, GWh, 3.814,1.879,9.094\n*/\n\n\n\n### Question\nWie hoch war die Produktion von Solarstrom in Roggwil und Langrickenbach TG in den Jahren 2019 und 2020?\n### SQL query\nSELECT S.name AS gemeinde, T.jahr, T.photovoltaik_gwh\nFROM thurgau_erneuerbare_elektrizitatsproduktion_gemeinde AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Roggwil', 'Roggwil (TG)', 'Langrickenbach', 'Langrickenbach (TG)')\n    AND T.jahr IN (2019, 2020)\nORDER BY S.name, T.jahr;\n\n### Question\nZeigen Sie mir die Produktion von Energie aus Sonne und Wind in Berg, TG im Jahr 2018.\n### SQL query\n",
    "process_time": 7.766045090043917,
    "num_tokens": 1682,
    "hardness": "unknown",
    "scores": [
      0.556115448474884
    ],
    "lang": "de"
  },
  {
    "i": 97,
    "question": "In welchem Jahr erreichte die Zahl der Besch\u00e4ftigten im prim\u00e4ren Sektor im Thurgau ihren H\u00f6hepunkt?",
    "query": "SELECT T.jahr\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.sektor = 'Prim\u00e4r'\nGROUP BY T.jahr\nORDER BY SUM(T.beschaftigte_personen) DESC LIMIT 1;\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT T.jahr\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.sektor = 'Prim\u00e4r'\nORDER BY T.beschaftigte_personen DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Wie hoch ist der Anteil der Thurgauer Gemeinden, in denen die Zahl der Besch\u00e4ftigten im prim\u00e4ren Sektor zwischen 2013 und 2018 abgenommen hat?",
        "query": "SELECT (\n    100.0 * COUNT(CASE WHEN T.beschaftigte_personen_sektor_1_2018 < T.beschaftigte_personen_sektor_1_2013 THEN 1 END) /\n    COUNT(*)\n) AS prozent_gemeinden_abnahme_sektor_1\nFROM (\n    SELECT\n        S.name AS gemeinde,\n        SUM(CASE WHEN T.jahr = 2013 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_sektor_1_2013,\n        SUM(CASE WHEN T.jahr = 2018 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_sektor_1_2018\n    FROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr IN (2013, 2018)\n        AND T.sektor = 'Prim\u00e4r'\n    GROUP BY S.name\n) AS T;\n",
        "score": 0.3609154224395752
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nbeschaftigte_personen : 57, 61, 297, 89, 607\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n\n\n### Question\nIn welcher Thurgauer Gemeinde ist die Zahl der Besch\u00e4ftigten zwischen 2015 und 2020 am st\u00e4rksten gewachsen?\n### SQL query\nSELECT S.name AS gemeinde\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2015, 2020)\nGROUP BY S.name\nORDER BY (\n    100.0 * SUM(CASE WHEN T.jahr = 2020 THEN T.beschaftigte_personen ELSE 0 END) /\n    SUM(CASE WHEN T.jahr = 2015 THEN T.beschaftigte_personen ELSE 0 END)\n) DESC LIMIT 1;\n\n\n### Question\nIn welchem Jahr erreichte die Zahl der Besch\u00e4ftigten im prim\u00e4ren Sektor im Thurgau ihren H\u00f6hepunkt?\n### SQL query\n",
    "process_time": 6.847109518013895,
    "num_tokens": 1103,
    "hardness": "extra",
    "scores": [
      0.3609154224395752
    ],
    "lang": "de"
  },
  {
    "i": 98,
    "question": "Wie hoch ist die relative Ver\u00e4nderung der Besch\u00e4ftigten in den einzelnen Wirtschaftssektoren im Thurgau in Prozent zwischen 2011 und 2021?",
    "query": "SELECT\n    AGG.sektor,\n    (\n        100.0 *\n        (AGG.beschaftigte_personen_2021 - AGG.beschaftigte_personen_2011) /\n        AGG.beschaftigte_personen_2011\n    ) AS relative_veranderung_beschaftigte_personen\nFROM (\n    SELECT\n        T.sektor,\n        SUM(CASE WHEN T.jahr = 2021 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_2021,\n        SUM(CASE WHEN T.jahr = 2011 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_2011\n    FROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr IN (2011, 2021)\n    GROUP BY T.sektor\n) AS AGG;\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT\n    T.sektor,\n    (\n        100.0 * (T.beschaftigte_personen_2021 - T.beschaftigte_personen_2011) / T.beschaftigte_personen_2011\n    ) AS relative_veranderung_prozent\nFROM (\n    SELECT\n        T.sektor,\n        SUM(CASE WHEN T.jahr = 2011 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_2011,\n        SUM(CASE WHEN T.jahr = 2021 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_2021\n    FROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\n    WHERE T.jahr IN (2011, 2021)\n    GROUP BY T.sektor\n) AS T;",
    "meta_data": [
      {
        "question": "Wie hoch war die Zahl der Besch\u00e4ftigten pro Wirtschaftszweig im Kanton Thurgau in den Jahren 2017 bis 2020?",
        "query": "SELECT T.jahr, T.sektor, SUM(T.beschaftigte_personen)\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2017\n    AND T.jahr <= 2020\nGROUP BY T.sektor, T.jahr;\n",
        "score": 0.38182663917541504
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nbeschaftigte_personen : 57, 61, 297, 89, 607\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n\n\n### Question\nWie hoch ist der Anteil der Thurgauer Gemeinden, in denen die Zahl der Besch\u00e4ftigten im prim\u00e4ren Sektor zwischen 2013 und 2018 abgenommen hat?\n### SQL query\nSELECT (\n    100.0 * COUNT(CASE WHEN T.beschaftigte_personen_sektor_1_2018 < T.beschaftigte_personen_sektor_1_2013 THEN 1 END) /\n    COUNT(*)\n) AS prozent_gemeinden_abnahme_sektor_1\nFROM (\n    SELECT\n        S.name AS gemeinde,\n        SUM(CASE WHEN T.jahr = 2013 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_sektor_1_2013,\n        SUM(CASE WHEN T.jahr = 2018 THEN T.beschaftigte_personen ELSE 0 END) AS beschaftigte_personen_sektor_1_2018\n    FROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr IN (2013, 2018)\n        AND T.sektor = 'Prim\u00e4r'\n    GROUP BY S.name\n) AS T;\n\n\n### Question\nWie hoch ist die relative Ver\u00e4nderung der Besch\u00e4ftigten in den einzelnen Wirtschaftssektoren im Thurgau in Prozent zwischen 2011 und 2021?\n### SQL query\n",
    "process_time": 16.514497614931315,
    "num_tokens": 1222,
    "hardness": "unknown",
    "scores": [
      0.38182663917541504
    ],
    "lang": "de"
  },
  {
    "i": 99,
    "question": "Wie viele Personen waren 2015 im prim\u00e4ren Sektor in Uttwil TG besch\u00e4ftigt?",
    "query": "SELECT T.beschaftigte_personen\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Uttwil', 'Uttwil (TG)')\n    AND T.jahr = 2015\n    AND T.sektor = 'Prim\u00e4r';\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT T.beschaftigte_personen\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Uttwil', 'Uttwil (TG)')\n    AND T.jahr = 2015\n    AND T.sektor = 'Prim\u00e4r';",
    "meta_data": [
      {
        "question": "Wie viele Personen waren im Jahr 2015 in der Stadt Frauenfeld im Kanton Thurgau im sekund\u00e4ren Sektor besch\u00e4ftigt?",
        "query": "SELECT T.beschaftigte_personen\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Frauenfeld', 'Frauenfeld (TG)')\n    AND T.jahr = 2015\n    AND T.sektor = 'Sekund\u00e4r';\n",
        "score": 0.41357773542404175
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nbeschaftigte_personen : 57, 61, 297, 89, 607\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n\n\n### Question\nWie viele Personen waren im Jahr 2015 in der Stadt Frauenfeld im Kanton Thurgau im sekund\u00e4ren Sektor besch\u00e4ftigt?\n### SQL query\nSELECT T.beschaftigte_personen\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Frauenfeld', 'Frauenfeld (TG)')\n    AND T.jahr = 2015\n    AND T.sektor = 'Sekund\u00e4r';\n\n\n### Question\nWie viele Personen waren 2015 im prim\u00e4ren Sektor in Uttwil TG besch\u00e4ftigt?\n### SQL query\n",
    "process_time": 9.00058247288689,
    "num_tokens": 1051,
    "hardness": "unknown",
    "scores": [
      0.41357773542404175
    ],
    "lang": "de"
  },
  {
    "i": 100,
    "question": "Wie viele Besch\u00e4ftigte aus dem ersten Sektor gab es in Arbon und Egnach, Thurgau, in den Jahren 2012 und 2019?",
    "query": "SELECT S.name AS gemeinde, T.jahr, SUM(T.beschaftigte_personen) AS beschaftigte_personen_sektor_1\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Arbon', 'Arbon (TG)', 'Egnach', 'Egnach (TG)')\n    AND T.jahr IN (2012, 2019)\n    AND T.sektor = 'Prim\u00e4r'\nGROUP BY T.jahr, S.name\nORDER BY S.name, T.jahr;\n",
    "db_id": "thurgau_beschaftigte_nach_sektoren_und_gemeinden",
    "generated_query": "SELECT T.jahr, SUM(T.beschaftigte_personen)\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name IN ('Arbon', 'Egnach')\n    AND T.jahr IN (2012, 2019)\n    AND T.sektor = 'Prim\u00e4r'\nGROUP BY T.jahr;",
    "meta_data": [
      {
        "question": "Wie viele Besch\u00e4ftigte des terti\u00e4ren Sektors waren 2011 und 2021 im Kanton Thurgau t\u00e4tig?",
        "query": "SELECT T.jahr, SUM(T.beschaftigte_personen)\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2011, 2021)\n    AND T.sektor = 'Terti\u00e4r'\nGROUP BY T.jahr;\n",
        "score": 0.25522637367248535
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.thurgau_beschaftigte_nach_sektoren_und_gemeinden (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tsektor TEXT, \n\tbeschaftigte_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gemeinden_pkey PRIMARY KEY (uid), \n\tCONSTRAINT thurgau_beschaftigte_nach_sektoren_und_gem_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in thurgau_beschaftigte_nach_sektoren_und_gemeinden and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nbeschaftigte_personen : 57, 61, 297, 89, 607\nspatialunit_uid : 4741_A.ADM3, 4746_A.ADM3, 4551_A.ADM3, 4781_A.ADM3, 4716_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\nsektor, Wirtschaftssektor, Terti\u00e4r,Prim\u00e4r,Sekund\u00e4r\nbeschaftigte_personen, Besch\u00e4ftigte Personen, 4871,363,1077\n*/\n\n\n\n### Question\nWie viele Besch\u00e4ftigte des terti\u00e4ren Sektors waren 2011 und 2021 im Kanton Thurgau t\u00e4tig?\n### SQL query\nSELECT T.jahr, SUM(T.beschaftigte_personen)\nFROM thurgau_beschaftigte_nach_sektoren_und_gemeinden AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2011, 2021)\n    AND T.sektor = 'Terti\u00e4r'\nGROUP BY T.jahr;\n\n\n### Question\nWie viele Besch\u00e4ftigte aus dem ersten Sektor gab es in Arbon und Egnach, Thurgau, in den Jahren 2012 und 2019?\n### SQL query\n",
    "process_time": 7.407263568136841,
    "num_tokens": 1063,
    "hardness": "unknown",
    "scores": [
      0.25522637367248535
    ],
    "lang": "de"
  },
  {
    "i": 101,
    "question": "Wie hoch war die monatliche Stickoxidkonzentration (in Teilen pro Milliarde) in der Stadt Z\u00fcrich im Jahr 2019?",
    "query": "SELECT T.monat, T.nox_ppb\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT T.monat, T.nox_ppb\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;",
    "meta_data": [
      {
        "question": "Wie hoch war die Schwefeldioxidkonzentration in der Luft in Z\u00fcrich im Jahr 2019? Geben Sie die Konzentration in Milligramm pro Kubikmeter an.",
        "query": "SELECT T.monat, T.so2_ug_m3 / 1000 AS so2_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;\n",
        "score": 0.28582248091697693
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nco_mg_m3 : 1.76774193548387104, 0.65451612903225809, 0.81677419354838710, 0.62806451612903225, 1.58387096774193559\nno2_ug_m3 : 65.867586206896547, 61.251935483870966, 19.850909090909092, 60.594000000000001, 35.197666666666670\nno_ug_m3 : 88.5892592592592507, 82.7187096774193549, 50.3258064516129053, 17.8893103448275852, 63.7968965517241386\nnox_ppb : 159.5756666666666774, 69.1170967741935556, 36.3154838709677392, 83.0579310344827633, 66.7190322580645159\nso2_ug_m3 : 37.21433333333333593, 21.83451612903225936, 13.93333333333333357, 71.87275862068965182, 77.21434782608695002\no3_ug_m3 : 34.3106451612903243, 47.2009677419354858, 7.8729032258064517, 51.3216666666666654, 59.0837931034482722\njahr : 1984, 1983, 1999, 1994, 1986\nmonat : 6, 10, 11, 12, 1\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n\n\n### Question\nWie hoch war die Schwefeldioxidkonzentration in der Luft in Z\u00fcrich im Jahr 2019? Geben Sie die Konzentration in Milligramm pro Kubikmeter an.\n### SQL query\nSELECT T.monat, T.so2_ug_m3 / 1000 AS so2_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;\n\n\n### Question\nWie hoch war die monatliche Stickoxidkonzentration (in Teilen pro Milliarde) in der Stadt Z\u00fcrich im Jahr 2019?\n### SQL query\n",
    "process_time": 10.362363483058289,
    "num_tokens": 1830,
    "hardness": "hard",
    "scores": [
      0.28582248091697693
    ],
    "lang": "de"
  },
  {
    "i": 102,
    "question": "Wie hoch war die durchschnittliche Kohlenmonoxid-Konzentration in der Z\u00fcrcher Luft im Januar und im Juli, bezogen auf den Zeitraum 1990-2000?",
    "query": "SELECT\n    T.monat,\n    SUM(T.co_mg_m3) / COUNT(T.co_mg_m3) AS avg_co_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr >= 1990\n    AND T.jahr <= 2000\n    AND T.co_mg_m3 IS NOT NULL\n    AND T.monat IN (1, 7)\nGROUP BY T.monat;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT AVG(co_mg_m3) AS average_co_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983\nWHERE jahr BETWEEN 1990 AND 2000\n    AND (monat = 1 OR monat = 7)\n    AND co_mg_m3 IS NOT NULL;",
    "meta_data": [
      {
        "question": "Wie hoch war die CO- und SO2-Konzentration (beide in Mikrogramm/m3) in Z\u00fcrich zwischen Oktober 1999 und Juli 2000?",
        "query": "SELECT T.jahr, T.monat, T.co_mg_m3 * 1000 AS co_ug_m3, T.so2_ug_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND\n    (\n        (T.jahr = 1999 AND T.monat >= 10)\n        OR (T.jahr = 2000 AND T.monat <= 7)\n    )\n    AND T.co_mg_m3 IS NOT NULL\nORDER BY T.jahr ASC, T.monat ASC;\n",
        "score": 0.420213520526886
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nco_mg_m3 : 1.76774193548387104, 0.65451612903225809, 0.81677419354838710, 0.62806451612903225, 1.58387096774193559\nno2_ug_m3 : 65.867586206896547, 61.251935483870966, 19.850909090909092, 60.594000000000001, 35.197666666666670\nno_ug_m3 : 88.5892592592592507, 82.7187096774193549, 50.3258064516129053, 17.8893103448275852, 63.7968965517241386\nnox_ppb : 159.5756666666666774, 69.1170967741935556, 36.3154838709677392, 83.0579310344827633, 66.7190322580645159\nso2_ug_m3 : 37.21433333333333593, 21.83451612903225936, 13.93333333333333357, 71.87275862068965182, 77.21434782608695002\no3_ug_m3 : 34.3106451612903243, 47.2009677419354858, 7.8729032258064517, 51.3216666666666654, 59.0837931034482722\njahr : 1984, 1983, 1999, 1994, 1986\nmonat : 6, 10, 11, 12, 1\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n\n\n### Question\nWie hoch war die CO- und SO2-Konzentration (beide in Mikrogramm/m3) in Z\u00fcrich zwischen Oktober 1999 und Juli 2000?\n### SQL query\nSELECT T.jahr, T.monat, T.co_mg_m3 * 1000 AS co_ug_m3, T.so2_ug_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND\n    (\n        (T.jahr = 1999 AND T.monat >= 10)\n        OR (T.jahr = 2000 AND T.monat <= 7)\n    )\n    AND T.co_mg_m3 IS NOT NULL\nORDER BY T.jahr ASC, T.monat ASC;\n\n\n### Question\nWie hoch war die durchschnittliche Kohlenmonoxid-Konzentration in der Z\u00fcrcher Luft im Januar und im Juli, bezogen auf den Zeitraum 1990-2000?\n### SQL query\n",
    "process_time": 11.161251662066206,
    "num_tokens": 1894,
    "hardness": "unknown",
    "scores": [
      0.420213520526886
    ],
    "lang": "de"
  },
  {
    "i": 103,
    "question": "Wie viel Ozon war im Jahr 2005 jeden Monat in der Luft der Stadt Z\u00fcrich?",
    "query": "SELECT T.monat, T.o3_ug_m3 AS o3_ug_m3_2005\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2005;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT T.monat, T.o3_ug_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2005\n    AND T.o3_ug_m3 IS NOT NULL;",
    "meta_data": [
      {
        "question": "In welchem Monat gibt es in der Stadt Z\u00fcrich generell am wenigsten Partikel in der Luft?",
        "query": "SELECT T.monat, SUM(T.pn_1_cm3) / COUNT(T.pn_1_cm3) AS monat_avg_pn_1_cm3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.pn_1_cm3 IS NOT NULL\nGROUP BY T.monat\nORDER BY SUM(T.pn_1_cm3) / COUNT(T.pn_1_cm3) ASC\nLIMIT 1;\n",
        "score": 0.508134663105011
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nco_mg_m3 : 1.76774193548387104, 0.65451612903225809, 0.81677419354838710, 0.62806451612903225, 1.58387096774193559\nno2_ug_m3 : 65.867586206896547, 61.251935483870966, 19.850909090909092, 60.594000000000001, 35.197666666666670\nno_ug_m3 : 88.5892592592592507, 82.7187096774193549, 50.3258064516129053, 17.8893103448275852, 63.7968965517241386\nnox_ppb : 159.5756666666666774, 69.1170967741935556, 36.3154838709677392, 83.0579310344827633, 66.7190322580645159\nso2_ug_m3 : 37.21433333333333593, 21.83451612903225936, 13.93333333333333357, 71.87275862068965182, 77.21434782608695002\no3_ug_m3 : 34.3106451612903243, 47.2009677419354858, 7.8729032258064517, 51.3216666666666654, 59.0837931034482722\njahr : 1984, 1983, 1999, 1994, 1986\nmonat : 6, 10, 11, 12, 1\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n\n\n### Question\nIn welchem Monat gibt es in der Stadt Z\u00fcrich generell am wenigsten Partikel in der Luft?\n### SQL query\nSELECT T.monat, SUM(T.pn_1_cm3) / COUNT(T.pn_1_cm3) AS monat_avg_pn_1_cm3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.pn_1_cm3 IS NOT NULL\nGROUP BY T.monat\nORDER BY SUM(T.pn_1_cm3) / COUNT(T.pn_1_cm3) ASC\nLIMIT 1;\n\n\n### Question\nWie viel Ozon war im Jahr 2005 jeden Monat in der Luft der Stadt Z\u00fcrich?\n### SQL query\n",
    "process_time": 11.778722489951178,
    "num_tokens": 1840,
    "hardness": "unknown",
    "scores": [
      0.508134663105011
    ],
    "lang": "de"
  },
  {
    "i": 104,
    "question": "Wann erreichte die Kohlenmonoxidkonzentration in der Luft in der Stadt Z\u00fcrich ihr Maximum? Geben Sie auch die Konzentration in mg/m3 an.",
    "query": "SELECT T.jahr, T.monat, T.co_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.co_mg_m3 IS NOT NULL\nORDER BY T.co_mg_m3 DESC\nLIMIT 1;\n",
    "db_id": "stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983",
    "generated_query": "SELECT T.jahr, T.monat, T.co_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\nORDER BY T.co_mg_m3 DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Wie hoch war die Schwefeldioxidkonzentration in der Luft in Z\u00fcrich im Jahr 2019? Geben Sie die Konzentration in Milligramm pro Kubikmeter an.",
        "query": "SELECT T.monat, T.so2_ug_m3 / 1000 AS so2_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;\n",
        "score": 0.3772750198841095
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 (\n\tuid SERIAL NOT NULL, \n\tco_mg_m3 NUMERIC, \n\tno2_ug_m3 NUMERIC, \n\tno_ug_m3 NUMERIC, \n\tnox_ppb NUMERIC, \n\tso2_ug_m3 NUMERIC, \n\to3_ug_m3 NUMERIC, \n\tpm10_ug_m3 NUMERIC, \n\tpn_1_cm3 NUMERIC, \n\tpm2_5_ug_m3 NUMERIC, \n\tjahr INTEGER, \n\tmonat NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983_pkey PRIMARY KEY (uid), \n\tCONSTRAINT stadt_zurich_monatlich_luftqualitatsmessun_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nco_mg_m3 : 1.76774193548387104, 0.65451612903225809, 0.81677419354838710, 0.62806451612903225, 1.58387096774193559\nno2_ug_m3 : 65.867586206896547, 61.251935483870966, 19.850909090909092, 60.594000000000001, 35.197666666666670\nno_ug_m3 : 88.5892592592592507, 82.7187096774193549, 50.3258064516129053, 17.8893103448275852, 63.7968965517241386\nnox_ppb : 159.5756666666666774, 69.1170967741935556, 36.3154838709677392, 83.0579310344827633, 66.7190322580645159\nso2_ug_m3 : 37.21433333333333593, 21.83451612903225936, 13.93333333333333357, 71.87275862068965182, 77.21434782608695002\no3_ug_m3 : 34.3106451612903243, 47.2009677419354858, 7.8729032258064517, 51.3216666666666654, 59.0837931034482722\njahr : 1984, 1983, 1999, 1994, 1986\nmonat : 6, 10, 11, 12, 1\n*/\n\n/*\nColumn name, Column discription, Example values\nco_mg_m3, Kohlenmonoxid (CO) in mg/m3, 3.69741935483871,2.3325,2.45451612903226\nno2_ug_m3, Stickstoffdioxid (NO2) in \u00b5g/m3, 38.5848387096774,47.8067857142857,48.0387096774194\nno_ug_m3, Stickstoffmonoxid (NO) in \u00b5g/m3, 162.903870967742,157.969285714286,171.871290322581\nnox_ppb, Stickstoffoxide (NOx) in ppb, 150.781612903226,151.648214285714,162.916774193548\nso2_ug_m3, Schwefeldioxid (SO2) in \u00b5g/m3, 83.6127586206897,100.517142857143,69.5396666666667\no3_ug_m3, Ozon (O3) in \u00b5g/m3, 11.4648148148148,6.99464285714286\npm10_ug_m3, Schwebestaub PM10 (Durchmesser 10\u00b5m oder weniger) in \u00b5g/m3, 33.9512,30.7521428571429\npn_1_cm3, Partikelanzahl pro cm3, 23403.0509090909,12632.1964516129\npm2_5_ug_m3, Schwebestaub PM2.5 (Durchmesser 2,5\u00b5m oder weniger) in \u00b5g/m3, 26.6368181818182,16.9007407407407\nmonat, Monat, 1,2,3\n*/\n\n\n\n### Question\nWie hoch war die Schwefeldioxidkonzentration in der Luft in Z\u00fcrich im Jahr 2019? Geben Sie die Konzentration in Milligramm pro Kubikmeter an.\n### SQL query\nSELECT T.monat, T.so2_ug_m3 / 1000 AS so2_mg_m3\nFROM stadt_zurich_monatlich_luftqualitatsmessungen_seit_1983 AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name = 'Z\u00fcrich'\n    AND T.jahr = 2019\nORDER BY T.monat ASC;\n\n\n### Question\nWann erreichte die Kohlenmonoxidkonzentration in der Luft in der Stadt Z\u00fcrich ihr Maximum? Geben Sie auch die Konzentration in mg/m3 an.\n### SQL query\n",
    "process_time": 13.54025539313443,
    "num_tokens": 1835,
    "hardness": "unknown",
    "scores": [
      0.3772750198841095
    ],
    "lang": "de"
  },
  {
    "i": 105,
    "question": "Zeigen Sie mir den Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich f\u00fcr jedes Jahr zwischen 2010 und 2020.",
    "query": "SELECT T.jahr, T.median_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020;\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT T.jahr, T.median_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020;",
    "meta_data": [
      {
        "question": "Zeigen Sie mir alle verf\u00fcgbaren statistischen Indikatoren f\u00fcr den Preis von Wohnbauland im Kanton Z\u00fcrich f\u00fcr jedes Jahr zwischen 2017 und 2021.",
        "query": "SELECT\n    T.jahr,\n    T.quantil_25_preis_chf_pro_m2,\n    T.median_preis_chf_pro_m2,\n    T.quantil_75_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 2017\n    AND T.jahr <= 2021;\n",
        "score": 0.468517929315567
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 1995, 2007\nfaelle : 1844, 2161, 454, 250, 3980\ndurschnitt_preis_chf_pro_m2 : 1647, 581, 1733, 875, 719\nquantil_25_preis_chf_pro_m2 : 128, 641, 250, 557, 106\nmedian_preis_chf_pro_m2 : 621, 947, 622, 180, 800\nquantil_75_preis_chf_pro_m2 : 275, 800, 180, 301, 381\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n\n\n### Question\nWie hoch war der durchschnittliche Quadratmeterpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich zwischen 1980 und 2000?\n### SQL query\nSELECT AVG(T.durschnitt_preis_chf_pro_m2) AS durschnitt_preis_chf_pro_m2_1980_2000\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 1980\n    AND T.jahr <= 2000;\n\n\n### Question\nZeigen Sie mir den Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich f\u00fcr jedes Jahr zwischen 2010 und 2020.\n### SQL query\n",
    "process_time": 6.525471992092207,
    "num_tokens": 1295,
    "hardness": "hard",
    "scores": [
      0.468517929315567
    ],
    "lang": "de"
  },
  {
    "i": 106,
    "question": "Wann hat der Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich seinen H\u00f6hepunkt erreicht?",
    "query": "SELECT T.jahr\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY T.median_preis_chf_pro_m2 DESC\nLIMIT 1;\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT T.jahr\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY T.median_preis_chf_pro_m2 DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "In welchem Jahr war der Interquartilabstand des Quadratmeterpreises f\u00fcr Wohnbauland im Kanton Z\u00fcrich am h\u00f6chsten und wie hoch war er?",
        "query": "SELECT T.jahr, T.quantil_75_preis_chf_pro_m2 - T.quantil_25_preis_chf_pro_m2 AS interquartilabstand_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY interquartilabstand_preis_chf_pro_m2 DESC\nLIMIT 1;\n",
        "score": 0.31353652477264404
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 1995, 2007\nfaelle : 1844, 2161, 454, 250, 3980\ndurschnitt_preis_chf_pro_m2 : 1647, 581, 1733, 875, 719\nquantil_25_preis_chf_pro_m2 : 128, 641, 250, 557, 106\nmedian_preis_chf_pro_m2 : 621, 947, 622, 180, 800\nquantil_75_preis_chf_pro_m2 : 275, 800, 180, 301, 381\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n\n\n### Question\nIn welchem Jahr war der Interquartilabstand des Quadratmeterpreises f\u00fcr Wohnbauland im Kanton Z\u00fcrich am h\u00f6chsten und wie hoch war er?\n### SQL query\nSELECT T.jahr, T.quantil_75_preis_chf_pro_m2 - T.quantil_25_preis_chf_pro_m2 AS interquartilabstand_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY interquartilabstand_preis_chf_pro_m2 DESC\nLIMIT 1;\n\n\n### Question\nWann hat der Medianpreis f\u00fcr Wohnbauland im Kanton Z\u00fcrich seinen H\u00f6hepunkt erreicht?\n### SQL query\n",
    "process_time": 9.2115782010369,
    "num_tokens": 1308,
    "hardness": "extra",
    "scores": [
      0.31353652477264404
    ],
    "lang": "de"
  },
  {
    "i": 107,
    "question": "Wie viele Verk\u00e4ufe von Wohnbauland gab es im Kanton Z\u00fcrich in den Jahren 2015 und 2021?",
    "query": "SELECT T.jahr, T.faelle\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr IN (2015, 2021);\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT SUM(T.faelle) AS faelle_2015_2021\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE\n    S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr IN (2015, 2021);",
    "meta_data": [
      {
        "question": "Wie viele Verk\u00e4ufe von Wohnbauland gab es im Kanton Z\u00fcrich im Zeitraum 1990-2010 insgesamt?",
        "query": "SELECT SUM(T.faelle) AS faelle_1990_2010\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE\n    S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 1990\n    AND T.jahr <= 2010;\n",
        "score": 0.22489215433597565
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 1995, 2007\nfaelle : 1844, 2161, 454, 250, 3980\ndurschnitt_preis_chf_pro_m2 : 1647, 581, 1733, 875, 719\nquantil_25_preis_chf_pro_m2 : 128, 641, 250, 557, 106\nmedian_preis_chf_pro_m2 : 621, 947, 622, 180, 800\nquantil_75_preis_chf_pro_m2 : 275, 800, 180, 301, 381\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n\n\n### Question\nWie viele Verk\u00e4ufe von Wohnbauland gab es im Kanton Z\u00fcrich im Zeitraum 1990-2010 insgesamt?\n### SQL query\nSELECT SUM(T.faelle) AS faelle_1990_2010\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE\n    S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\n    AND T.jahr >= 1990\n    AND T.jahr <= 2010;\n\n\n### Question\nWie viele Verk\u00e4ufe von Wohnbauland gab es im Kanton Z\u00fcrich in den Jahren 2015 und 2021?\n### SQL query\n",
    "process_time": 9.962838489096612,
    "num_tokens": 1280,
    "hardness": "unknown",
    "scores": [
      0.22489215433597565
    ],
    "lang": "de"
  },
  {
    "i": 108,
    "question": "In welchem Jahr ist der durchschnittliche Preis f\u00fcr Wohnbauland im Kanton Z\u00fcrich am st\u00e4rksten gestiegen (in CHF) im Vergleich zum Vorjahr?",
    "query": "SELECT T.jahr\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY T.durschnitt_preis_chf_pro_m2 - LAG(T.durschnitt_preis_chf_pro_m2) OVER (ORDER BY T.jahr) DESC\nLIMIT 1;\n",
    "db_id": "zurich_effektive_preise_wohnbauland",
    "generated_query": "SELECT T.jahr, T.durschnitt_preis_chf_pro_m2 - LAG(T.durschnitt_preis_chf_pro_m2) OVER (ORDER BY T.jahr) AS preis_steigerung_chf\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY preis_steigerung_chf DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "In welchem Jahr war der Interquartilabstand des Quadratmeterpreises f\u00fcr Wohnbauland im Kanton Z\u00fcrich am h\u00f6chsten und wie hoch war er?",
        "query": "SELECT T.jahr, T.quantil_75_preis_chf_pro_m2 - T.quantil_25_preis_chf_pro_m2 AS interquartilabstand_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY interquartilabstand_preis_chf_pro_m2 DESC\nLIMIT 1;\n",
        "score": 0.24797093868255615
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.zurich_effektive_preise_wohnbauland (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tfaelle NUMERIC, \n\tdurschnitt_preis_chf_pro_m2 NUMERIC, \n\tquantil_25_preis_chf_pro_m2 NUMERIC, \n\tmedian_preis_chf_pro_m2 NUMERIC, \n\tquantil_75_preis_chf_pro_m2 NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_pkey PRIMARY KEY (uid), \n\tCONSTRAINT zurich_effektive_preise_wohnbauland_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in zurich_effektive_preise_wohnbauland and 5 examples in each column for high cardinality columns :\nuid : 12, 19, 39, 46, 48\njahr : 2019, 2016, 1986, 1995, 2007\nfaelle : 1844, 2161, 454, 250, 3980\ndurschnitt_preis_chf_pro_m2 : 1647, 581, 1733, 875, 719\nquantil_25_preis_chf_pro_m2 : 128, 641, 250, 557, 106\nmedian_preis_chf_pro_m2 : 621, 947, 622, 180, 800\nquantil_75_preis_chf_pro_m2 : 275, 800, 180, 301, 381\n*/\n\n/*\nColumn name, Column discription, Example values\nfaelle, Anzahl Transaktionen von unbebautem Wohnbauland, 167715272076\ndurschnitt_preis_chf_pro_m2, Durchschnittspreis in CHF pro Quadratmeter, 169175171\nquantil_25_preis_chf_pro_m2, Unteres Quartil der Preise in CHF pro Quadratmeter, 94100104\nmedian_preis_chf_pro_m2, Median Preis in CHF pro Quadratmeter, 131150137\nquantil_75_preis_chf_pro_m2, Oberes Quartil der Preise in CHF pro Quadratmeter, 180198191\n*/\n\n\n\n### Question\nIn welchem Jahr war der Interquartilabstand des Quadratmeterpreises f\u00fcr Wohnbauland im Kanton Z\u00fcrich am h\u00f6chsten und wie hoch war er?\n### SQL query\nSELECT T.jahr, T.quantil_75_preis_chf_pro_m2 - T.quantil_25_preis_chf_pro_m2 AS interquartilabstand_preis_chf_pro_m2\nFROM zurich_effektive_preise_wohnbauland AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND S.name LIKE '%Zurich%'\nORDER BY interquartilabstand_preis_chf_pro_m2 DESC\nLIMIT 1;\n\n\n### Question\nIn welchem Jahr ist der durchschnittliche Preis f\u00fcr Wohnbauland im Kanton Z\u00fcrich am st\u00e4rksten gestiegen (in CHF) im Vergleich zum Vorjahr?\n### SQL query\n",
    "process_time": 8.646839240100235,
    "num_tokens": 1326,
    "hardness": "unknown",
    "scores": [
      0.24797093868255615
    ],
    "lang": "de"
  },
  {
    "i": 109,
    "question": "Wie hoch war das durchschnittliche Reineinkommen in Matth\u00e4us, BS, 2015?",
    "query": "SELECT T.reineinkommen_mittelwert\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2015\n    AND S.name = 'Matth\u00e4us';\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT T.reineinkommen_mittelwert\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Matth\u00e4us' AND S.canton = true AND T.jahr = 2015;",
    "meta_data": [
      {
        "question": "Wie hoch war das mittlere Reinverm\u00f6gen in den 5 Wohngebieten von Basel-Stadt mit dem niedrigsten mittleren Reineinkommen im Jahr 2015?",
        "query": "SELECT S.name, T.reinvermogen_mittelwert AS reinvermogen_mittelwert_2015\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nJOIN (\n    SELECT T.spatialunit_uid\n    FROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE T.jahr = 2015\n    ORDER BY T.reineinkommen_mittelwert ASC\n    LIMIT 5\n) AS T2 ON T.spatialunit_uid = T2.spatialunit_uid\nWHERE T.jahr = 2015;\n",
        "score": 0.5582729578018188
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 1992\nanzahl_veranlagungen : 5433, 4235, 1570, 11457, 3077\nreineinkommen_mittelwert : 65391, 63274, 87178, 71291, 46099\nreineinkommen_median : 46500, 43151, 47417, 44100, 57364\nreineinkommen_gini_koeffizient : 0.47799999999999998, 0.47899999999999998, 0.36199999999999999, 0.41499999999999998, 0.45200000000000001\nsteuerbares_einkommen_mittelwert : 42491, 29244, 72197, 51765, 44939\nsteuerbares_einkommen_median : 50436, 41985, 45100, 37546, 32593\nertrag_einkommenssteuer_mittelwert : 9458, 17822, 12312, 7244, 6016\nertrag_einkommenssteuer_median : 5546, 4880, 2910, 6016, 5162\nreinvermogen_mittelwert : 20033, 196345, 2359934, 711176, 198392\nreinvermogen_median : 65590, 4235, 14018, 5583, 51731\nreinvermogen_gini_koeffizient : 0.87500000000000000, 0.90000000000000002, 0.86599999999999999, 0.84899999999999998, 0.96499999999999997\nsteuerbares_vermogen_mittelwert : 632716, 40113, 130751, 42611, 60401\nertrag_vermogenssteuer_mittelwert : 3324, 4297, 1414, 6016, 641\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war das mittlere Reinverm\u00f6gen in den 5 Wohngebieten von Basel-Stadt mit dem niedrigsten mittleren Reineinkommen im Jahr 2015?\n### SQL query\nSELECT S.name, T.reinvermogen_mittelwert AS reinvermogen_mittelwert_2015\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nJOIN (\n    SELECT T.spatialunit_uid\n    FROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE T.jahr = 2015\n    ORDER BY T.reineinkommen_mittelwert ASC\n    LIMIT 5\n) AS T2 ON T.spatialunit_uid = T2.spatialunit_uid\nWHERE T.jahr = 2015;\n\n\n### Question\nWie hoch war das durchschnittliche Reineinkommen in Matth\u00e4us, BS, 2015?\n### SQL query\n",
    "process_time": 10.257702476112172,
    "num_tokens": 2041,
    "hardness": "medium",
    "scores": [
      0.5582729578018188
    ],
    "lang": "de"
  },
  {
    "i": 110,
    "question": "In welchem Wohnquartier in Basel-Stadt war die Einkommensungleichheit im Jahr 2020 am gr\u00f6ssten?",
    "query": "SELECT S.name\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.reineinkommen_gini_koeffizient DESC\nLIMIT 1;\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT S.name\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.reineinkommen_gini_koeffizient DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "In welchem Jahr war das durchschnittliche steuerbare Einkommen in Basel-Stadt am h\u00f6chsten?",
        "query": "SELECT T.jahr\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\nGROUP BY T.jahr\nORDER BY (SUM(T.anzahl_veranlagungen * T.steuerbares_einkommen_mittelwert)) / SUM(T.anzahl_veranlagungen) DESC\nLIMIT 1;\n",
        "score": 0.35804513096809387
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 1992\nanzahl_veranlagungen : 5433, 4235, 1570, 11457, 3077\nreineinkommen_mittelwert : 65391, 63274, 87178, 71291, 46099\nreineinkommen_median : 46500, 43151, 47417, 44100, 57364\nreineinkommen_gini_koeffizient : 0.47799999999999998, 0.47899999999999998, 0.36199999999999999, 0.41499999999999998, 0.45200000000000001\nsteuerbares_einkommen_mittelwert : 42491, 29244, 72197, 51765, 44939\nsteuerbares_einkommen_median : 50436, 41985, 45100, 37546, 32593\nertrag_einkommenssteuer_mittelwert : 9458, 17822, 12312, 7244, 6016\nertrag_einkommenssteuer_median : 5546, 4880, 2910, 6016, 5162\nreinvermogen_mittelwert : 20033, 196345, 2359934, 711176, 198392\nreinvermogen_median : 65590, 4235, 14018, 5583, 51731\nreinvermogen_gini_koeffizient : 0.87500000000000000, 0.90000000000000002, 0.86599999999999999, 0.84899999999999998, 0.96499999999999997\nsteuerbares_vermogen_mittelwert : 632716, 40113, 130751, 42611, 60401\nertrag_vermogenssteuer_mittelwert : 3324, 4297, 1414, 6016, 641\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelches waren die 3 Wohnvierteln in Basel-Stadt mit dem h\u00f6chsten durchschnittlichen steuerbaren Verm\u00f6gen im Jahr 2010? Geben Sie auch das Verm\u00f6gen an.\n### SQL query\nSELECT S.name, T.steuerbares_vermogen_mittelwert\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2010\nORDER BY T.steuerbares_vermogen_mittelwert DESC\nLIMIT 3;\n\n\n### Question\nIn welchem Wohnquartier in Basel-Stadt war die Einkommensungleichheit im Jahr 2020 am gr\u00f6ssten?\n### SQL query\n",
    "process_time": 10.530593731906265,
    "num_tokens": 1983,
    "hardness": "extra",
    "scores": [
      0.35804513096809387
    ],
    "lang": "de"
  },
  {
    "i": 111,
    "question": "Wie hoch war das durchschnittliche steuerbare Einkommen im Kanton Basel-Stadt im Jahr 2014?",
    "query": "SELECT (SUM(T.anzahl_veranlagungen * T.steuerbares_einkommen_mittelwert)) / SUM(T.anzahl_veranlagungen) AS steuerbares_einkommen_mittelwert_basel_stadt_2014\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2014;\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT AVG(steuerbares_einkommen_mittelwert) AS durchschnittliches_steuerbares_einkommen\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE' AND T.jahr = 2014;",
    "meta_data": [
      {
        "question": "In welchem Jahr war das durchschnittliche steuerbare Einkommen in Basel-Stadt am h\u00f6chsten?",
        "query": "SELECT T.jahr\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\nGROUP BY T.jahr\nORDER BY (SUM(T.anzahl_veranlagungen * T.steuerbares_einkommen_mittelwert)) / SUM(T.anzahl_veranlagungen) DESC\nLIMIT 1;\n",
        "score": 0.18037079274654388
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 1992\nanzahl_veranlagungen : 5433, 4235, 1570, 11457, 3077\nreineinkommen_mittelwert : 65391, 63274, 87178, 71291, 46099\nreineinkommen_median : 46500, 43151, 47417, 44100, 57364\nreineinkommen_gini_koeffizient : 0.47799999999999998, 0.47899999999999998, 0.36199999999999999, 0.41499999999999998, 0.45200000000000001\nsteuerbares_einkommen_mittelwert : 42491, 29244, 72197, 51765, 44939\nsteuerbares_einkommen_median : 50436, 41985, 45100, 37546, 32593\nertrag_einkommenssteuer_mittelwert : 9458, 17822, 12312, 7244, 6016\nertrag_einkommenssteuer_median : 5546, 4880, 2910, 6016, 5162\nreinvermogen_mittelwert : 20033, 196345, 2359934, 711176, 198392\nreinvermogen_median : 65590, 4235, 14018, 5583, 51731\nreinvermogen_gini_koeffizient : 0.87500000000000000, 0.90000000000000002, 0.86599999999999999, 0.84899999999999998, 0.96499999999999997\nsteuerbares_vermogen_mittelwert : 632716, 40113, 130751, 42611, 60401\nertrag_vermogenssteuer_mittelwert : 3324, 4297, 1414, 6016, 641\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn welchem Jahr war das durchschnittliche steuerbare Einkommen in Basel-Stadt am h\u00f6chsten?\n### SQL query\nSELECT T.jahr\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\nGROUP BY T.jahr\nORDER BY (SUM(T.anzahl_veranlagungen * T.steuerbares_einkommen_mittelwert)) / SUM(T.anzahl_veranlagungen) DESC\nLIMIT 1;\n\n\n### Question\nWie hoch war das durchschnittliche steuerbare Einkommen im Kanton Basel-Stadt im Jahr 2014?\n### SQL query\n",
    "process_time": 6.697853927966207,
    "num_tokens": 1963,
    "hardness": "unknown",
    "scores": [
      0.18037079274654388
    ],
    "lang": "de"
  },
  {
    "i": 112,
    "question": "Wie stark hat sich das durchschnittliche steuerpflichtige Verm\u00f6gen in Clara (BS) zwischen 1995 und 2015 ver\u00e4ndert? Geben Sie den relativen Unterschied in Prozent an.",
    "query": "SELECT\n    (\n        100.0 * SUM(CASE WHEN T.jahr = 2015 THEN T.steuerbares_vermogen_mittelwert ELSE - T.steuerbares_vermogen_mittelwert END) /\n        SUM(T.steuerbares_vermogen_mittelwert)\n     ) AS steuerbares_vermogen_mittelwert_prozent_aenderung_1995_2015\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Clara'\n    AND T.jahr IN (1995, 2015);\n",
    "db_id": "basel_stadt_steuerstatistik_kennzahlen_wohnvierteln",
    "generated_query": "SELECT\n    100.0 * (SUM(CASE WHEN T.jahr = 2015 THEN T.steuerbares_vermogen_mittelwert ELSE - T.steuerbares_vermogen_mittelwert END) - SUM(CASE WHEN T.jahr = 1995 THEN T.steuerbares_vermogen_mittelwert END)) / SUM(CASE WHEN T.jahr = 1995 THEN T.steuerbares_vermogen_mittelwert END) AS steuerbares_vermogen_mittelwert_prozent_aenderung_1995_2015\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Clara'\n    AND T.jahr IN (1995, 2015);",
    "meta_data": [
      {
        "question": "Wie haben sich das mittlere Nettoeinkommen und das mittlere steuerpflichtige Einkommen (in Prozent) zwischen 2000 und 2020 in Clara, BS, ver\u00e4ndert?",
        "query": "SELECT\n    (\n        100.0 * SUM(CASE WHEN T.jahr = 2020 THEN T.reineinkommen_mittelwert ELSE - T.reineinkommen_mittelwert END) /\n        SUM(CASE WHEN T.jahr = 2000 THEN T.reineinkommen_mittelwert END)\n    ) AS reineinkommen_mittelwert_prozent_aenderung_2000_2020,\n    (\n        100.0 * SUM(CASE WHEN T.jahr = 2020 THEN T.steuerbares_einkommen_mittelwert ELSE - T.steuerbares_einkommen_mittelwert END) /\n        SUM(CASE WHEN T.jahr = 2000 THEN T.steuerbares_einkommen_mittelwert END)\n    ) AS steuerbares_einkommen_mittelwert_prozent_aenderung_2000_2020\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Clara'\n    AND T.jahr IN (2000, 2020);\n",
        "score": 0.37984591722488403
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_steuerstatistik_kennzahlen_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanzahl_veranlagungen NUMERIC, \n\treineinkommen_mittelwert NUMERIC, \n\treineinkommen_median NUMERIC, \n\treineinkommen_gini_koeffizient NUMERIC, \n\tsteuerbares_einkommen_mittelwert NUMERIC, \n\tsteuerbares_einkommen_median NUMERIC, \n\tertrag_einkommenssteuer_mittelwert NUMERIC, \n\tertrag_einkommenssteuer_median NUMERIC, \n\treinvermogen_mittelwert NUMERIC, \n\treinvermogen_median NUMERIC, \n\treinvermogen_gini_koeffizient NUMERIC, \n\tsteuerbares_vermogen_mittelwert NUMERIC, \n\tsteuerbares_vermogen_median NUMERIC, \n\tertrag_vermogenssteuer_mittelwert NUMERIC, \n\tertrag_vermogenssteuer_median NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_steuerstatistik_kennzahlen_woh_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_steuerstatistik_kennzahlen_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 1992\nanzahl_veranlagungen : 5433, 4235, 1570, 11457, 3077\nreineinkommen_mittelwert : 65391, 63274, 87178, 71291, 46099\nreineinkommen_median : 46500, 43151, 47417, 44100, 57364\nreineinkommen_gini_koeffizient : 0.47799999999999998, 0.47899999999999998, 0.36199999999999999, 0.41499999999999998, 0.45200000000000001\nsteuerbares_einkommen_mittelwert : 42491, 29244, 72197, 51765, 44939\nsteuerbares_einkommen_median : 50436, 41985, 45100, 37546, 32593\nertrag_einkommenssteuer_mittelwert : 9458, 17822, 12312, 7244, 6016\nertrag_einkommenssteuer_median : 5546, 4880, 2910, 6016, 5162\nreinvermogen_mittelwert : 20033, 196345, 2359934, 711176, 198392\nreinvermogen_median : 65590, 4235, 14018, 5583, 51731\nreinvermogen_gini_koeffizient : 0.87500000000000000, 0.90000000000000002, 0.86599999999999999, 0.84899999999999998, 0.96499999999999997\nsteuerbares_vermogen_mittelwert : 632716, 40113, 130751, 42611, 60401\nertrag_vermogenssteuer_mittelwert : 3324, 4297, 1414, 6016, 641\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanzahl_veranlagungen, None, 5433,8141,3226\nreineinkommen_mittelwert, None, 47514,63915,53985\nreineinkommen_median, None, 44300,50600,47200\nreineinkommen_gini_koeffizient, None, 0.334,0.424,0.382\nsteuerbares_einkommen_mittelwert, None, 42282,56532,48135\nsteuerbares_einkommen_median, None, 39900,45200,42000\nertrag_einkommenssteuer_mittelwert, None, 6285,9946,7823\nertrag_einkommenssteuer_median, None, 5082,6475,5610\nreinvermogen_mittelwert, None, 32774,149771,89835\nreinvermogen_median, None, 0,17000,18000\nreinvermogen_gini_koeffizient, None, 0.91,0.89,0.919\nsteuerbares_vermogen_mittelwert, None, 30636,137175,84603\nsteuerbares_vermogen_median, None, 0,2128,4321\nertrag_vermogenssteuer_mittelwert, None, 175,961,591\nertrag_vermogenssteuer_median, None, 0,15,1\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie haben sich das mittlere Nettoeinkommen und das mittlere steuerpflichtige Einkommen (in Prozent) zwischen 2000 und 2020 in Clara, BS, ver\u00e4ndert?\n### SQL query\nSELECT\n    (\n        100.0 * SUM(CASE WHEN T.jahr = 2020 THEN T.reineinkommen_mittelwert ELSE - T.reineinkommen_mittelwert END) /\n        SUM(CASE WHEN T.jahr = 2000 THEN T.reineinkommen_mittelwert END)\n    ) AS reineinkommen_mittelwert_prozent_aenderung_2000_2020,\n    (\n        100.0 * SUM(CASE WHEN T.jahr = 2020 THEN T.steuerbares_einkommen_mittelwert ELSE - T.steuerbares_einkommen_mittelwert END) /\n        SUM(CASE WHEN T.jahr = 2000 THEN T.steuerbares_einkommen_mittelwert END)\n    ) AS steuerbares_einkommen_mittelwert_prozent_aenderung_2000_2020\nFROM basel_stadt_steuerstatistik_kennzahlen_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Clara'\n    AND T.jahr IN (2000, 2020);\n\n\n### Question\nWie stark hat sich das durchschnittliche steuerpflichtige Verm\u00f6gen in Clara (BS) zwischen 1995 und 2015 ver\u00e4ndert? Geben Sie den relativen Unterschied in Prozent an.\n### SQL query\n",
    "process_time": 23.431850934866816,
    "num_tokens": 2164,
    "hardness": "unknown",
    "scores": [
      0.37984591722488403
    ],
    "lang": "de"
  },
  {
    "i": 113,
    "question": "Wie hat sich die Wohnfl\u00e4che pro Einwohner in der Altstadt Grossbasel \u00fcber den Zeitraum 2015 - 2019 entwickelt?",
    "query": "SELECT T.jahr, T.wohnflache_pro_person_m2\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND S.name = 'Altstadt Grossbasel'\n    AND T.jahr >= 2015\n    AND T.jahr <= 2019\nORDER BY T.jahr ASC;\n",
    "db_id": "basel_stadt_kennzahlen_zu_den_basler_wohnvierteln",
    "generated_query": "SELECT\n    T.jahr,\n    T.wohnflache_pro_person_m2\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Altstadt Grossbasel'\n    AND T.jahr BETWEEN 2015 AND 2019\nORDER BY T.jahr;",
    "meta_data": [
      {
        "question": "Wie hat sich der Anteil an Gr\u00fcnfl\u00e4chen (in Prozent) von 2015 bis 2022 in den einzelnen Wohngebieten von Basel-Stadt ver\u00e4ndert?",
        "query": "SELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2022 THEN T.anteil_grunflachen ELSE - T.anteil_grunflachen END) /\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anteil_grunflachen END)\n    ) AS prozent_aenderung_anteil_grunflachen_2018_2022\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2015, 2022)\nGROUP BY S.name\nORDER BY prozent_aenderung_anteil_grunflachen_2018_2022 DESC;\n",
        "score": 0.46981683373451233
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanteil_sozialhilfeempfanger NUMERIC, \n\tanteil_auslander NUMERIC, \n\tanteil_personen_ohne_religionszugehorigkeit NUMERIC, \n\tanteil_personen_in_einpersonenhaushalten NUMERIC, \n\tgymnasialquote_anteil_progymnasium NUMERIC, \n\taltersquotient_uber_64_jahr NUMERIC, \n\tanteil_sesshafte_10_jahr NUMERIC, \n\tjugendquotient_unter_20_jahr NUMERIC, \n\tbaujahr_der_wohngebaude NUMERIC, \n\tanteil_einfamilienhauser NUMERIC, \n\tanteil_grunflachen NUMERIC, \n\tflache_pro_wohnung_m2 NUMERIC, \n\twohnflache_pro_person_m2 NUMERIC, \n\tvermogenssteuer_pro_veranlagung NUMERIC, \n\teinkommenssteuer_pro_veranlagung NUMERIC, \n\terwerbstatigenquote NUMERIC, \n\tarbeitsplatze_pro_einwohner NUMERIC, \n\tarbeitslosenquote NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnv_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_kennzahlen_zu_den_basler_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanteil_sozialhilfeempfanger : 0.026183457600000001, 0.016602316600000000, 0.067096224499999996, 0.012504736600000000, 0.106006562999999998\nanteil_auslander : 0.38513648140000001, 0.39698800460000000, 0.42686335399999997, 0.38356164380000002, 0.50570222419999999\nanteil_personen_ohne_religionszugehorigkeit : 0.42521367519999997, 0.48079567330000000, 0.48741141370000002, 0.47686794090000001, 0.50717346750000003\nanteil_personen_in_einpersonenhaushalten : 0.28327811870000003, 0.14792452830000000, 0.15616377880000001, 0.30002056340000000, 0.27802285939999999\ngymnasialquote_anteil_progymnasium : 0.445783132500000012, 0.693877551000000037, 0.334710743799999988, 0.375000000000000000, 0.256983240200000018\naltersquotient_uber_64_jahr : 0.24082710069999999, 0.41700019059999999, 0.34262602920000002, 0.29926209349999999, 0.23141644149999999\nanteil_sesshafte_10_jahr : 0.31222657149999999, 0.31994261120000000, 0.29368588610000002, 0.33129562590000000, 0.35717419919999999\njugendquotient_unter_20_jahr : 0.21878777410000000, 0.12048192770000000, 0.22081804590000001, 0.30282095570000001, 0.24988279420000001\nbaujahr_der_wohngebaude : 1899.0979666999999, 1957.7917973000001, 1941.2750374000000, 1949.5450643776819, 1933.0711237999999\nanteil_einfamilienhauser : 0.071240105499999998, 0.729742612010999991, 0.560527367199999960, 0.787096774200000016, 0.071929824599999997\nanteil_grunflachen : 0.902000000000000024, 0.080947555199999993, 0.794981932699999949, 0.123999999999999999, 0.281219243600000002\nflache_pro_wohnung_m2 : 82.343801381000006, 87.251775338927999, 81.888348753000002, 65.612052731000006, 71.828334333000001\nwohnflache_pro_person_m2 : 37.648552000000002, 34.513465724000000, 34.681738000000003, 42.151075976999998, 37.090903537000003\nvermogenssteuer_pro_veranlagung : 725.78292220000003, 5913.76215630000024, 426.09984706000000, 474.92814240000001, 670.01187285000003\neinkommenssteuer_pro_veranlagung : 10771.6002890000000, 22686.8092209999995, 7831.7899981999999, 9551.3314957000002, 16867.6890359999998\nerwerbstatigenquote : 0.74260013100000000, 0.76909340420000005, 0.80251005129999997, 0.70834503090000001, 0.72893256529999995\narbeitsplatze_pro_einwohner : 0.31361319999999998, 1.09230265329999998, 0.67745282900000003, 0.57062604419999996, 2.22989241219999990\narbeitslosenquote : 0.019385588799999999, 0.040474207900000003, 0.046227770899999999, 0.039206834300000000, 0.019072193000000001\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanteil_sozialhilfeempfanger, None, 0.0384108454,0.0566399639,0.0616651708\nanteil_auslander, None, 0.3403313877,0.3193049757,0.3919011668\nanteil_personen_ohne_religionszugehorigkeit, None, 0.4882319714,0.4715107751,0.4412121852\nanteil_personen_in_einpersonenhaushalten, None, 0.3000205634,0.2883006761,0.2792870645\ngymnasialquote_anteil_progymnasium, None, 0.5740740741,0.2924528302,0.3366336634\naltersquotient_uber_64_jahr, None, 0.3601476015,0.3394025102,0.2155230596\nanteil_sesshafte_10_jahr, None, 0.3055921672,0.3543946745,0.3012512539\njugendquotient_unter_20_jahr, None, 0.2076752768,0.227328973,0.2048743907\nbaujahr_der_wohngebaude, None, 1918.3832335,1939.8939394,1931.8792135\nanteil_einfamilienhauser, None, 0.1984602224,0.1363636364,0.029494382\nanteil_grunflachen, None, 0.2390179539,0.3585967524,0.1742961539\nflache_pro_wohnung_m2, None, 82.343801381,69.810768933,70.418289354\nwohnflache_pro_person_m2, None, 47.311517,39.026379,38.692324\nvermogenssteuer_pro_veranlagung, None, 2378.931266,483.02681775,460.5646986\neinkommenssteuer_pro_veranlagung, None, 10820.800512,7123.8581681,7075.5415415\nerwerbstatigenquote, None, 0.8077279565,0.7324650618,0.7397509203\narbeitsplatze_pro_einwohner, None, 0.9906581653,0.1403727831,0.6350379648\narbeitslosenquote, None, 0.0252819637,0.0466659488,0.0400550591\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hat sich der Anteil an Gr\u00fcnfl\u00e4chen (in Prozent) von 2015 bis 2022 in den einzelnen Wohngebieten von Basel-Stadt ver\u00e4ndert?\n### SQL query\nSELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2022 THEN T.anteil_grunflachen ELSE - T.anteil_grunflachen END) /\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anteil_grunflachen END)\n    ) AS prozent_aenderung_anteil_grunflachen_2018_2022\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2015, 2022)\nGROUP BY S.name\nORDER BY prozent_aenderung_anteil_grunflachen_2018_2022 DESC;\n\n\n### Question\nWie hat sich die Wohnfl\u00e4che pro Einwohner in der Altstadt Grossbasel \u00fcber den Zeitraum 2015 - 2019 entwickelt?\n### SQL query\n",
    "process_time": 10.01498607499525,
    "num_tokens": 3011,
    "hardness": "hard",
    "scores": [
      0.46981683373451233
    ],
    "lang": "de"
  },
  {
    "i": 114,
    "question": "Wie heissen die 3 Wohngebiete in Basel-Stadt mit der kleinsten Wohnfl\u00e4che pro Einwohner im Jahr 2020?",
    "query": "SELECT S.name\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.wohnflache_pro_person_m2 ASC\nLIMIT 3;\n",
    "db_id": "basel_stadt_kennzahlen_zu_den_basler_wohnvierteln",
    "generated_query": "SELECT S.name, T.wohnflache_pro_person_m2\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2020\nORDER BY T.wohnflache_pro_person_m2 ASC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Wie hat sich der Anteil an Gr\u00fcnfl\u00e4chen (in Prozent) von 2015 bis 2022 in den einzelnen Wohngebieten von Basel-Stadt ver\u00e4ndert?",
        "query": "SELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2022 THEN T.anteil_grunflachen ELSE - T.anteil_grunflachen END) /\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anteil_grunflachen END)\n    ) AS prozent_aenderung_anteil_grunflachen_2018_2022\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2015, 2022)\nGROUP BY S.name\nORDER BY prozent_aenderung_anteil_grunflachen_2018_2022 DESC;\n",
        "score": 0.3970823585987091
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanteil_sozialhilfeempfanger NUMERIC, \n\tanteil_auslander NUMERIC, \n\tanteil_personen_ohne_religionszugehorigkeit NUMERIC, \n\tanteil_personen_in_einpersonenhaushalten NUMERIC, \n\tgymnasialquote_anteil_progymnasium NUMERIC, \n\taltersquotient_uber_64_jahr NUMERIC, \n\tanteil_sesshafte_10_jahr NUMERIC, \n\tjugendquotient_unter_20_jahr NUMERIC, \n\tbaujahr_der_wohngebaude NUMERIC, \n\tanteil_einfamilienhauser NUMERIC, \n\tanteil_grunflachen NUMERIC, \n\tflache_pro_wohnung_m2 NUMERIC, \n\twohnflache_pro_person_m2 NUMERIC, \n\tvermogenssteuer_pro_veranlagung NUMERIC, \n\teinkommenssteuer_pro_veranlagung NUMERIC, \n\terwerbstatigenquote NUMERIC, \n\tarbeitsplatze_pro_einwohner NUMERIC, \n\tarbeitslosenquote NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnv_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_kennzahlen_zu_den_basler_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanteil_sozialhilfeempfanger : 0.026183457600000001, 0.016602316600000000, 0.067096224499999996, 0.012504736600000000, 0.106006562999999998\nanteil_auslander : 0.38513648140000001, 0.39698800460000000, 0.42686335399999997, 0.38356164380000002, 0.50570222419999999\nanteil_personen_ohne_religionszugehorigkeit : 0.42521367519999997, 0.48079567330000000, 0.48741141370000002, 0.47686794090000001, 0.50717346750000003\nanteil_personen_in_einpersonenhaushalten : 0.28327811870000003, 0.14792452830000000, 0.15616377880000001, 0.30002056340000000, 0.27802285939999999\ngymnasialquote_anteil_progymnasium : 0.445783132500000012, 0.693877551000000037, 0.334710743799999988, 0.375000000000000000, 0.256983240200000018\naltersquotient_uber_64_jahr : 0.24082710069999999, 0.41700019059999999, 0.34262602920000002, 0.29926209349999999, 0.23141644149999999\nanteil_sesshafte_10_jahr : 0.31222657149999999, 0.31994261120000000, 0.29368588610000002, 0.33129562590000000, 0.35717419919999999\njugendquotient_unter_20_jahr : 0.21878777410000000, 0.12048192770000000, 0.22081804590000001, 0.30282095570000001, 0.24988279420000001\nbaujahr_der_wohngebaude : 1899.0979666999999, 1957.7917973000001, 1941.2750374000000, 1949.5450643776819, 1933.0711237999999\nanteil_einfamilienhauser : 0.071240105499999998, 0.729742612010999991, 0.560527367199999960, 0.787096774200000016, 0.071929824599999997\nanteil_grunflachen : 0.902000000000000024, 0.080947555199999993, 0.794981932699999949, 0.123999999999999999, 0.281219243600000002\nflache_pro_wohnung_m2 : 82.343801381000006, 87.251775338927999, 81.888348753000002, 65.612052731000006, 71.828334333000001\nwohnflache_pro_person_m2 : 37.648552000000002, 34.513465724000000, 34.681738000000003, 42.151075976999998, 37.090903537000003\nvermogenssteuer_pro_veranlagung : 725.78292220000003, 5913.76215630000024, 426.09984706000000, 474.92814240000001, 670.01187285000003\neinkommenssteuer_pro_veranlagung : 10771.6002890000000, 22686.8092209999995, 7831.7899981999999, 9551.3314957000002, 16867.6890359999998\nerwerbstatigenquote : 0.74260013100000000, 0.76909340420000005, 0.80251005129999997, 0.70834503090000001, 0.72893256529999995\narbeitsplatze_pro_einwohner : 0.31361319999999998, 1.09230265329999998, 0.67745282900000003, 0.57062604419999996, 2.22989241219999990\narbeitslosenquote : 0.019385588799999999, 0.040474207900000003, 0.046227770899999999, 0.039206834300000000, 0.019072193000000001\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanteil_sozialhilfeempfanger, None, 0.0384108454,0.0566399639,0.0616651708\nanteil_auslander, None, 0.3403313877,0.3193049757,0.3919011668\nanteil_personen_ohne_religionszugehorigkeit, None, 0.4882319714,0.4715107751,0.4412121852\nanteil_personen_in_einpersonenhaushalten, None, 0.3000205634,0.2883006761,0.2792870645\ngymnasialquote_anteil_progymnasium, None, 0.5740740741,0.2924528302,0.3366336634\naltersquotient_uber_64_jahr, None, 0.3601476015,0.3394025102,0.2155230596\nanteil_sesshafte_10_jahr, None, 0.3055921672,0.3543946745,0.3012512539\njugendquotient_unter_20_jahr, None, 0.2076752768,0.227328973,0.2048743907\nbaujahr_der_wohngebaude, None, 1918.3832335,1939.8939394,1931.8792135\nanteil_einfamilienhauser, None, 0.1984602224,0.1363636364,0.029494382\nanteil_grunflachen, None, 0.2390179539,0.3585967524,0.1742961539\nflache_pro_wohnung_m2, None, 82.343801381,69.810768933,70.418289354\nwohnflache_pro_person_m2, None, 47.311517,39.026379,38.692324\nvermogenssteuer_pro_veranlagung, None, 2378.931266,483.02681775,460.5646986\neinkommenssteuer_pro_veranlagung, None, 10820.800512,7123.8581681,7075.5415415\nerwerbstatigenquote, None, 0.8077279565,0.7324650618,0.7397509203\narbeitsplatze_pro_einwohner, None, 0.9906581653,0.1403727831,0.6350379648\narbeitslosenquote, None, 0.0252819637,0.0466659488,0.0400550591\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelches war das Wohnviertel in Basel-Stadt mit der h\u00f6chsten Arbeitslosenquote im Jahr 2016? Geben Sie auch dessen Arbeitslosenquote an.\n### SQL query\nSELECT S.name, T.arbeitslosenquote\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr = 2016\nORDER BY T.arbeitslosenquote DESC\nLIMIT 1;\n\n\n### Question\nWie heissen die 3 Wohngebiete in Basel-Stadt mit der kleinsten Wohnfl\u00e4che pro Einwohner im Jahr 2020?\n### SQL query\n",
    "process_time": 11.274371851002797,
    "num_tokens": 2911,
    "hardness": "extra",
    "scores": [
      0.3970823585987091
    ],
    "lang": "de"
  },
  {
    "i": 115,
    "question": "Wie hoch ist die relative Ver\u00e4nderung (in %) des Ausl\u00e4nderanteils zwischen 2018 und 2023 in den einzelnen Wohnvierteln von Basel-Stadt?",
    "query": "SELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2023 THEN T.anteil_auslander ELSE - T.anteil_auslander END) /\n        SUM(CASE WHEN T.jahr = 2018 THEN T.anteil_auslander END)\n    ) AS prozent_aenderung_anteil_auslander_2018_2023\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2018, 2023)\nGROUP BY S.name ;\n",
    "db_id": "basel_stadt_kennzahlen_zu_den_basler_wohnvierteln",
    "generated_query": "SELECT\n    S.name,\n    (   100.0 * (T2.anteil_auslander - T1.anteil_auslander) /\n        T1.anteil_auslander\n    ) AS relative_veranderung_auslanderanteil_2018_2023\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T1\nJOIN basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T2 ON T1.uid = T2.uid\nJOIN spatial_unit AS S ON T1.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T1.jahr = 2018\n    AND T2.jahr = 2023\nORDER BY relative_veranderung_auslanderanteil_2018_2023 DESC;",
    "meta_data": [
      {
        "question": "Wie hat sich der Anteil an Gr\u00fcnfl\u00e4chen (in Prozent) von 2015 bis 2022 in den einzelnen Wohngebieten von Basel-Stadt ver\u00e4ndert?",
        "query": "SELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2022 THEN T.anteil_grunflachen ELSE - T.anteil_grunflachen END) /\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anteil_grunflachen END)\n    ) AS prozent_aenderung_anteil_grunflachen_2018_2022\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2015, 2022)\nGROUP BY S.name\nORDER BY prozent_aenderung_anteil_grunflachen_2018_2022 DESC;\n",
        "score": 0.33401918411254883
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.basel_stadt_kennzahlen_zu_den_basler_wohnvierteln (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tanteil_sozialhilfeempfanger NUMERIC, \n\tanteil_auslander NUMERIC, \n\tanteil_personen_ohne_religionszugehorigkeit NUMERIC, \n\tanteil_personen_in_einpersonenhaushalten NUMERIC, \n\tgymnasialquote_anteil_progymnasium NUMERIC, \n\taltersquotient_uber_64_jahr NUMERIC, \n\tanteil_sesshafte_10_jahr NUMERIC, \n\tjugendquotient_unter_20_jahr NUMERIC, \n\tbaujahr_der_wohngebaude NUMERIC, \n\tanteil_einfamilienhauser NUMERIC, \n\tanteil_grunflachen NUMERIC, \n\tflache_pro_wohnung_m2 NUMERIC, \n\twohnflache_pro_person_m2 NUMERIC, \n\tvermogenssteuer_pro_veranlagung NUMERIC, \n\teinkommenssteuer_pro_veranlagung NUMERIC, \n\terwerbstatigenquote NUMERIC, \n\tarbeitsplatze_pro_einwohner NUMERIC, \n\tarbeitslosenquote NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnvierteln_pkey PRIMARY KEY (uid), \n\tCONSTRAINT basel_stadt_kennzahlen_zu_den_basler_wohnv_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in basel_stadt_kennzahlen_zu_den_basler_wohnvierteln and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanteil_sozialhilfeempfanger : 0.026183457600000001, 0.016602316600000000, 0.067096224499999996, 0.012504736600000000, 0.106006562999999998\nanteil_auslander : 0.38513648140000001, 0.39698800460000000, 0.42686335399999997, 0.38356164380000002, 0.50570222419999999\nanteil_personen_ohne_religionszugehorigkeit : 0.42521367519999997, 0.48079567330000000, 0.48741141370000002, 0.47686794090000001, 0.50717346750000003\nanteil_personen_in_einpersonenhaushalten : 0.28327811870000003, 0.14792452830000000, 0.15616377880000001, 0.30002056340000000, 0.27802285939999999\ngymnasialquote_anteil_progymnasium : 0.445783132500000012, 0.693877551000000037, 0.334710743799999988, 0.375000000000000000, 0.256983240200000018\naltersquotient_uber_64_jahr : 0.24082710069999999, 0.41700019059999999, 0.34262602920000002, 0.29926209349999999, 0.23141644149999999\nanteil_sesshafte_10_jahr : 0.31222657149999999, 0.31994261120000000, 0.29368588610000002, 0.33129562590000000, 0.35717419919999999\njugendquotient_unter_20_jahr : 0.21878777410000000, 0.12048192770000000, 0.22081804590000001, 0.30282095570000001, 0.24988279420000001\nbaujahr_der_wohngebaude : 1899.0979666999999, 1957.7917973000001, 1941.2750374000000, 1949.5450643776819, 1933.0711237999999\nanteil_einfamilienhauser : 0.071240105499999998, 0.729742612010999991, 0.560527367199999960, 0.787096774200000016, 0.071929824599999997\nanteil_grunflachen : 0.902000000000000024, 0.080947555199999993, 0.794981932699999949, 0.123999999999999999, 0.281219243600000002\nflache_pro_wohnung_m2 : 82.343801381000006, 87.251775338927999, 81.888348753000002, 65.612052731000006, 71.828334333000001\nwohnflache_pro_person_m2 : 37.648552000000002, 34.513465724000000, 34.681738000000003, 42.151075976999998, 37.090903537000003\nvermogenssteuer_pro_veranlagung : 725.78292220000003, 5913.76215630000024, 426.09984706000000, 474.92814240000001, 670.01187285000003\neinkommenssteuer_pro_veranlagung : 10771.6002890000000, 22686.8092209999995, 7831.7899981999999, 9551.3314957000002, 16867.6890359999998\nerwerbstatigenquote : 0.74260013100000000, 0.76909340420000005, 0.80251005129999997, 0.70834503090000001, 0.72893256529999995\narbeitsplatze_pro_einwohner : 0.31361319999999998, 1.09230265329999998, 0.67745282900000003, 0.57062604419999996, 2.22989241219999990\narbeitslosenquote : 0.019385588799999999, 0.040474207900000003, 0.046227770899999999, 0.039206834300000000, 0.019072193000000001\nspatialunit_uid : 1210_A.ADM4, 1205_A.ADM4, 1206_A.ADM4, 1218_A.ADM4, 1204_A.ADM4\n*/\n\n/*\nColumn name, Column discription, Example values\nanteil_sozialhilfeempfanger, None, 0.0384108454,0.0566399639,0.0616651708\nanteil_auslander, None, 0.3403313877,0.3193049757,0.3919011668\nanteil_personen_ohne_religionszugehorigkeit, None, 0.4882319714,0.4715107751,0.4412121852\nanteil_personen_in_einpersonenhaushalten, None, 0.3000205634,0.2883006761,0.2792870645\ngymnasialquote_anteil_progymnasium, None, 0.5740740741,0.2924528302,0.3366336634\naltersquotient_uber_64_jahr, None, 0.3601476015,0.3394025102,0.2155230596\nanteil_sesshafte_10_jahr, None, 0.3055921672,0.3543946745,0.3012512539\njugendquotient_unter_20_jahr, None, 0.2076752768,0.227328973,0.2048743907\nbaujahr_der_wohngebaude, None, 1918.3832335,1939.8939394,1931.8792135\nanteil_einfamilienhauser, None, 0.1984602224,0.1363636364,0.029494382\nanteil_grunflachen, None, 0.2390179539,0.3585967524,0.1742961539\nflache_pro_wohnung_m2, None, 82.343801381,69.810768933,70.418289354\nwohnflache_pro_person_m2, None, 47.311517,39.026379,38.692324\nvermogenssteuer_pro_veranlagung, None, 2378.931266,483.02681775,460.5646986\neinkommenssteuer_pro_veranlagung, None, 10820.800512,7123.8581681,7075.5415415\nerwerbstatigenquote, None, 0.8077279565,0.7324650618,0.7397509203\narbeitsplatze_pro_einwohner, None, 0.9906581653,0.1403727831,0.6350379648\narbeitslosenquote, None, 0.0252819637,0.0466659488,0.0400550591\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hat sich der Anteil an Gr\u00fcnfl\u00e4chen (in Prozent) von 2015 bis 2022 in den einzelnen Wohngebieten von Basel-Stadt ver\u00e4ndert?\n### SQL query\nSELECT\n    S.name,\n    (   100.0 * SUM(CASE WHEN T.jahr = 2022 THEN T.anteil_grunflachen ELSE - T.anteil_grunflachen END) /\n        SUM(CASE WHEN T.jahr = 2015 THEN T.anteil_grunflachen END)\n    ) AS prozent_aenderung_anteil_grunflachen_2018_2022\nFROM basel_stadt_kennzahlen_zu_den_basler_wohnvierteln AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.residence_area = 'TRUE'\n    AND T.jahr IN (2015, 2022)\nGROUP BY S.name\nORDER BY prozent_aenderung_anteil_grunflachen_2018_2022 DESC;\n\n\n### Question\nWie hoch ist die relative Ver\u00e4nderung (in %) des Ausl\u00e4nderanteils zwischen 2018 und 2023 in den einzelnen Wohnvierteln von Basel-Stadt?\n### SQL query\n",
    "process_time": 12.471062015974894,
    "num_tokens": 3016,
    "hardness": "unknown",
    "scores": [
      0.33401918411254883
    ],
    "lang": "de"
  },
  {
    "i": 116,
    "question": "Wie hiessen die 3 bev\u00f6lkerungsreichsten Gemeinden im Kanton Schwyz im Jahr 2015?",
    "query": "SELECT S.name\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2015\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) DESC\nLIMIT 3;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT\n    S.name,\n    SUM(T.anzahl_personen) AS anzahl_personen\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2015\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) DESC\nLIMIT 3;",
    "meta_data": [
      {
        "question": "Wie hoch war die schweizerische und ausl\u00e4ndische Bev\u00f6lkerung in den 3 kleinsten Schwyzer Gemeinden im Jahr 2020?",
        "query": "SELECT\n    S.name,\n    SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen ELSE 0 END) AS anzahl_schweizer,\n    SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) AS anzahl_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) ASC\nLIMIT 3;\n",
        "score": 0.47080501914024353
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_personen : 3924, 484, 19, 725, 1321\nspatialunit_uid : 1366_A.ADM3, 1345_A.ADM3, 1344_A.ADM3, 1369_A.ADM3, 1342_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war die schweizerische und ausl\u00e4ndische Bev\u00f6lkerung in den 3 kleinsten Schwyzer Gemeinden im Jahr 2020?\n### SQL query\nSELECT\n    S.name,\n    SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen ELSE 0 END) AS anzahl_schweizer,\n    SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) AS anzahl_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) ASC\nLIMIT 3;\n\n\n### Question\nWie hiessen die 3 bev\u00f6lkerungsreichsten Gemeinden im Kanton Schwyz im Jahr 2015?\n### SQL query\n",
    "process_time": 12.529672244098037,
    "num_tokens": 1134,
    "hardness": "extra",
    "scores": [
      0.47080501914024353
    ],
    "lang": "de"
  },
  {
    "i": 117,
    "question": "Wie hoch war der Anteil der M\u00e4nner an der schweizerischen und ausl\u00e4ndischen Wohnbev\u00f6lkerung im Kanton Schwyz in den Jahren 2015 bis 2020?",
    "query": "SELECT\n    T.jahr,\n    (\n        SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' AND T.nationalitaet = 'Schweiz' THEN T.anzahl_personen END) /\n        SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen END)\n    ) AS anteil_manner_schweizer,\n    (\n        SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' AND T.nationalitaet = 'Ausland' THEN T.anzahl_personen END) /\n        SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen END)\n    ) AS anteil_manner_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2015\n    AND T.jahr >= 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT\n    T.jahr,\n    SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' AND T.nationalitaet = 'Schweiz' THEN T.anzahl_personen ELSE 0 END) AS anzahl_schweizer_manner,\n    SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' AND T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) AS anzahl_auslander_manner,\n    SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen ELSE 0 END) AS anzahl_schweizer,\n    SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) AS anzahl_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr BETWEEN 2015 AND 2020\nGROUP BY T.jahr\nORDER BY T.jahr;",
    "meta_data": [
      {
        "question": "Wie hoch war die schweizerische und ausl\u00e4ndische Bev\u00f6lkerung in den 3 kleinsten Schwyzer Gemeinden im Jahr 2020?",
        "query": "SELECT\n    S.name,\n    SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen ELSE 0 END) AS anzahl_schweizer,\n    SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) AS anzahl_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) ASC\nLIMIT 3;\n",
        "score": 0.22309976816177368
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_personen : 3924, 484, 19, 725, 1321\nspatialunit_uid : 1366_A.ADM3, 1345_A.ADM3, 1344_A.ADM3, 1369_A.ADM3, 1342_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch war die schweizerische und ausl\u00e4ndische Bev\u00f6lkerung in den 3 kleinsten Schwyzer Gemeinden im Jahr 2020?\n### SQL query\nSELECT\n    S.name,\n    SUM(CASE WHEN T.nationalitaet = 'Schweiz' THEN T.anzahl_personen ELSE 0 END) AS anzahl_schweizer,\n    SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) AS anzahl_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr = 2020\nGROUP BY S.name\nORDER BY SUM(T.anzahl_personen) ASC\nLIMIT 3;\n\n\n### Question\nWie hoch war der Anteil der M\u00e4nner an der schweizerischen und ausl\u00e4ndischen Wohnbev\u00f6lkerung im Kanton Schwyz in den Jahren 2015 bis 2020?\n### SQL query\n",
    "process_time": 28.265955003909767,
    "num_tokens": 1150,
    "hardness": "unknown",
    "scores": [
      0.22309976816177368
    ],
    "lang": "de"
  },
  {
    "i": 118,
    "question": "Wie viele Einwohner gab es in Freienbach (SZ) im Zeitraum 2010 - 2020 ?",
    "query": "SELECT T.jahr, SUM(T.anzahl_personen)\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND S.name IN ('Freienbach', 'Freienbach (SZ)')\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT SUM(T.anzahl_personen) as anzahl_einwohner\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Freienbach' AND S.canton = 'TRUE'\n    AND T.jahr BETWEEN 2010 AND 2020;",
    "meta_data": [
      {
        "question": "Wie hoch ist der Prozentsatz der Gemeinden in Schwyz, die im Jahr 2020 mehr als 10000 Einwohner haben?",
        "query": "SELECT\n    (\n        100.0 * COUNT(CASE WHEN T1.tot_personen > 10000 THEN 1 END) /\n        COUNT(*)\n    )AS prozent_gemeinden_mehr_als_10000_einwohner_2020\nFROM (\n    SELECT SUM(T.anzahl_personen) as tot_personen\n    FROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr = 2020\n    GROUP BY S.name\n) as T1;\n",
        "score": 0.5028605461120605
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_personen : 3924, 484, 19, 725, 1321\nspatialunit_uid : 1366_A.ADM3, 1345_A.ADM3, 1344_A.ADM3, 1369_A.ADM3, 1342_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie hoch ist der Prozentsatz der Gemeinden in Schwyz, die im Jahr 2020 mehr als 10000 Einwohner haben?\n### SQL query\nSELECT\n    (\n        100.0 * COUNT(CASE WHEN T1.tot_personen > 10000 THEN 1 END) /\n        COUNT(*)\n    )AS prozent_gemeinden_mehr_als_10000_einwohner_2020\nFROM (\n    SELECT SUM(T.anzahl_personen) as tot_personen\n    FROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\n    JOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\n    WHERE S.municipal = 'TRUE'\n        AND T.jahr = 2020\n    GROUP BY S.name\n) as T1;\n\n\n### Question\nWie viele Einwohner gab es in Freienbach (SZ) im Zeitraum 2010 - 2020 ?\n### SQL query\n",
    "process_time": 7.81757227005437,
    "num_tokens": 1126,
    "hardness": "unknown",
    "scores": [
      0.5028605461120605
    ],
    "lang": "de"
  },
  {
    "i": 119,
    "question": "Zeigen Sie mir den Anteil der ausl\u00e4ndischen Bev\u00f6lkerung (als Verh\u00e4ltnis) im Kanton Schwyz in jedem Jahr zwischen 2010 und 2020.",
    "query": "SELECT\n    T.jahr,\n    (\n        SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen ELSE 0 END) /\n        SUM(T.anzahl_personen)\n    ) AS anteil_auslander\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr >= 2010\n    AND T.jahr <= 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "schwyz_standige_wohnbevolkerung_geschlecht_nationalitat",
    "generated_query": "SELECT\n    T.jahr,\n    SUM(CASE WHEN T.nationalitaet = 'Ausland' THEN T.anzahl_personen END) / SUM(T.anzahl_personen) AS auslander_anteil\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr BETWEEN 2010 AND 2020\nGROUP BY T.jahr\nORDER BY T.jahr ASC;",
    "meta_data": [
      {
        "question": "Zeigen Sie mir die Anzahl der M\u00e4nner und Frauen im Kanton Schwyz in den Jahren 2005, 2010, 2015 und 2020.",
        "query": "SELECT\n    T.jahr,\n    SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' THEN T.anzahl_personen END) AS anzahl_manner,\n    SUM(CASE WHEN T.geschlecht = 'weiblich' THEN T.anzahl_personen END) AS anzahl_frauen\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2005, 2010, 2015, 2020)\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
        "score": 0.4589429795742035
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.schwyz_standige_wohnbevolkerung_geschlecht_nationalitat (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tgeschlecht TEXT, \n\tnationalitaet TEXT, \n\tanzahl_personen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_nationalitat_pkey PRIMARY KEY (uid), \n\tCONSTRAINT schwyz_standige_wohnbevolkerung_geschlecht_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in schwyz_standige_wohnbevolkerung_geschlecht_nationalitat and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_personen : 3924, 484, 19, 725, 1321\nspatialunit_uid : 1366_A.ADM3, 1345_A.ADM3, 1344_A.ADM3, 1369_A.ADM3, 1342_A.ADM3\n*/\n\n/*\nColumn name, Column discription, Example values\ngeschlecht, Geschlecht, m\u00e4nnlich,weiblich\nnationalitaet, Nationalit\u00e4t, Schweiz,Ausland\nanzahl_personen, Anzahl Personen, 3873,964,2926\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nZeigen Sie mir die Anzahl der M\u00e4nner und Frauen im Kanton Schwyz in den Jahren 2005, 2010, 2015 und 2020.\n### SQL query\nSELECT\n    T.jahr,\n    SUM(CASE WHEN T.geschlecht = 'm\u00e4nnlich' THEN T.anzahl_personen END) AS anzahl_manner,\n    SUM(CASE WHEN T.geschlecht = 'weiblich' THEN T.anzahl_personen END) AS anzahl_frauen\nFROM schwyz_standige_wohnbevolkerung_geschlecht_nationalitat AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE S.municipal = 'TRUE'\n    AND T.jahr IN (2005, 2010, 2015, 2020)\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n\n\n### Question\nZeigen Sie mir den Anteil der ausl\u00e4ndischen Bev\u00f6lkerung (als Verh\u00e4ltnis) im Kanton Schwyz in jedem Jahr zwischen 2010 und 2020.\n### SQL query\n",
    "process_time": 13.574398244032636,
    "num_tokens": 1149,
    "hardness": "unknown",
    "scores": [
      0.4589429795742035
    ],
    "lang": "de"
  },
  {
    "i": 120,
    "question": "Bei der Umwandlung durch Kernkraftwerke, welche Energietr\u00e4ger sind da mit welchen Mengen durchschnittlich im Spiel?",
    "query": "SELECT\n    energietraeger,\n    AVG(energiemenge_in_tera_joule) as durchschnittliche_umwandlung_kernkraft_in_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE LOWER(nutzungs_sektor) LIKE '%umwandlung%'\nAND LOWER(nutzungs_sektor) LIKE '%kernkraftwerk%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger\nORDER BY durchschnittliche_umwandlung_kernkraft_in_tj ASC;\n",
    "db_id": "energiebilanz_schweiz_in_tera_joule",
    "generated_query": "SELECT energietraeger, AVG(energiemenge_in_tera_joule) as durchschnittliche_menge\nFROM energiebilanz_schweiz_in_tera_joule \nWHERE LOWER(nutzungs_sektor) LIKE '%umwandlung%' \nAND LOWER(energietraeger) LIKE '%kernkraftwerke%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger\nORDER BY durchschnittliche_menge DESC;",
    "meta_data": [
      {
        "question": "Welche Energietr\u00e4ger kamen 2019 bei Energieumwandlung vor und in welchem Umfang? .",
        "query": "SELECT nutzungs_sektor, SUM(energiemenge_in_tera_joule) as energie_umwandlung_2019_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE LOWER(nutzungs_sektor) LIKE '%umwandlung%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nAND jahr = 2019\nGROUP BY nutzungs_sektor\nORDER BY energie_umwandlung_2019_tj ASC;\n",
        "score": 0.39384225010871887
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.energiebilanz_schweiz_in_tera_joule (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnutzungs_sektor TEXT, \n\tenergietraeger TEXT, \n\tenergiemenge_in_tera_joule NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_pkey PRIMARY KEY (uid), \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in energiebilanz_schweiz_in_tera_joule and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nnutzungs_sektor : Inlandproduktion, Nichtenergetischer Verbrauch, Bruttoverbrauch, Endverbrauch - Industrie, Eigenverbrauch des Energiesektors, Netzverluste, Verbrauch der Speicherungen\nenergietraeger : Kernbrennstoffe, Kohle, Roh\u00f6l, Uebrige erneuerbare Energien, M\u00fcll und Industrieabf\u00e4lle\nenergiemenge_in_tera_joule : 12380, 32560, 191970, 149050, 1410\n*/\n\n/*\nColumn name, Column discription, Example values\nenergietraeger, Energietr\u00e4ger, Elektrizit\u00e4t,Wasserkraft,Uebrige erneuerbare Energien,M\u00fcll und Industrieabf\u00e4lle\nnutzungs_sektor, Nutzungs Rubrik, Endverbrauch - Haushalte,Endverbrauch - Industrie,Import\nenergiemenge_in_tera_joule, Numeric value in Terajoule, NA,14820,4820\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche Energietr\u00e4ger kamen 2019 bei Energieumwandlung vor und in welchem Umfang? .\n### SQL query\nSELECT nutzungs_sektor, SUM(energiemenge_in_tera_joule) as energie_umwandlung_2019_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE LOWER(nutzungs_sektor) LIKE '%umwandlung%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nAND jahr = 2019\nGROUP BY nutzungs_sektor\nORDER BY energie_umwandlung_2019_tj ASC;\n\n\n### Question\nBei der Umwandlung durch Kernkraftwerke, welche Energietr\u00e4ger sind da mit welchen Mengen durchschnittlich im Spiel?\n### SQL query\n",
    "process_time": 10.345406680135056,
    "num_tokens": 1215,
    "hardness": "unknown",
    "scores": [
      0.39384225010871887
    ],
    "lang": "de"
  },
  {
    "i": 121,
    "question": "Welches war der am meisten exportierten Energietraeger 2020 in der Schweiz und wieviel wurde exportiert?",
    "query": "SELECT nutzungs_sektor, energietraeger, SUM(energiemenge_in_tera_joule) as tj_export_2020\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%export%'\nAND energiemenge_in_tera_joule IS NOT NULL\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY tj_export_2020 DESC;\n",
    "db_id": "energiebilanz_schweiz_in_tera_joule",
    "generated_query": "SELECT nutzungs_sektor, energietraeger, SUM(energiemenge_in_tera_joule) as tj_export_2020\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%export%'\nAND energiemenge_in_tera_joule IS NOT NULL\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY tj_export_2020 DESC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Welches waren die f\u00fcnf am meisten importierten Energietraeger 2020 in der Schweiz und wieviel wurde importiert?",
        "query": "SELECT nutzungs_sektor, energietraeger, SUM(energiemenge_in_tera_joule) as tj_import_2020\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%import%'\nAND energiemenge_in_tera_joule IS NOT NULL\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY tj_import_2020 DESC;\n",
        "score": 0.08538491278886795
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.energiebilanz_schweiz_in_tera_joule (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnutzungs_sektor TEXT, \n\tenergietraeger TEXT, \n\tenergiemenge_in_tera_joule NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_pkey PRIMARY KEY (uid), \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in energiebilanz_schweiz_in_tera_joule and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nnutzungs_sektor : Inlandproduktion, Nichtenergetischer Verbrauch, Bruttoverbrauch, Endverbrauch - Industrie, Eigenverbrauch des Energiesektors, Netzverluste, Verbrauch der Speicherungen\nenergietraeger : Kernbrennstoffe, Kohle, Roh\u00f6l, Uebrige erneuerbare Energien, M\u00fcll und Industrieabf\u00e4lle\nenergiemenge_in_tera_joule : 12380, 32560, 191970, 149050, 1410\n*/\n\n/*\nColumn name, Column discription, Example values\nenergietraeger, Energietr\u00e4ger, Elektrizit\u00e4t,Wasserkraft,Uebrige erneuerbare Energien,M\u00fcll und Industrieabf\u00e4lle\nnutzungs_sektor, Nutzungs Rubrik, Endverbrauch - Haushalte,Endverbrauch - Industrie,Import\nenergiemenge_in_tera_joule, Numeric value in Terajoule, NA,14820,4820\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelches waren die f\u00fcnf am meisten importierten Energietraeger 2020 in der Schweiz und wieviel wurde importiert?\n### SQL query\nSELECT nutzungs_sektor, energietraeger, SUM(energiemenge_in_tera_joule) as tj_import_2020\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%import%'\nAND energiemenge_in_tera_joule IS NOT NULL\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY tj_import_2020 DESC;\n\n\n### Question\nWelches war der am meisten exportierten Energietraeger 2020 in der Schweiz und wieviel wurde exportiert?\n### SQL query\n",
    "process_time": 13.379471672931686,
    "num_tokens": 1196,
    "hardness": "unknown",
    "scores": [
      0.08538491278886795
    ],
    "lang": "de"
  },
  {
    "i": 122,
    "question": "In 2020 auf welche Energietr\u00e4ger hat sich der Verbrauch von Haushalten gest\u00fctzt? Gib die Energietr\u00e4ger und Energiemengen an.",
    "query": "SELECT energietraeger, SUM(energiemenge_in_tera_joule) as energieverbrauch_in_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%verbrauch%haushalt%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY energieverbrauch_in_tj DESC;\n",
    "db_id": "energiebilanz_schweiz_in_tera_joule",
    "generated_query": "SELECT energietraeger, SUM(energiemenge_in_tera_joule) as energiemenge_haushalte_2020_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(nutzungs_sektor) LIKE '%haushalte%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger\nORDER BY energiemenge_haushalte_2020_tj DESC;",
    "meta_data": [
      {
        "question": "Welche nutzungssektoren hatten 2020 mit Erneuerbarer Energie zu tun und wenn ja in welchem Umfang?",
        "query": "SELECT nutzungs_sektor, SUM(energiemenge_in_tera_joule) as anteil_erneuerbare_energien_2020_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(energietraeger) LIKE '%erneuerbar%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY anteil_erneuerbare_energien_2020_tj DESC;\n",
        "score": 0.2612125873565674
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.energiebilanz_schweiz_in_tera_joule (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tnutzungs_sektor TEXT, \n\tenergietraeger TEXT, \n\tenergiemenge_in_tera_joule NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_pkey PRIMARY KEY (uid), \n\tCONSTRAINT energiebilanz_schweiz_in_tera_joule_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in energiebilanz_schweiz_in_tera_joule and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nnutzungs_sektor : Inlandproduktion, Nichtenergetischer Verbrauch, Bruttoverbrauch, Endverbrauch - Industrie, Eigenverbrauch des Energiesektors, Netzverluste, Verbrauch der Speicherungen\nenergietraeger : Kernbrennstoffe, Kohle, Roh\u00f6l, Uebrige erneuerbare Energien, M\u00fcll und Industrieabf\u00e4lle\nenergiemenge_in_tera_joule : 12380, 32560, 191970, 149050, 1410\n*/\n\n/*\nColumn name, Column discription, Example values\nenergietraeger, Energietr\u00e4ger, Elektrizit\u00e4t,Wasserkraft,Uebrige erneuerbare Energien,M\u00fcll und Industrieabf\u00e4lle\nnutzungs_sektor, Nutzungs Rubrik, Endverbrauch - Haushalte,Endverbrauch - Industrie,Import\nenergiemenge_in_tera_joule, Numeric value in Terajoule, NA,14820,4820\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche nutzungssektoren hatten 2020 mit Erneuerbarer Energie zu tun und wenn ja in welchem Umfang?\n### SQL query\nSELECT nutzungs_sektor, SUM(energiemenge_in_tera_joule) as anteil_erneuerbare_energien_2020_tj\nFROM energiebilanz_schweiz_in_tera_joule WHERE jahr = '2020'\nAND LOWER(energietraeger) LIKE '%erneuerbar%'\nAND energiemenge_in_tera_joule IS NOT NULL\nAND energiemenge_in_tera_joule != 0\nGROUP BY energietraeger, nutzungs_sektor\nORDER BY anteil_erneuerbare_energien_2020_tj DESC;\n\n\n### Question\nIn 2020 auf welche Energietr\u00e4ger hat sich der Verbrauch von Haushalten gest\u00fctzt? Gib die Energietr\u00e4ger und Energiemengen an.\n### SQL query\n",
    "process_time": 12.082559613976628,
    "num_tokens": 1242,
    "hardness": "unknown",
    "scores": [
      0.2612125873565674
    ],
    "lang": "de"
  },
  {
    "i": 123,
    "question": "Welche Rentenarten gibt es in der Schweiz und was sind die durchschnittliche Ausgaben daf\u00fcr pro Jahr?",
    "query": "SELECT rententyp,\n  (AVG(rentensumme_in_tausend_franken) * 1000) as durchschnittliche_ausgaben_pro_jahr_chf\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n  AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND geschlecht = 'Geschlecht - Total'\nGROUP BY rententyp\nORDER BY durchschnittliche_ausgaben_pro_jahr_chf DESC;\n",
    "db_id": "ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit",
    "generated_query": "SELECT\n  rententyp,\n  AVG(rentensumme_in_tausend_franken) AS durchschnittliche_ausgaben_pro_jahr\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit\nWHERE wohnsitzstaat_kategorie = 'Schweiz'\nGROUP BY rententyp;",
    "meta_data": [
      {
        "question": "Wieviel Prozent der Rentenausgaben floss 2015 an Schweizer, die im Ausland leben und wieviel waren ?",
        "query": "SELECT\n  ROUND((SUM(CASE WHEN jahr = 2015\n       AND staatsangehorigkeit_kategorie = 'Schweiz' AND wohnsitzstaat_kategorie = 'Ausland'\n       THEN rentensumme_in_tausend_franken ELSE 0 END) /\n   SUM(CASE WHEN jahr = 2015 AND staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n       AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n       THEN rentensumme_in_tausend_franken ELSE 0 END)) * 100, 2) AS prozent_rentenausgaben_fur_schweizer_im_ausland\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE jahr = 2015\n  AND geschlecht = 'Geschlecht - Total';\n",
        "score": 0.33125826716423035
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit (\n\tuid SERIAL NOT NULL, \n\trententyp TEXT, \n\twohnsitzstaat_kategorie TEXT, \n\tstaatsangehorigkeit_kategorie TEXT, \n\tgeschlecht TEXT, \n\tjahr INTEGER, \n\tspatialunit_uid VARCHAR, \n\tanzahl_renten NUMERIC, \n\trentensumme_in_tausend_franken NUMERIC, \n\trenten_mittelwert_in_franken NUMERIC, \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit_pkey PRIMARY KEY (uid), \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoe_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 2007, 2003, 2022\nanzahl_renten : 497648, 450148, 100907, 74136, 563233\nrentensumme_in_tausend_franken : 2791872, 1827760, 259896, 127570, 3052347\nrenten_mittelwert_in_franken : 484, 1866, 1661, 1853, 609\n*/\n\n/*\nColumn name, Column discription, Example values\nrententyp, Rentenart, Zusatzrente f\u00fcr Kinder (Mutter),Zusatzrente f\u00fcr Ehepartner,Altersrente\nwohnsitzstaat_kategorie, Wohnsitz Kategorie, Ausland,Schweiz,Wohnsitzstaat - Total\nstaatsangehorigkeit_kategorie, Staatsangeh\u00f6rigkeit Kategorie, Ausland,Schweiz,Staatsangeh\u00f6rigkeit - Total\ngeschlecht, Geschlecht, Frau,Mann,Geschlecht - Total\nanzahl_renten, Anzahl Renten, None\nrentensumme_in_tausend_franken, Rentensumme in Tausend CHF, None\nrenten_mittelwert_in_franken, Renten Mittelwert in CHF, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWieviel Prozent der Rentenausgaben floss 2015 an Schweizer, die im Ausland leben und wieviel waren ?\n### SQL query\nSELECT\n  ROUND((SUM(CASE WHEN jahr = 2015\n       AND staatsangehorigkeit_kategorie = 'Schweiz' AND wohnsitzstaat_kategorie = 'Ausland'\n       THEN rentensumme_in_tausend_franken ELSE 0 END) /\n   SUM(CASE WHEN jahr = 2015 AND staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n       AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n       THEN rentensumme_in_tausend_franken ELSE 0 END)) * 100, 2) AS prozent_rentenausgaben_fur_schweizer_im_ausland\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE jahr = 2015\n  AND geschlecht = 'Geschlecht - Total';\n\n\n### Question\nWelche Rentenarten gibt es in der Schweiz und was sind die durchschnittliche Ausgaben daf\u00fcr pro Jahr?\n### SQL query\n",
    "process_time": 11.423331300960854,
    "num_tokens": 1407,
    "hardness": "unknown",
    "scores": [
      0.33125826716423035
    ],
    "lang": "de"
  },
  {
    "i": 124,
    "question": "Was waren die Gesamtausgaben f\u00fcr Renten 2022 in Franken, wie verteilten sie sich auf die Rentenarten, auf wieviele Renten jeweils und was kam dabei als durchschnittliche Rente heraus? Ordne das Ergebnis nach Anzahl der Renten.",
    "query": "SELECT rententyp,\n  anzahl_renten AS renten_anzahl_2022,\n  1000 * rentensumme_in_tausend_franken AS rentengesamt_ausgaben_in_CHF,\n  renten_mittelwert_in_franken AS durchschnittliche_rente_in_CHF\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE jahr = 2022\n  AND staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n  AND geschlecht = 'Geschlecht - Total'\n  AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\nORDER BY anzahl_renten DESC;\n",
    "db_id": "ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit",
    "generated_query": "SELECT T1.rententyp,\n  SUM(T1.rentensumme_in_tausend_franken) as gesamtausgaben_2022_CHF,\n  SUM(T1.anzahl_renten) as anzahl_renten,\n  AVG(T1.renten_mittelwert_in_franken) as durchschnittliche_rente\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T1\nWHERE T1.jahr = 2022\n  AND T1.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND T1.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND T1.geschlecht = 'Geschlecht - Total'\nGROUP BY T1.rententyp\nORDER BY anzahl_renten;",
    "meta_data": [
      {
        "question": "F\u00fcr welche Rentenarten ist die durchschnittlich Rente zwischen 2001 und 2022 heruntergegangen und wenn ja um wieviele CHF?",
        "query": "SELECT T1.rententyp,\n  (AVG(T2.renten_mittelwert_in_franken) - AVG(T1.renten_mittelwert_in_franken)) as rentenabzug_2022_genueber_2001_CHF\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T1\nJOIN ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T2 ON T1.rententyp = T2.rententyp\nWHERE T1.jahr = 2001 AND T2.jahr = 2022\n  AND T1.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND T1.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND T2.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND T2.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND T2.geschlecht = 'Geschlecht - Total' AND T1.geschlecht = 'Geschlecht - Total'\n  AND T2.renten_mittelwert_in_franken > T1.renten_mittelwert_in_franken\nGROUP BY T1.rententyp;\n",
        "score": 0.30070653557777405
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit (\n\tuid SERIAL NOT NULL, \n\trententyp TEXT, \n\twohnsitzstaat_kategorie TEXT, \n\tstaatsangehorigkeit_kategorie TEXT, \n\tgeschlecht TEXT, \n\tjahr INTEGER, \n\tspatialunit_uid VARCHAR, \n\tanzahl_renten NUMERIC, \n\trentensumme_in_tausend_franken NUMERIC, \n\trenten_mittelwert_in_franken NUMERIC, \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit_pkey PRIMARY KEY (uid), \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoe_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 2007, 2003, 2022\nanzahl_renten : 497648, 450148, 100907, 74136, 563233\nrentensumme_in_tausend_franken : 2791872, 1827760, 259896, 127570, 3052347\nrenten_mittelwert_in_franken : 484, 1866, 1661, 1853, 609\n*/\n\n/*\nColumn name, Column discription, Example values\nrententyp, Rentenart, Zusatzrente f\u00fcr Kinder (Mutter),Zusatzrente f\u00fcr Ehepartner,Altersrente\nwohnsitzstaat_kategorie, Wohnsitz Kategorie, Ausland,Schweiz,Wohnsitzstaat - Total\nstaatsangehorigkeit_kategorie, Staatsangeh\u00f6rigkeit Kategorie, Ausland,Schweiz,Staatsangeh\u00f6rigkeit - Total\ngeschlecht, Geschlecht, Frau,Mann,Geschlecht - Total\nanzahl_renten, Anzahl Renten, None\nrentensumme_in_tausend_franken, Rentensumme in Tausend CHF, None\nrenten_mittelwert_in_franken, Renten Mittelwert in CHF, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nF\u00fcr welche Rentenarten ist die durchschnittlich Rente zwischen 2001 und 2022 heruntergegangen und wenn ja um wieviele CHF?\n### SQL query\nSELECT T1.rententyp,\n  (AVG(T2.renten_mittelwert_in_franken) - AVG(T1.renten_mittelwert_in_franken)) as rentenabzug_2022_genueber_2001_CHF\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T1\nJOIN ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T2 ON T1.rententyp = T2.rententyp\nWHERE T1.jahr = 2001 AND T2.jahr = 2022\n  AND T1.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND T1.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND T2.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND T2.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND T2.geschlecht = 'Geschlecht - Total' AND T1.geschlecht = 'Geschlecht - Total'\n  AND T2.renten_mittelwert_in_franken > T1.renten_mittelwert_in_franken\nGROUP BY T1.rententyp;\n\n\n### Question\nWas waren die Gesamtausgaben f\u00fcr Renten 2022 in Franken, wie verteilten sie sich auf die Rentenarten, auf wieviele Renten jeweils und was kam dabei als durchschnittliche Rente heraus? Ordne das Ergebnis nach Anzahl der Renten.\n### SQL query\n",
    "process_time": 24.288992459885776,
    "num_tokens": 1548,
    "hardness": "unknown",
    "scores": [
      0.30070653557777405
    ],
    "lang": "de"
  },
  {
    "i": 125,
    "question": "Wie hoch war der Frauenanteil in prozent bei den Zusatzrenten f\u00fcr Ehepartner?",
    "query": "SELECT\n  ROUND(100 * SUM(CASE WHEN geschlecht = 'Frau'\n       THEN anzahl_renten ELSE 0 END) /\n   SUM(CASE WHEN geschlecht = 'Geschlecht - Total'\n       THEN anzahl_renten ELSE 0 END)\n  , 2) AS prozent_frauenanteil_bei_ehepartner_zusatzrenten\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit WHERE rententyp = 'Zusatzrente f\u00fcr Ehepartner'\n  AND staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total' AND wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total';\n",
    "db_id": "ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit",
    "generated_query": "SELECT (COUNT(*) FILTER (WHERE geschlecht = 'Frau') * 100.0 / COUNT(*)) AS frauenanteil_prozent\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit\nWHERE rententyp = 'Zusatzrente f\u00fcr Ehepartner';",
    "meta_data": [
      {
        "question": "Wie entwickelten sich die Differenz der durchschnittliche Altersrente und der Anzahl der Renten f\u00fcr Frauen und M\u00e4nnern \u00fcber die Jahre?",
        "query": "SELECT T1.jahr,\n  (T1.renten_mittelwert_in_franken - T2.renten_mittelwert_in_franken) AS differenz_durchschnittliche_altersrente_frauen_maenner,\n  (T1.anzahl_renten - T2.anzahl_renten) AS differenz_anzahl_altersrenten_frauen_maenner\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T1\nJOIN ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T2 ON T1.jahr = T2.jahr\nWHERE T1.geschlecht = 'Frau'\n  AND T2.geschlecht = 'Mann'\n  AND T1.rententyp = 'Altersrente' AND T2.rententyp = 'Altersrente'\n  AND T1.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n  AND T2.staatsangehorigkeit_kategorie = 'Staatsangeh\u00f6rigkeit - Total'\n  AND T1.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total'\n  AND T2.wohnsitzstaat_kategorie = 'Wohnsitzstaat - Total';\n",
        "score": 0.683159589767456
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit (\n\tuid SERIAL NOT NULL, \n\trententyp TEXT, \n\twohnsitzstaat_kategorie TEXT, \n\tstaatsangehorigkeit_kategorie TEXT, \n\tgeschlecht TEXT, \n\tjahr INTEGER, \n\tspatialunit_uid VARCHAR, \n\tanzahl_renten NUMERIC, \n\trentensumme_in_tausend_franken NUMERIC, \n\trenten_mittelwert_in_franken NUMERIC, \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit_pkey PRIMARY KEY (uid), \n\tCONSTRAINT ahv_renten_nach_wohnsitz_und_staatsangehoe_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 2007, 2003, 2022\nanzahl_renten : 497648, 450148, 100907, 74136, 563233\nrentensumme_in_tausend_franken : 2791872, 1827760, 259896, 127570, 3052347\nrenten_mittelwert_in_franken : 484, 1866, 1661, 1853, 609\n*/\n\n/*\nColumn name, Column discription, Example values\nrententyp, Rentenart, Zusatzrente f\u00fcr Kinder (Mutter),Zusatzrente f\u00fcr Ehepartner,Altersrente\nwohnsitzstaat_kategorie, Wohnsitz Kategorie, Ausland,Schweiz,Wohnsitzstaat - Total\nstaatsangehorigkeit_kategorie, Staatsangeh\u00f6rigkeit Kategorie, Ausland,Schweiz,Staatsangeh\u00f6rigkeit - Total\ngeschlecht, Geschlecht, Frau,Mann,Geschlecht - Total\nanzahl_renten, Anzahl Renten, None\nrentensumme_in_tausend_franken, Rentensumme in Tausend CHF, None\nrenten_mittelwert_in_franken, Renten Mittelwert in CHF, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nGab es Rentenarten bei der der Anteil der an im Ausland lebenden ausl\u00e4ndischer Staatsangeh\u00f6riger im Jahr 2022 h\u00f6her war als der der Anteil der im Inland lebenden Schweizer Staatsange\u00f6rigen: was waren die Zahlen?\n### SQL query\nSELECT T1.rententyp,\n  SUM(T1.anzahl_renten) AS anzahl_renten_auslaender_im_ausland_2022,\n  SUM(T2.anzahl_renten) AS anzahl_renten_schweizer_im_inland_2022\nFROM ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T1\nJOIN ahv_renten_nach_wohnsitz_und_staatsangehoerigkeit AS T2 ON T1.rententyp = T2.rententyp\nWHERE T1.jahr = 2022 and T2.jahr = 2022\n  AND T1.staatsangehorigkeit_kategorie = 'Ausland' AND T1.wohnsitzstaat_kategorie = 'Ausland'\n  AND T2.staatsangehorigkeit_kategorie = 'Schweiz' AND T2.wohnsitzstaat_kategorie = 'Schweiz'\n  AND T2.geschlecht = 'Geschlecht - Total' AND T1.geschlecht = 'Geschlecht - Total'\n  AND T1.anzahl_renten > T2.anzahl_renten\nGROUP BY T1.rententyp;\n\n\n### Question\nWie hoch war der Frauenanteil in prozent bei den Zusatzrenten f\u00fcr Ehepartner?\n### SQL query\n",
    "process_time": 8.616428283974528,
    "num_tokens": 1502,
    "hardness": "unknown",
    "scores": [
      0.683159589767456
    ],
    "lang": "de"
  },
  {
    "i": 126,
    "question": "Welches waren die Themen der Volksabstimmungen in 2022?",
    "query": "SELECT DISTINCT(T.thema)\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.jahr = '2022' AND anzahl_abstimmungsvorlagen != 0;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT DISTINCT thema\nFROM abstimmungsvorlagen_seit_1971\nWHERE jahr = 2022;",
    "meta_data": [
      {
        "question": "Welches Thema hatte die meisten Volksabstimmungen in den Jahren 1990 bis 2000?",
        "query": "SELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema DESC\nLIMIT 1;\n",
        "score": 0.24983426928520203
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2020, 2010, 2019, 2016, 2017\nthema : Verkehr und Infrastruktur, Aussenpolitik, Umwelt und Lebensraum, Sozialpolitik, Energie\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelches Thema hatte die meisten Volksabstimmungen in den Jahren 1990 bis 2000?\n### SQL query\nSELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema DESC\nLIMIT 1;\n\n\n### Question\nWelches waren die Themen der Volksabstimmungen in 2022?\n### SQL query\n",
    "process_time": 4.793633615132421,
    "num_tokens": 1030,
    "hardness": "medium",
    "scores": [
      0.24983426928520203
    ],
    "lang": "de"
  },
  {
    "i": 127,
    "question": "In welchem Jahren gab es die Volksabstimmungen zum Thema Energie in der Schweiz?",
    "query": "SELECT T.jahr\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.thema LIKE '%Energie%' AND anzahl_abstimmungsvorlagen != 0\nORDER BY jahr DESC;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT T.jahr\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.thema = 'Energie'\nGROUP BY T.jahr;",
    "meta_data": [
      {
        "question": "Welches Jahr hatte die meisten Volksabstimmungen in der Schweiz?",
        "query": "SELECT T.jahr, SUM(T.anzahl_abstimmungsvorlagen) AS anzahl_abstimmungsvorlagen_pro_jahr\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nGROUP BY T.jahr\nORDER BY anzahl_abstimmungsvorlagen_pro_jahr LIMIT 1;\n",
        "score": 0.32688426971435547
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2020, 2010, 2019, 2016, 2017\nthema : Verkehr und Infrastruktur, Aussenpolitik, Umwelt und Lebensraum, Sozialpolitik, Energie\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelches Jahr hatte die meisten Volksabstimmungen in der Schweiz?\n### SQL query\nSELECT T.jahr, SUM(T.anzahl_abstimmungsvorlagen) AS anzahl_abstimmungsvorlagen_pro_jahr\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nGROUP BY T.jahr\nORDER BY anzahl_abstimmungsvorlagen_pro_jahr LIMIT 1;\n\n\n### Question\nIn welchem Jahren gab es die Volksabstimmungen zum Thema Energie in der Schweiz?\n### SQL query\n",
    "process_time": 5.1831950871273875,
    "num_tokens": 1013,
    "hardness": "extra",
    "scores": [
      0.32688426971435547
    ],
    "lang": "de"
  },
  {
    "i": 128,
    "question": "Welches Thema hatte die wenigsten Volksabstimmungen in den Jahren 1990 bis 2000?",
    "query": "SELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE' AND anzahl_abstimmungsvorlagen != 0\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema ASC\nLIMIT 1;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema ASC\nLIMIT 1;",
    "meta_data": [
      {
        "question": "Welches Thema hatte die meisten Volksabstimmungen in den Jahren 1990 bis 2000?",
        "query": "SELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema DESC\nLIMIT 1;\n",
        "score": 0.048066120594739914
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2020, 2010, 2019, 2016, 2017\nthema : Verkehr und Infrastruktur, Aussenpolitik, Umwelt und Lebensraum, Sozialpolitik, Energie\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelches Thema hatte die meisten Volksabstimmungen in den Jahren 1990 bis 2000?\n### SQL query\nSELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema DESC\nLIMIT 1;\n\n\n### Question\nWelches Thema hatte die wenigsten Volksabstimmungen in den Jahren 1990 bis 2000?\n### SQL query\n",
    "process_time": 12.908201239071786,
    "num_tokens": 1036,
    "hardness": "unknown",
    "scores": [
      0.048066120594739914
    ],
    "lang": "de"
  },
  {
    "i": 129,
    "question": "Wann gab es die letzte Volksabstimmungen zum Thema Forschung?",
    "query": "SELECT MAX(jahr) as jahr_letzte_abstimmung\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND anzahl_abstimmungsvorlagen != 0 AND T.thema LIKE '%Forschung%';\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT MAX(jahr) as letzte_abstimmung_forschung\nFROM abstimmungsvorlagen_seit_1971\nWHERE thema = 'Forschung';",
    "meta_data": [
      {
        "question": "In wievielen Jahren gab es Volksabstimmungen zum Thema Aussenpolitik?",
        "query": "SELECT COUNT(jahr) as anzahl_jahre_aussenpolitik\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND anzahl_abstimmungsvorlagen != 0 AND T.thema LIKE '%Aussenpolitik%';\n",
        "score": 0.42337849736213684
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2020, 2010, 2019, 2016, 2017\nthema : Verkehr und Infrastruktur, Aussenpolitik, Umwelt und Lebensraum, Sozialpolitik, Energie\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn wievielen Jahren gab es Volksabstimmungen zum Thema Aussenpolitik?\n### SQL query\nSELECT COUNT(jahr) as anzahl_jahre_aussenpolitik\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND anzahl_abstimmungsvorlagen != 0 AND T.thema LIKE '%Aussenpolitik%';\n\n\n### Question\nWann gab es die letzte Volksabstimmungen zum Thema Forschung?\n### SQL query\n",
    "process_time": 3.230815500020981,
    "num_tokens": 1016,
    "hardness": "unknown",
    "scores": [
      0.42337849736213684
    ],
    "lang": "de"
  },
  {
    "i": 130,
    "question": "Wieviele Abstimmungsvorlagen gab es im Jahr 2000?",
    "query": "SELECT COUNT(*) as anzahl_abstimmungsvorlagen_im_jahr_2000\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE' AND T.jahr = 2000;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT COUNT(*) as anzahl_abstimmungsvorlagen\nFROM abstimmungsvorlagen_seit_1971\nWHERE jahr = 2000;",
    "meta_data": [
      {
        "question": "Wieviele Abstimmungsvorlagen gab es seit dem Jahr 1971?",
        "query": "SELECT COUNT(*) as anzahl_abstimmungsvorlagen\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE';\n",
        "score": 0.2563188076019287
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2020, 2010, 2019, 2016, 2017\nthema : Verkehr und Infrastruktur, Aussenpolitik, Umwelt und Lebensraum, Sozialpolitik, Energie\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWieviele Abstimmungsvorlagen gab es seit dem Jahr 1971?\n### SQL query\nSELECT COUNT(*) as anzahl_abstimmungsvorlagen\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE';\n\n\n### Question\nWieviele Abstimmungsvorlagen gab es im Jahr 2000?\n### SQL query\n",
    "process_time": 3.476446961052716,
    "num_tokens": 987,
    "hardness": "unknown",
    "scores": [
      0.2563188076019287
    ],
    "lang": "de"
  },
  {
    "i": 131,
    "question": "Wieviele Volksabstimmungen gab es vor dem Jahr 2000 zum Thema Energie?",
    "query": "SELECT SUM(anzahl_abstimmungsvorlagen) as anzahl_abstimmungen_energie\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND anzahl_abstimmungsvorlagen != 0 AND T.thema LIKE '%Energie%'\nAND jahr < 2000;\n",
    "db_id": "abstimmungsvorlagen_seit_1971",
    "generated_query": "SELECT COUNT(*) as anzahl_volksabstimmungen\nFROM abstimmungsvorlagen_seit_1971\nWHERE jahr < 2000 AND thema = 'Energie';",
    "meta_data": [
      {
        "question": "Welches Thema hatte die meisten Volksabstimmungen in den Jahren 1990 bis 2000?",
        "query": "SELECT thema, SUM(anzahl_abstimmungsvorlagen) as vorlagen_pro_thema\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND jahr BETWEEN 1990 AND 2000\nGROUP BY thema\nORDER BY vorlagen_pro_thema DESC\nLIMIT 1;\n",
        "score": 0.47504180669784546
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.abstimmungsvorlagen_seit_1971 (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tthema TEXT, \n\tanzahl_abstimmungsvorlagen NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_pkey PRIMARY KEY (uid), \n\tCONSTRAINT abstimmungsvorlagen_seit_1971_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in abstimmungsvorlagen_seit_1971 and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2020, 2010, 2019, 2016, 2017\nthema : Verkehr und Infrastruktur, Aussenpolitik, Umwelt und Lebensraum, Sozialpolitik, Energie\n*/\n\n/*\nColumn name, Column discription, Example values\nthema, Thema, Aussenpolitik,\u00d6ffentliche Finanzen,Umwelt und Lebensraum\nanzahl_abstimmungsvorlagen, Anzahl Abstimmungsvorlagen, 3\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWieviele Abstimmungsvorlagen gab es seit dem Jahr 1971?\n### SQL query\nSELECT COUNT(*) as anzahl_abstimmungsvorlagen\nFROM abstimmungsvorlagen_seit_1971 as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE';\n\n\n### Question\nWieviele Volksabstimmungen gab es vor dem Jahr 2000 zum Thema Energie?\n### SQL query\n",
    "process_time": 4.077824214939028,
    "num_tokens": 991,
    "hardness": "unknown",
    "scores": [
      0.47504180669784546
    ],
    "lang": "de"
  },
  {
    "i": 132,
    "question": "Wie hat sich das Verh\u00e0ltnis Stellen zu Vollzeit\u00e0quivalenten bei den Schweizer \u00c4rzten \u00fcber die Jahre ver\u00e4ndert?",
    "query": "SELECT T.jahr,\n  AVG(T.anzahl_beschaeftigte) / AVG(T.anzahl_vollzeitaquivalente) AS stellenanzahl_pro_vollzeit_aequivalent\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\nGROUP BY T.jahr\nORDER BY T.jahr ASC;\n",
    "db_id": "arztpraxen_ambulante_zentren",
    "generated_query": "SELECT T.jahr, SUM(T.anzahl_beschaeftigte) AS anzahl_stellen, SUM(T.anzahl_vollzeitaquivalente) AS anzahl_vollzeitaquivalente\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.country = 'TRUE'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\nGROUP BY T.jahr\nORDER BY T.jahr;",
    "meta_data": [
      {
        "question": "Wieviele \u00c4rzte arbeiteten 2019 im Kanton Z\u00fcrich und wie verteilen sie sich auf Altersklassen?",
        "query": "SELECT SUM(T.anzahl_beschaeftigte) AS anzahl_aerzte_kanton_zurich, T.altersgruppe\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE' AND S.name_de LIKE '%Z\u00fcrich%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\n  AND T.jahr = 2019\nGROUP BY S.name_de, T.altersgruppe\nORDER BY anzahl_aerzte_kanton_zurich DESC;\n",
        "score": 0.4851940870285034
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.arztpraxen_ambulante_zentren (\n\tuid SERIAL NOT NULL, \n\trechtsform TEXT, \n\tgeschlecht TEXT, \n\taltersgruppe TEXT, \n\tjahr INTEGER, \n\tanzahl_beschaeftigte NUMERIC, \n\tanzahl_vollzeitaquivalente NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT arztpraxen_ambulante_zentren_pkey PRIMARY KEY (uid), \n\tCONSTRAINT arztpraxen_ambulante_zentren_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in arztpraxen_ambulante_zentren and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_beschaeftigte : 3541.2699999999999818, 3938.9499999999998181, 9656.9899999999997817, 1889.2000000000000455, 833.5399999999999636\nanzahl_vollzeitaquivalente : 2032.77999999999997272, 1052.27999999999997272, 3270.80000000000018190, 1458.86999999999989086, 4402.02999999999974534\n*/\n\n/*\nColumn name, Column discription, Example values\nrechtsform, Rechtsform der Praxis, Rechtsform - Total,Einzelunternehmen,Andere Rechtsform\ngeschlecht, Geschlecht, Geschlecht - Total,Mann,Frau\naltersgruppe, Altersklasse, Altersklasse - Total,Unter 45 Jahre,45-54 Jahre\nanzahl_beschaeftigte, Anzahl Besch\u00e4ftigte, None\nanzahl_vollzeitaquivalente, Anzahl Vollzeit\u00e4quivalente, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWieviele \u00c4rzte arbeiteten 2019 im Kanton Z\u00fcrich und wie verteilen sie sich auf Altersklassen?\n### SQL query\nSELECT SUM(T.anzahl_beschaeftigte) AS anzahl_aerzte_kanton_zurich, T.altersgruppe\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE' AND S.name_de LIKE '%Z\u00fcrich%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\n  AND T.jahr = 2019\nGROUP BY S.name_de, T.altersgruppe\nORDER BY anzahl_aerzte_kanton_zurich DESC;\n\n\n### Question\nWie hat sich das Verh\u00e0ltnis Stellen zu Vollzeit\u00e0quivalenten bei den Schweizer \u00c4rzten \u00fcber die Jahre ver\u00e4ndert?\n### SQL query\n",
    "process_time": 10.513873934047297,
    "num_tokens": 1258,
    "hardness": "unknown",
    "scores": [
      0.4851940870285034
    ],
    "lang": "de"
  },
  {
    "i": 133,
    "question": "Welche Rechtsform hatte einen Zuwachs an \u00c4rzten zwischen 2017 und 2021 und wie gross war der Zuwachs?",
    "query": "SELECT T.rechtsform,\n  (SUM(CASE WHEN jahr = 2021 THEN T.anzahl_beschaeftigte ELSE 0 END) -\n   SUM(CASE WHEN jahr = 2017 THEN T.anzahl_beschaeftigte ELSE 0 END)) as zuwachs_aerzte_2017_bis_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\n  AND LOWER(T.rechtsform) NOT LIKE '%total%'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr IN (2017, 2021)\nGROUP BY T.rechtsform;\n",
    "db_id": "arztpraxen_ambulante_zentren",
    "generated_query": "SELECT T.rechtsform,\n  SUM(T.anzahl_beschaeftigte) as zuwachs_aerzte_2017_2021\nFROM arztpraxen_ambulante_zentren AS T\nWHERE T.jahr >= 2017 AND T.jahr <= 2021\nGROUP BY T.rechtsform\nHAVING SUM(CASE WHEN T.jahr = 2017 THEN T.anzahl_beschaeftigte ELSE 0 END) < SUM(CASE WHEN T.jahr = 2021 THEN T.anzahl_beschaeftigte ELSE 0 END);",
    "meta_data": [
      {
        "question": "In welchen f\u00fcnf Kantonen hatte es 2021 den gr\u00f6ssten Prozentsatz an \u00c4rzten in Einzelpraxen, wie gross war der Prozentsatz jeweils?",
        "query": "SELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%einzel%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%total%' THEN anzahl_beschaeftigte ELSE 0 END), 0), 2) as prozent_aerzte_in_einzelpraxen_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_aerzte_in_einzelpraxen_2021 DESC LIMIT 5;\n",
        "score": 0.5011612176895142
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.arztpraxen_ambulante_zentren (\n\tuid SERIAL NOT NULL, \n\trechtsform TEXT, \n\tgeschlecht TEXT, \n\taltersgruppe TEXT, \n\tjahr INTEGER, \n\tanzahl_beschaeftigte NUMERIC, \n\tanzahl_vollzeitaquivalente NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT arztpraxen_ambulante_zentren_pkey PRIMARY KEY (uid), \n\tCONSTRAINT arztpraxen_ambulante_zentren_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in arztpraxen_ambulante_zentren and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_beschaeftigte : 3541.2699999999999818, 3938.9499999999998181, 9656.9899999999997817, 1889.2000000000000455, 833.5399999999999636\nanzahl_vollzeitaquivalente : 2032.77999999999997272, 1052.27999999999997272, 3270.80000000000018190, 1458.86999999999989086, 4402.02999999999974534\n*/\n\n/*\nColumn name, Column discription, Example values\nrechtsform, Rechtsform der Praxis, Rechtsform - Total,Einzelunternehmen,Andere Rechtsform\ngeschlecht, Geschlecht, Geschlecht - Total,Mann,Frau\naltersgruppe, Altersklasse, Altersklasse - Total,Unter 45 Jahre,45-54 Jahre\nanzahl_beschaeftigte, Anzahl Besch\u00e4ftigte, None\nanzahl_vollzeitaquivalente, Anzahl Vollzeit\u00e4quivalente, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn welchen f\u00fcnf Kantonen hatte es 2021 den gr\u00f6ssten Prozentsatz an \u00c4rzten in Einzelpraxen, wie gross war der Prozentsatz jeweils?\n### SQL query\nSELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%einzel%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%total%' THEN anzahl_beschaeftigte ELSE 0 END), 0), 2) as prozent_aerzte_in_einzelpraxen_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_aerzte_in_einzelpraxen_2021 DESC LIMIT 5;\n\n\n### Question\nWelche Rechtsform hatte einen Zuwachs an \u00c4rzten zwischen 2017 und 2021 und wie gross war der Zuwachs?\n### SQL query\n",
    "process_time": 9.823219898156822,
    "num_tokens": 1331,
    "hardness": "unknown",
    "scores": [
      0.5011612176895142
    ],
    "lang": "de"
  },
  {
    "i": 134,
    "question": "Welche drei Kanton hatten 2021 prozentual die meisten jungen \u00c4rzte und \u00c4rztinnen und wieviel Prozent waren es jeweils?",
    "query": "SELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.altersgruppe) LIKE '%unter%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.altersgruppe) LIKE '%total%' THEN T.anzahl_beschaeftigte ELSE 0 END), 0), 2)\n        AS prozent_junge_arzte_und_arztinnen\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND LOWER(T.rechtsform) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_junge_arzte_und_arztinnen DESC LIMIT 3;\n",
    "db_id": "arztpraxen_ambulante_zentren",
    "generated_query": "SELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.altersgruppe) LIKE '%unter 45%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.altersgruppe) LIKE '%total%' THEN anzahl_beschaeftigte ELSE 0 END), 0), 2) as prozent_junge_aerzte_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_junge_aerzte_2021 DESC LIMIT 3;",
    "meta_data": [
      {
        "question": "In welchen f\u00fcnf Kantonen hatte es 2021 den gr\u00f6ssten Prozentsatz an \u00c4rzten in Einzelpraxen, wie gross war der Prozentsatz jeweils?",
        "query": "SELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%einzel%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%total%' THEN anzahl_beschaeftigte ELSE 0 END), 0), 2) as prozent_aerzte_in_einzelpraxen_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_aerzte_in_einzelpraxen_2021 DESC LIMIT 5;\n",
        "score": 0.291719526052475
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.arztpraxen_ambulante_zentren (\n\tuid SERIAL NOT NULL, \n\trechtsform TEXT, \n\tgeschlecht TEXT, \n\taltersgruppe TEXT, \n\tjahr INTEGER, \n\tanzahl_beschaeftigte NUMERIC, \n\tanzahl_vollzeitaquivalente NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT arztpraxen_ambulante_zentren_pkey PRIMARY KEY (uid), \n\tCONSTRAINT arztpraxen_ambulante_zentren_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in arztpraxen_ambulante_zentren and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nanzahl_beschaeftigte : 3541.2699999999999818, 3938.9499999999998181, 9656.9899999999997817, 1889.2000000000000455, 833.5399999999999636\nanzahl_vollzeitaquivalente : 2032.77999999999997272, 1052.27999999999997272, 3270.80000000000018190, 1458.86999999999989086, 4402.02999999999974534\n*/\n\n/*\nColumn name, Column discription, Example values\nrechtsform, Rechtsform der Praxis, Rechtsform - Total,Einzelunternehmen,Andere Rechtsform\ngeschlecht, Geschlecht, Geschlecht - Total,Mann,Frau\naltersgruppe, Altersklasse, Altersklasse - Total,Unter 45 Jahre,45-54 Jahre\nanzahl_beschaeftigte, Anzahl Besch\u00e4ftigte, None\nanzahl_vollzeitaquivalente, Anzahl Vollzeit\u00e4quivalente, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn welchen f\u00fcnf Kantonen hatte es 2021 den gr\u00f6ssten Prozentsatz an \u00c4rzten in Einzelpraxen, wie gross war der Prozentsatz jeweils?\n### SQL query\nSELECT S.name_de AS kanton,\n  ROUND(100 * SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%einzel%' THEN T.anzahl_beschaeftigte ELSE 0 END) /\n        NULLIF(SUM(CASE WHEN LOWER(T.rechtsform) LIKE '%total%' THEN anzahl_beschaeftigte ELSE 0 END), 0), 2) as prozent_aerzte_in_einzelpraxen_2021\nFROM arztpraxen_ambulante_zentren AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND LOWER(T.altersgruppe) LIKE '%total%'\n  AND LOWER(T.geschlecht) LIKE '%total%'\n  AND T.jahr = 2021\nGROUP BY S.name_de\nORDER BY prozent_aerzte_in_einzelpraxen_2021 DESC LIMIT 5;\n\n\n### Question\nWelche drei Kanton hatten 2021 prozentual die meisten jungen \u00c4rzte und \u00c4rztinnen und wieviel Prozent waren es jeweils?\n### SQL query\n",
    "process_time": 25.18957735504955,
    "num_tokens": 1335,
    "hardness": "unknown",
    "scores": [
      0.291719526052475
    ],
    "lang": "de"
  },
  {
    "i": 135,
    "question": "In welchen Kantonen stand die Partei SVP 2019 nicht zur Wahl?",
    "query": "SELECT S.name_de AS kanton_ohne_svp_2019\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.partei = 'SVP'\n  AND T.jahr = 2019\n  AND T.parteistarke_in_prozent IS NULL;\n",
    "db_id": "nationalratswahlen",
    "generated_query": "SELECT S.name_de\nFROM nationalratswahlen AS T\nJOIN spatial_unit AS S ON T.spatialunit_uid = S.spatialunit_uid\nWHERE T.partei = 'SVP'\n  AND T.jahr = 2019\n  AND S.canton = 'TRUE'\n  AND T.anzahl_parteistimmen IS NULL;",
    "meta_data": [
      {
        "question": "Welche Parteien standen 2019 im Kanton Glarus zur Wahl und welche prozentuale St\u00e4rke hatten sie?",
        "query": "SELECT T.partei, T.parteistarke_in_prozent\nFROM nationalratswahlen AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.parteistarke_in_prozent IS NOT NULL\n  AND T.jahr = 2019\n  AND S.canton = 'TRUE' AND S.name_de LIKE '%Glarus%';\n",
        "score": 0.2508390247821808
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.nationalratswahlen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tpartei TEXT, \n\tanzahl_parteistimmen NUMERIC, \n\tanzahl_fiktive_wahlende NUMERIC, \n\tparteistarke_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT nationalratswahlen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT nationalratswahlen_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in nationalratswahlen and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\npartei : Rep., SVP, GPS, SP, EDU\nanzahl_fiktive_wahlende : 5272, 6168, 415226, 4552, 28290\nparteistarke_in_prozent : 1.189999999999999947, 0.359999999999999987, 0.460000000000000020, 1.659999999999999920, 15.759999999999999787\n*/\n\n/*\nColumn name, Column discription, Example values\npartei, Partei, FDP,CVP,SP,Sep.,\u00dcbrige\nanzahl_parteistimmen, Anzahl Parteistimmen, None\nanzahl_fiktive_wahlende, Anzahl fiktive W\u00e4hlende, None\nparteistarke_in_prozent, Parteist\u00e4rke in Prozent, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche Parteien standen 2019 im Kanton Glarus zur Wahl und welche prozentuale St\u00e4rke hatten sie?\n### SQL query\nSELECT T.partei, T.parteistarke_in_prozent\nFROM nationalratswahlen AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.parteistarke_in_prozent IS NOT NULL\n  AND T.jahr = 2019\n  AND S.canton = 'TRUE' AND S.name_de LIKE '%Glarus%';\n\n\n### Question\nIn welchen Kantonen stand die Partei SVP 2019 nicht zur Wahl?\n### SQL query\n",
    "process_time": 6.861344508128241,
    "num_tokens": 1086,
    "hardness": "unknown",
    "scores": [
      0.2508390247821808
    ],
    "lang": "de"
  },
  {
    "i": 136,
    "question": "Welche Partei war 2019 prozentual am st\u00e0rksten in der Schweiz und wie stark war sie?",
    "query": "SELECT T.partei AS staerkste_partei_2019, T.parteistarke_in_prozent\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.parteistarke_in_prozent IS NOT NULL AND T.jahr = 2019\nORDER BY T.parteistarke_in_prozent DESC LIMIT 1;\n",
    "db_id": "nationalratswahlen",
    "generated_query": "SELECT T.partei AS staerkste_partei_2019,\n  T.parteistarke_in_prozent\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.partei != '\u00dcbrige'\nAND T.parteistarke_in_prozent IS NOT NULL AND T.jahr = 2019\nORDER BY parteistarke_in_prozent DESC LIMIT 1;",
    "meta_data": [
      {
        "question": "Welche Partei hatte 2019 am meisten W\u00e0hler (inklusive fiktive W\u00e4hler) in der Schweiz?",
        "query": "SELECT T.partei AS staerkeste_partei_2019,\n  T.anzahl_fiktive_wahlende\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.partei != '\u00dcbrige'\nAND T.anzahl_fiktive_wahlende IS NOT NULL AND T.jahr = 2019\nORDER BY anzahl_fiktive_wahlende DESC LIMIT 1;\n",
        "score": 0.1670425832271576
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.nationalratswahlen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tpartei TEXT, \n\tanzahl_parteistimmen NUMERIC, \n\tanzahl_fiktive_wahlende NUMERIC, \n\tparteistarke_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT nationalratswahlen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT nationalratswahlen_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in nationalratswahlen and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\npartei : Rep., SVP, GPS, SP, EDU\nanzahl_fiktive_wahlende : 5272, 6168, 415226, 4552, 28290\nparteistarke_in_prozent : 1.189999999999999947, 0.359999999999999987, 0.460000000000000020, 1.659999999999999920, 15.759999999999999787\n*/\n\n/*\nColumn name, Column discription, Example values\npartei, Partei, FDP,CVP,SP,Sep.,\u00dcbrige\nanzahl_parteistimmen, Anzahl Parteistimmen, None\nanzahl_fiktive_wahlende, Anzahl fiktive W\u00e4hlende, None\nparteistarke_in_prozent, Parteist\u00e4rke in Prozent, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche Partei hatte 2019 am meisten W\u00e0hler (inklusive fiktive W\u00e4hler) in der Schweiz?\n### SQL query\nSELECT T.partei AS staerkeste_partei_2019,\n  T.anzahl_fiktive_wahlende\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de = 'Schweiz' AND S.country = 'TRUE'\nAND T.partei != '\u00dcbrige'\nAND T.anzahl_fiktive_wahlende IS NOT NULL AND T.jahr = 2019\nORDER BY anzahl_fiktive_wahlende DESC LIMIT 1;\n\n\n### Question\nWelche Partei war 2019 prozentual am st\u00e0rksten in der Schweiz und wie stark war sie?\n### SQL query\n",
    "process_time": 15.205876458901912,
    "num_tokens": 1129,
    "hardness": "unknown",
    "scores": [
      0.1670425832271576
    ],
    "lang": "de"
  },
  {
    "i": 137,
    "question": "Wann und in welchen Kantonen stand die Partei LEGA zur Wahl und welche Parteist\u00e4rke hatte sie?",
    "query": "SELECT S.name_de AS kanton, T.jahr, T.parteistarke_in_prozent AS parteienstaerke_Lega\nFROM nationalratswahlen as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n  AND T.partei = 'Lega'\n  AND T.parteistarke_in_prozent IS NOT NULL\nGROUP BY kanton, T.jahr, T.partei, T.parteistarke_in_prozent\nORDER BY jahr ASC;\n",
    "db_id": "nationalratswahlen",
    "generated_query": "SELECT T.jahr, S.name_de, T.parteistarke_in_prozent\nFROM nationalratswahlen AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.partei = 'LEGA'\n  AND T.parteistarke_in_prozent IS NOT NULL;",
    "meta_data": [
      {
        "question": "Welche Parteien standen 2019 im Kanton Glarus zur Wahl und welche prozentuale St\u00e4rke hatten sie?",
        "query": "SELECT T.partei, T.parteistarke_in_prozent\nFROM nationalratswahlen AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.parteistarke_in_prozent IS NOT NULL\n  AND T.jahr = 2019\n  AND S.canton = 'TRUE' AND S.name_de LIKE '%Glarus%';\n",
        "score": 0.33309561014175415
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.nationalratswahlen (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tpartei TEXT, \n\tanzahl_parteistimmen NUMERIC, \n\tanzahl_fiktive_wahlende NUMERIC, \n\tparteistarke_in_prozent NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT nationalratswahlen_pkey PRIMARY KEY (uid), \n\tCONSTRAINT nationalratswahlen_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in nationalratswahlen and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\npartei : Rep., SVP, GPS, SP, EDU\nanzahl_fiktive_wahlende : 5272, 6168, 415226, 4552, 28290\nparteistarke_in_prozent : 1.189999999999999947, 0.359999999999999987, 0.460000000000000020, 1.659999999999999920, 15.759999999999999787\n*/\n\n/*\nColumn name, Column discription, Example values\npartei, Partei, FDP,CVP,SP,Sep.,\u00dcbrige\nanzahl_parteistimmen, Anzahl Parteistimmen, None\nanzahl_fiktive_wahlende, Anzahl fiktive W\u00e4hlende, None\nparteistarke_in_prozent, Parteist\u00e4rke in Prozent, None\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWelche Parteien standen 2019 im Kanton Glarus zur Wahl und welche prozentuale St\u00e4rke hatten sie?\n### SQL query\nSELECT T.partei, T.parteistarke_in_prozent\nFROM nationalratswahlen AS T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE T.parteistarke_in_prozent IS NOT NULL\n  AND T.jahr = 2019\n  AND S.canton = 'TRUE' AND S.name_de LIKE '%Glarus%';\n\n\n### Question\nWann und in welchen Kantonen stand die Partei LEGA zur Wahl und welche Parteist\u00e4rke hatte sie?\n### SQL query\n",
    "process_time": 6.677199432859197,
    "num_tokens": 1094,
    "hardness": "unknown",
    "scores": [
      0.33309561014175415
    ],
    "lang": "de"
  },
  {
    "i": 138,
    "question": "Welches sind die verschiedenen Stromverbrauchskategorien in der Schweiz?",
    "query": "SELECT DISTINCT verbrauchskategorie, verbrauchskategorie_beschreibung\nFROM median_strompreis_per_kanton ORDER BY verbrauchskategorie;\n",
    "db_id": "median_strompreis_per_kanton",
    "generated_query": "SELECT DISTINCT(verbrauchskategorie)\nFROM median_strompreis_per_kanton;",
    "meta_data": [
      {
        "question": "In welchen Kantonen liegen die Strompreise f\u00fcr die Kategorie der Grossverbraucher im Jahr 2022 unter 13 Rappen pro Kilowattstunde?",
        "query": "SELECT DISTINCT(S.name)\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2022\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr = (SELECT MAX(verbrauchskategorie_grosse_kwh_pro_jahr) FROM median_strompreis_per_kanton)\n    AND T.mittlerer_preis_rappen_pro_kwh < 13;\n",
        "score": 0.606669008731842
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.median_strompreis_per_kanton (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tverbrauchskategorie TEXT, \n\tverbrauchskategorie_grosse_kwh_pro_jahr NUMERIC, \n\tverbrauchskategorie_beschreibung TEXT, \n\tenergieprodukt TEXT, \n\tmittlerer_preis_rappen_pro_kwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT median_strompreis_per_kanton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT median_strompreis_per_kanton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in median_strompreis_per_kanton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nmittlerer_preis_rappen_pro_kwh : 22.1822809999999997, 17.4839550000000017, 22.3053600000000003, 20.1222230000000017, 22.8148569999999999\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 6_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nverbrauchskategorie, Verbrauchskategorie, C5,H4,H2\nverbrauchskategorie_beschreibung, Verbrauchskategorie Beschreibung, 4'500 kWh/Jahr: 5-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler),7'500 kWh/Jahr: 5-Zimmer-Einfamilienhaus mit Elektroherd' Elektroboiler und Tumbler\nverbrauchskategorie_grosse_kwh_pro_jahr, Verbrauchskategorie Gr\u00f6sse (kwh/jahr), 500000,4500,2500\nenergieprodukt, Energieprodukt, G\u00fcnstigstes Produkt,Standardprodukt\nmittlerer_preis_rappen_pro_kw_hr, Mittlerer Preis in Rappen pro kwh, 17.95067,18.49410,17.25452\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn welchen Kantonen liegen die Strompreise f\u00fcr die Kategorie der Grossverbraucher im Jahr 2022 unter 13 Rappen pro Kilowattstunde?\n### SQL query\nSELECT DISTINCT(S.name)\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2022\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr = (SELECT MAX(verbrauchskategorie_grosse_kwh_pro_jahr) FROM median_strompreis_per_kanton)\n    AND T.mittlerer_preis_rappen_pro_kwh < 13;\n\n\n### Question\nWelches sind die verschiedenen Stromverbrauchskategorien in der Schweiz?\n### SQL query\n",
    "process_time": 1.9189056290779263,
    "num_tokens": 1271,
    "hardness": "medium",
    "scores": [
      0.606669008731842
    ],
    "lang": "de"
  },
  {
    "i": 139,
    "question": "Wie haben sich die Standardstrompreise f\u00fcr kleine Unternehmen im Kanton Neuenburg zwischen 2017 und 2023 entwickelt?",
    "query": "SELECT T.jahr, T.energieprodukt, T.verbrauchskategorie, T.mittlerer_preis_rappen_pro_kwh\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de LIKE '%Neuenburg%'\n    AND S.canton = 'TRUE'\n    AND T.jahr >= 2017\n    AND T.jahr <= 2023\n    AND T.energieprodukt = 'Standardprodukt'\n    AND T.verbrauchskategorie_beschreibung LIKE '%Kleinbetrieb%'\nORDER BY T.jahr;\n",
    "db_id": "median_strompreis_per_kanton",
    "generated_query": "SELECT T.jahr, T.mittlerer_preis_rappen_pro_kwh\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name = 'Neuenburg'\n    AND T.verbrauchskategorie = 'H2'\n    AND T.jahr BETWEEN 2017 AND 2023\n    AND T.energieprodukt = 'Standardprodukt';",
    "meta_data": [
      {
        "question": "In welchen Kantonen liegen die Strompreise f\u00fcr die Kategorie der Grossverbraucher im Jahr 2022 unter 13 Rappen pro Kilowattstunde?",
        "query": "SELECT DISTINCT(S.name)\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2022\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr = (SELECT MAX(verbrauchskategorie_grosse_kwh_pro_jahr) FROM median_strompreis_per_kanton)\n    AND T.mittlerer_preis_rappen_pro_kwh < 13;\n",
        "score": 0.9102562665939331
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.median_strompreis_per_kanton (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tverbrauchskategorie TEXT, \n\tverbrauchskategorie_grosse_kwh_pro_jahr NUMERIC, \n\tverbrauchskategorie_beschreibung TEXT, \n\tenergieprodukt TEXT, \n\tmittlerer_preis_rappen_pro_kwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT median_strompreis_per_kanton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT median_strompreis_per_kanton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in median_strompreis_per_kanton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nmittlerer_preis_rappen_pro_kwh : 22.1822809999999997, 17.4839550000000017, 22.3053600000000003, 20.1222230000000017, 22.8148569999999999\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 6_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nverbrauchskategorie, Verbrauchskategorie, C5,H4,H2\nverbrauchskategorie_beschreibung, Verbrauchskategorie Beschreibung, 4'500 kWh/Jahr: 5-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler),7'500 kWh/Jahr: 5-Zimmer-Einfamilienhaus mit Elektroherd' Elektroboiler und Tumbler\nverbrauchskategorie_grosse_kwh_pro_jahr, Verbrauchskategorie Gr\u00f6sse (kwh/jahr), 500000,4500,2500\nenergieprodukt, Energieprodukt, G\u00fcnstigstes Produkt,Standardprodukt\nmittlerer_preis_rappen_pro_kw_hr, Mittlerer Preis in Rappen pro kwh, 17.95067,18.49410,17.25452\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nIn welchen Kantonen liegen die Strompreise f\u00fcr die Kategorie der Grossverbraucher im Jahr 2022 unter 13 Rappen pro Kilowattstunde?\n### SQL query\nSELECT DISTINCT(S.name)\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.canton = 'TRUE'\n    AND T.jahr = 2022\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr = (SELECT MAX(verbrauchskategorie_grosse_kwh_pro_jahr) FROM median_strompreis_per_kanton)\n    AND T.mittlerer_preis_rappen_pro_kwh < 13;\n\n\n### Question\nWie haben sich die Standardstrompreise f\u00fcr kleine Unternehmen im Kanton Neuenburg zwischen 2017 und 2023 entwickelt?\n### SQL query\n",
    "process_time": 9.469193425960839,
    "num_tokens": 1282,
    "hardness": "extra",
    "scores": [
      0.9102562665939331
    ],
    "lang": "de"
  },
  {
    "i": 140,
    "question": "Wie viel zahle ich in CHF f\u00fcr 1000 kWh bei einer 2-Zimmer-Wohnung im Kanton Bern im Jahr 2017?",
    "query": "SELECT T.verbrauchskategorie, T.verbrauchskategorie_beschreibung,\nT.energieprodukt,\nT.mittlerer_preis_rappen_pro_kwh * 1000 / 100 as preis_franken_fur_1000_kwh_bern_2017_2_zimmerwohnung\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.jahr = 2017\n    AND T.verbrauchskategorie_beschreibung LIKE '%2 - Zimmerwohnung%'\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr >= 1000;\n",
    "db_id": "median_strompreis_per_kanton",
    "generated_query": "SELECT mittlerer_preis_rappen_pro_kwh * 1000 / verbrauchskategorie_grosse_kwh_pro_jahr as preis_franken_fur_1000_kwh\nFROM experiment.median_strompreis_per_kanton\nWHERE jahr = 2017\nAND verbrauchskategorie_beschreibung LIKE '%2-Zimmer-Wohnung%'\nAND spatialunit_uid IN (\n    SELECT spatialunit_uid\n    FROM experiment.spatial_unit\n    WHERE name_de = 'Bern'\n    AND canton = true\n)",
    "meta_data": [
      {
        "question": "Wie viel zahle ich in CHF f\u00fcr 1000 kWh bei einer 2-Zimmer-Wohnung im Kanton Bern im Jahr 2017?",
        "query": "SELECT T.verbrauchskategorie, T.verbrauchskategorie_beschreibung,\nT.energieprodukt,\nT.mittlerer_preis_rappen_pro_kwh * 1000 / 100 as preis_franken_fur_1000_kwh_bern_2017_2_zimmerwohnung\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.jahr = 2017\n    AND T.verbrauchskategorie_beschreibung LIKE '%2 - Zimmerwohnung%'\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr >= 1000;\n",
        "score": 1.4342414517316826e-13
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.median_strompreis_per_kanton (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\tverbrauchskategorie TEXT, \n\tverbrauchskategorie_grosse_kwh_pro_jahr NUMERIC, \n\tverbrauchskategorie_beschreibung TEXT, \n\tenergieprodukt TEXT, \n\tmittlerer_preis_rappen_pro_kwh NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT median_strompreis_per_kanton_pkey PRIMARY KEY (uid), \n\tCONSTRAINT median_strompreis_per_kanton_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.spatial_unit (spatialunit_uid)\n)\n/*\nColumns in median_strompreis_per_kanton and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\nmittlerer_preis_rappen_pro_kwh : 22.1822809999999997, 17.4839550000000017, 22.3053600000000003, 20.1222230000000017, 22.8148569999999999\nspatialunit_uid : 10_A.ADM1, 18_A.ADM1, 2_A.ADM1, 17_A.ADM1, 6_A.ADM1\n*/\n\n/*\nColumn name, Column discription, Example values\nverbrauchskategorie, Verbrauchskategorie, C5,H4,H2\nverbrauchskategorie_beschreibung, Verbrauchskategorie Beschreibung, 4'500 kWh/Jahr: 5-Zimmerwohnung mit Elektroherd und Tumbler (ohne Elektroboiler),7'500 kWh/Jahr: 5-Zimmer-Einfamilienhaus mit Elektroherd' Elektroboiler und Tumbler\nverbrauchskategorie_grosse_kwh_pro_jahr, Verbrauchskategorie Gr\u00f6sse (kwh/jahr), 500000,4500,2500\nenergieprodukt, Energieprodukt, G\u00fcnstigstes Produkt,Standardprodukt\nmittlerer_preis_rappen_pro_kw_hr, Mittlerer Preis in Rappen pro kwh, 17.95067,18.49410,17.25452\n*/\n\n\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\n### Question\nWie viel zahle ich in CHF f\u00fcr 1000 kWh bei einer 2-Zimmer-Wohnung im Kanton Bern im Jahr 2017?\n### SQL query\nSELECT T.verbrauchskategorie, T.verbrauchskategorie_beschreibung,\nT.energieprodukt,\nT.mittlerer_preis_rappen_pro_kwh * 1000 / 100 as preis_franken_fur_1000_kwh_bern_2017_2_zimmerwohnung\nFROM median_strompreis_per_kanton as T\nJOIN spatial_unit as S on T.spatialunit_uid = S.spatialunit_uid\nWHERE S.name_de LIKE '%Bern%'\n    AND S.canton = 'TRUE'\n    AND T.jahr = 2017\n    AND T.verbrauchskategorie_beschreibung LIKE '%2 - Zimmerwohnung%'\n    AND T.verbrauchskategorie_grosse_kwh_pro_jahr >= 1000;\n\n\n### Question\nWie viel zahle ich in CHF f\u00fcr 1000 kWh bei einer 2-Zimmer-Wohnung im Kanton Bern im Jahr 2017?\n### SQL query\n",
    "process_time": 14.577353395987302,
    "num_tokens": 1336,
    "hardness": "unknown",
    "scores": [
      1.4342414517316826e-13
    ],
    "lang": "de"
  },
  {
    "i": 141,
    "question": "Wie hoch ist der Anteil des Schweizer Budgets, der 2010 und 2020 f\u00fcr die Gesundheit ausgegeben wird?",
    "query": "SELECT jahr, SUM(prozent_der_gesamtausgaben) as prozent_der_gesamtausgaben_fur_gesundheitswesen\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE aufgabenbereich_cofog_grobgliederung = 'Gesundheitswesen'\n    AND institutioneller_sektor = 'Staat'\n    AND jahr <= 2020\n    AND jahr >= 2010\nGROUP BY jahr\nORDER BY jahr ASC;\n",
    "db_id": "staatsausgaben_nach_aufgabenbereichen_cofog",
    "generated_query": "SELECT (SUM(ausgaben_in_mio_chf) / (SELECT SUM(ausgaben_in_mio_chf) FROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE jahr IN (2010, 2020))) * 100 as prozent_der_gesamtausgaben_fuer_gesundheit_2010_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog\nWHERE aufgabenbereich_cofog_feingliederung = 'Gesundheit' AND jahr IN (2010, 2020)",
    "meta_data": [
      {
        "question": "Welche Teilung hatte im Jahr 2020 die h\u00f6chsten Staatsausgaben?",
        "query": "SELECT aufgabenbereich_cofog_grobgliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Staat' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_grobgliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 1;\n",
        "score": 0.555392324924469
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.staatsausgaben_nach_aufgabenbereichen_cofog (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\taufgabenbereich_cofog_feingliederung TEXT, \n\taufgabenbereich_cofog_grobgliederung TEXT, \n\tinstitutioneller_sektor TEXT, \n\tausgaben_in_mio_chf NUMERIC, \n\tprozent_der_gesamtausgaben NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofo_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in staatsausgaben_nach_aufgabenbereichen_cofog and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 2003\nausgaben_in_mio_chf : 2207, 4361, 2474, 19, 10482\nprozent_der_gesamtausgaben : 8.59999999999999964, 5.00000000000000000, 2.79999999999999982, 4.09999999999999964, 2.60000000000000009\n*/\n\n/*\nColumn name, Column discription, Example values\naufgabenbereich_cofog_feingliederung, Aufgabenbereich des Staates (COFOG Feingliederung), Alter,Wasserversorgung,Polizei\naufgabenbereich_cofog_grobgliederung, Aufgabenbereich des Staates (COFOG Grobgliederung), Umweltschutz,Bildungswesen,Freizeitgestaltung, Sport, Kultur und Religion\ninstitutioneller_sektor, institutioneller Sektor, Staat,Kantone,Bund,Gemeinden,\u00d6ffentliche Sozialversicherungen\nausgaben_in_mio_chf, Ausgaben in Millionen CHF, None\nprozent_der_gesamtausgaben, Prozent der Gesamtaugaben, None\n*/\n\n\n\n### Question\nWelche Teilung hatte im Jahr 2020 die h\u00f6chsten Staatsausgaben?\n### SQL query\nSELECT aufgabenbereich_cofog_grobgliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Staat' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_grobgliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 1;\n\n\n### Question\nWie hoch ist der Anteil des Schweizer Budgets, der 2010 und 2020 f\u00fcr die Gesundheit ausgegeben wird?\n### SQL query\n",
    "process_time": 12.87017464498058,
    "num_tokens": 1266,
    "hardness": "unknown",
    "scores": [
      0.555392324924469
    ],
    "lang": "de"
  },
  {
    "i": 142,
    "question": "Welches waren die 3 gr\u00f6ssten Ausgabenquellen des Bundes im Jahr 2021 und wie hoch waren diese?",
    "query": "SELECT SUM(ausgaben_in_mio_chf) as ausgaben_in_mio_chf,\n  aufgabenbereich_cofog_feingliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Bund' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_feingliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 3;\n",
    "db_id": "staatsausgaben_nach_aufgabenbereichen_cofog",
    "generated_query": "SELECT aufgabenbereich_cofog_feingliederung as ausgabenquelle_des_bundes, ausgaben_in_mio_chf as ausgabenbetrag\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Bund' AND jahr = 2021\nORDER BY ausgaben_in_mio_chf DESC LIMIT 3;",
    "meta_data": [
      {
        "question": "Welche Teilung hatte im Jahr 2020 die h\u00f6chsten Staatsausgaben?",
        "query": "SELECT aufgabenbereich_cofog_grobgliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Staat' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_grobgliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 1;\n",
        "score": 0.29191792011260986
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.staatsausgaben_nach_aufgabenbereichen_cofog (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\taufgabenbereich_cofog_feingliederung TEXT, \n\taufgabenbereich_cofog_grobgliederung TEXT, \n\tinstitutioneller_sektor TEXT, \n\tausgaben_in_mio_chf NUMERIC, \n\tprozent_der_gesamtausgaben NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofo_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in staatsausgaben_nach_aufgabenbereichen_cofog and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 2003\nausgaben_in_mio_chf : 2207, 4361, 2474, 19, 10482\nprozent_der_gesamtausgaben : 8.59999999999999964, 5.00000000000000000, 2.79999999999999982, 4.09999999999999964, 2.60000000000000009\n*/\n\n/*\nColumn name, Column discription, Example values\naufgabenbereich_cofog_feingliederung, Aufgabenbereich des Staates (COFOG Feingliederung), Alter,Wasserversorgung,Polizei\naufgabenbereich_cofog_grobgliederung, Aufgabenbereich des Staates (COFOG Grobgliederung), Umweltschutz,Bildungswesen,Freizeitgestaltung, Sport, Kultur und Religion\ninstitutioneller_sektor, institutioneller Sektor, Staat,Kantone,Bund,Gemeinden,\u00d6ffentliche Sozialversicherungen\nausgaben_in_mio_chf, Ausgaben in Millionen CHF, None\nprozent_der_gesamtausgaben, Prozent der Gesamtaugaben, None\n*/\n\n\n\n### Question\nWelche Teilung hatte im Jahr 2020 die h\u00f6chsten Staatsausgaben?\n### SQL query\nSELECT aufgabenbereich_cofog_grobgliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Staat' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_grobgliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 1;\n\n\n### Question\nWelches waren die 3 gr\u00f6ssten Ausgabenquellen des Bundes im Jahr 2021 und wie hoch waren diese?\n### SQL query\n",
    "process_time": 8.365456714993343,
    "num_tokens": 1263,
    "hardness": "unknown",
    "scores": [
      0.29191792011260986
    ],
    "lang": "de"
  },
  {
    "i": 143,
    "question": "Welcher Anteil des Schweizer Budgets wird jedes Jahr in Sicherheit investiert?",
    "query": "SELECT jahr, SUM(prozent_der_gesamtausgaben) as prozent_der_gesamtausgaben_fur_sicherheit\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE LOWER(aufgabenbereich_cofog_feingliederung) LIKE '%sicherheit%'\n    AND institutioneller_sektor = 'Staat'\nGROUP BY jahr\nORDER BY jahr ASC;\n",
    "db_id": "staatsausgaben_nach_aufgabenbereichen_cofog",
    "generated_query": "SELECT (SUM(ausgaben_in_mio_chf) / (SELECT SUM(ausgaben_in_mio_chf) FROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE aufgabenbereich_cofog_grobgliederung = 'Sicherheit')) * 100 as prozent_der_gesamtausgaben, jahr\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE aufgabenbereich_cofog_grobgliederung = 'Sicherheit'\nGROUP BY jahr\nORDER BY jahr ASC;",
    "meta_data": [
      {
        "question": "Welche Teilung hatte im Jahr 2020 die h\u00f6chsten Staatsausgaben?",
        "query": "SELECT aufgabenbereich_cofog_grobgliederung as ausgaben_bereich_mit_den_hoechsten_ausgaben_2020\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE institutioneller_sektor = 'Staat' AND jahr = 2020\nGROUP BY aufgabenbereich_cofog_grobgliederung\nORDER BY SUM(ausgaben_in_mio_chf) DESC LIMIT 1;\n",
        "score": 0.688431978225708
      }
    ],
    "prompt": "You are an helpful AI assistant who writes SQL query for a given question. Given the database described by the database schema below, write a SQL query that answers the question.\nDo not explain the SQL query.\nReturn just the query, so it can be run verbatim from your response.\n### Database Schema\n\nCREATE TABLE experiment.spatial_unit (\n\tspatialunit_uid VARCHAR(30) NOT NULL, \n\tspatialunit_current_id INTEGER NOT NULL, \n\tspatialunit_ontology VARCHAR(30) NOT NULL, \n\tname VARCHAR(100) NOT NULL, \n\tname_de VARCHAR(100), \n\tname_fr VARCHAR(100), \n\tname_it VARCHAR(100), \n\tcountry BOOLEAN DEFAULT false NOT NULL, \n\tcanton BOOLEAN DEFAULT false NOT NULL, \n\tdistrict BOOLEAN DEFAULT false NOT NULL, \n\tmunicipal BOOLEAN DEFAULT false NOT NULL, \n\tresidence_area BOOLEAN DEFAULT false NOT NULL, \n\tneighborhood BOOLEAN DEFAULT false NOT NULL, \n\tregion BOOLEAN DEFAULT false NOT NULL, \n\tzone BOOLEAN, \n\tspatialunit_hist_id INTEGER, \n\tcanton_hist_id INTEGER, \n\tdistrict_hist_id INTEGER, \n\tvalid_from DATE, \n\tvalid_until DATE, \n\tCONSTRAINT spatial_unit_pkey PRIMARY KEY (spatialunit_uid)\n)\n/*\nColumns in spatial_unit and 5 examples in each column for high cardinality columns :\nspatialunit_uid : 2123_A.ADM3, 4746_A.ADM3, 5106_A.ADM3, 583_A.ADM3, 250_A.ADM3\nspatialunit_current_id : 5433, 4892, 5917, 1209, 624\nname : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_de : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_fr : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nname_it : Eggiwil, Auenstein, Filzbach, Gotthelf, Schafisheim\nspatialunit_hist_id : 11859, 11640, 15649, 11686, 14416\ncanton_hist_id : 12, 19, 2, 3, 21\ndistrict_hist_id : 10103, 10187, 10088, 10282, 10277\nvalid_from : 2018-01-01, 1960-01-01, 2020-01-01, 1979-01-01, 2003-01-01\nvalid_until : 2021-06-30, 2018-12-31, 1961-12-31, 1998-12-31, 2004-12-31\n*/\n\n\n\n\nCREATE TABLE experiment.staatsausgaben_nach_aufgabenbereichen_cofog (\n\tuid SERIAL NOT NULL, \n\tjahr INTEGER, \n\taufgabenbereich_cofog_feingliederung TEXT, \n\taufgabenbereich_cofog_grobgliederung TEXT, \n\tinstitutioneller_sektor TEXT, \n\tausgaben_in_mio_chf NUMERIC, \n\tprozent_der_gesamtausgaben NUMERIC, \n\tspatialunit_uid VARCHAR, \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofog_pkey PRIMARY KEY (uid), \n\tCONSTRAINT staatsausgaben_nach_aufgabenbereichen_cofo_spatialunit_uid_fkey FOREIGN KEY(spatialunit_uid) REFERENCES experiment.raeumliche_einheit (raeumliche_einheit_uid)\n)\n/*\nColumns in staatsausgaben_nach_aufgabenbereichen_cofog and 5 examples in each column for high cardinality columns :\nuid : 57, 61, 89, 19, 46\njahr : 2019, 2016, 1995, 2007, 2003\nausgaben_in_mio_chf : 2207, 4361, 2474, 19, 10482\nprozent_der_gesamtausgaben : 8.59999999999999964, 5.00000000000000000, 2.79999999999999982, 4.09999999999999964, 2.60000000000000009\n*/\n\n/*\nColumn name, Column discription, Example values\naufgabenbereich_cofog_feingliederung, Aufgabenbereich des Staates (COFOG Feingliederung), Alter,Wasserversorgung,Polizei\naufgabenbereich_cofog_grobgliederung, Aufgabenbereich des Staates (COFOG Grobgliederung), Umweltschutz,Bildungswesen,Freizeitgestaltung, Sport, Kultur und Religion\ninstitutioneller_sektor, institutioneller Sektor, Staat,Kantone,Bund,Gemeinden,\u00d6ffentliche Sozialversicherungen\nausgaben_in_mio_chf, Ausgaben in Millionen CHF, None\nprozent_der_gesamtausgaben, Prozent der Gesamtaugaben, None\n*/\n\n\n\n### Question\nWie viel hat jeder institutionelle Sektor im Jahr 2018 f\u00fcr den Umweltschutz ausgegeben?\n### SQL query\nSELECT SUM(ausgaben_in_mio_chf) as ausgaben_in_mio_chf, institutioneller_sektor\nFROM staatsausgaben_nach_aufgabenbereichen_cofog WHERE jahr = 2018 AND aufgabenbereich_cofog_grobgliederung = 'Umweltschutz'\nGROUP BY institutioneller_sektor\nORDER BY SUM(ausgaben_in_mio_chf) ASC;\n\n\n### Question\nWelcher Anteil des Schweizer Budgets wird jedes Jahr in Sicherheit investiert?\n### SQL query\n",
    "process_time": 13.201946592889726,
    "num_tokens": 1250,
    "hardness": "unknown",
    "scores": [
      0.688431978225708
    ],
    "lang": "de"
  }
]